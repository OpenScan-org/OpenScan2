[
    {
        "id": "829d803b6033a693",
        "type": "tab",
        "label": "HOME",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1613373abaf77a2c",
        "type": "tab",
        "label": "SCAN",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4981d84ef1a366d1",
        "type": "tab",
        "label": "Files&Cloud",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "017bd4e4a428bee5",
        "type": "tab",
        "label": "SETTINGS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c8e7ecb5849edb9a",
        "type": "tab",
        "label": "UPDATE",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b3150b13e34b1fe8",
        "type": "ui_tab",
        "name": "OpenScan",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b6e9c2df6b28ff66",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "OpenScan 3D Scanner",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 46,
                "sy": 46,
                "gx": 10,
                "gy": 10,
                "cx": 6,
                "cy": 6,
                "px": 6,
                "py": 6
            }
        }
    },
    {
        "id": "729f9ea6e3513c9b",
        "type": "ui_group",
        "name": "Home",
        "tab": "b3150b13e34b1fe8",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "65ae49b64fa0d83e",
        "type": "ui_tab",
        "name": "Settings",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4fe6b4c0ade0938a",
        "type": "ui_group",
        "name": "General",
        "tab": "65ae49b64fa0d83e",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "0fe66c9190b8a87c",
        "type": "ui_group",
        "name": "Network",
        "tab": "65ae49b64fa0d83e",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "93aadb71dee6d977",
        "type": "ui_group",
        "name": "Camera",
        "tab": "65ae49b64fa0d83e",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d49a6dfd7fb17096",
        "type": "ui_group",
        "name": "Motor",
        "tab": "65ae49b64fa0d83e",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "644b3bcc903d46ca",
        "type": "ui_group",
        "name": "Pinout",
        "tab": "65ae49b64fa0d83e",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e23b837a9f040895",
        "type": "ui_tab",
        "name": "Scan",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7aaf184330605300",
        "type": "ui_group",
        "name": "Settings",
        "tab": "e23b837a9f040895",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ce9cc9d915dc6eb6",
        "type": "ui_group",
        "name": "Picamera",
        "tab": "e23b837a9f040895",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "90223f7ddc082321",
        "type": "ui_group",
        "name": "Arducam",
        "tab": "e23b837a9f040895",
        "order": 3,
        "disp": false,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "7625f9c9e8dbc5c6",
        "type": "ui_spacer",
        "z": "017bd4e4a428bee5",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "3b4bd36726be16d5",
        "type": "ui_group",
        "name": "OpenScanCloud",
        "tab": "65ae49b64fa0d83e",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b5fdd57b.15eda8",
        "type": "ui_group",
        "name": "Main",
        "tab": "15a222ed.d70a7d",
        "order": 1,
        "disp": false,
        "width": 13,
        "collapse": false
    },
    {
        "id": "db43d646.2074c8",
        "type": "ui_group",
        "name": "OpenScanCloud",
        "tab": "15a222ed.d70a7d",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "15a222ed.d70a7d",
        "type": "ui_tab",
        "name": "Files&Cloud",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ddbd496e.93a288",
        "type": "ui_group",
        "name": "Manage Updates",
        "tab": "d25e08b4.5b27e8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "3ce32450.e0cffc",
        "type": "ui_group",
        "name": "Changelog",
        "tab": "d25e08b4.5b27e8",
        "order": 2,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d25e08b4.5b27e8",
        "type": "ui_tab",
        "name": "Update & Info",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ec3151e50a2123cc",
        "type": "ui_spacer",
        "z": "1613373abaf77a2c",
        "name": "spacer",
        "group": "7aaf184330605300",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "d2a27bdff2b5b181",
        "type": "ui_spacer",
        "z": "1613373abaf77a2c",
        "name": "spacer",
        "group": "7aaf184330605300",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "72181c3d89b81b55",
        "type": "ui_spacer",
        "z": "1613373abaf77a2c",
        "name": "spacer",
        "group": "7aaf184330605300",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "c848b709d6b32857",
        "type": "ui_spacer",
        "z": "1613373abaf77a2c",
        "name": "spacer",
        "group": "7aaf184330605300",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "c31e7b724cb8d75e",
        "type": "ui_spacer",
        "z": "1613373abaf77a2c",
        "name": "spacer",
        "group": "90223f7ddc082321",
        "order": 14,
        "width": 2,
        "height": 1
    },
    {
        "id": "503d343150aec134",
        "type": "ui_spacer",
        "z": "1613373abaf77a2c",
        "name": "spacer",
        "group": "90223f7ddc082321",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "d108896a0a1920bc",
        "type": "ui_spacer",
        "z": "1613373abaf77a2c",
        "name": "spacer",
        "group": "90223f7ddc082321",
        "order": 16,
        "width": 2,
        "height": 1
    },
    {
        "id": "b19c79ddaab85e7f",
        "type": "ui_spacer",
        "z": "4981d84ef1a366d1",
        "name": "spacer",
        "group": "4fe6b4c0ade0938a",
        "order": 6,
        "width": 6,
        "height": 1
    },
    {
        "id": "f74b159e7d0a8c88",
        "type": "ui_spacer",
        "z": "4981d84ef1a366d1",
        "name": "spacer",
        "group": "4fe6b4c0ade0938a",
        "order": 11,
        "width": 6,
        "height": 1
    },
    {
        "id": "17e63b040a6599bf",
        "type": "ui_spacer",
        "z": "4981d84ef1a366d1",
        "name": "spacer",
        "group": "4fe6b4c0ade0938a",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "c0ecf4658a47fc9e",
        "type": "ui_spacer",
        "z": "4981d84ef1a366d1",
        "name": "spacer",
        "group": "4fe6b4c0ade0938a",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "6647254895d4e0ec",
        "type": "ui_spacer",
        "z": "4981d84ef1a366d1",
        "name": "spacer",
        "group": "3b4bd36726be16d5",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "620eb1ec20ed826e",
        "type": "ui_spacer",
        "z": "4981d84ef1a366d1",
        "name": "spacer",
        "group": "3b4bd36726be16d5",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "3fe52603e2ac73b6",
        "type": "ui_template",
        "z": "829d803b6033a693",
        "group": "729f9ea6e3513c9b",
        "name": "Background",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n    body {\n        background-image: url(\"/files/logo.jpg\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center;\n\n    }\n    #Home_Home {\n        background-color: #cccccc00 !important;\n        border-color: #cccccc00 !important;\n    }\n\n    \n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 110,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "4468f691.103eb8",
        "type": "ui_button",
        "z": "829d803b6033a693",
        "name": "",
        "group": "729f9ea6e3513c9b",
        "order": 2,
        "width": 3,
        "height": 2,
        "passthru": false,
        "label": "SCAN",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 90,
        "y": 100,
        "wires": [
            [
                "62cd5288.2805fc"
            ]
        ]
    },
    {
        "id": "6560dd25.9e76c4",
        "type": "ui_button",
        "z": "829d803b6033a693",
        "name": "",
        "group": "729f9ea6e3513c9b",
        "order": 4,
        "width": 3,
        "height": 2,
        "passthru": false,
        "label": "Settings",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "3",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 100,
        "y": 180,
        "wires": [
            [
                "62cd5288.2805fc"
            ]
        ]
    },
    {
        "id": "62cd5288.2805fc",
        "type": "ui_ui_control",
        "z": "829d803b6033a693",
        "name": "",
        "events": "all",
        "x": 280,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "71e72293.91c6fc",
        "type": "ui_button",
        "z": "829d803b6033a693",
        "name": "",
        "group": "729f9ea6e3513c9b",
        "order": 3,
        "width": 3,
        "height": 2,
        "passthru": false,
        "label": "Files",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "2",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 90,
        "y": 140,
        "wires": [
            [
                "62cd5288.2805fc"
            ]
        ]
    },
    {
        "id": "e7306ef2.3b4df",
        "type": "ui_button",
        "z": "829d803b6033a693",
        "name": "",
        "group": "729f9ea6e3513c9b",
        "order": 5,
        "width": 3,
        "height": 2,
        "passthru": false,
        "label": "Update&Info",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "4",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "62cd5288.2805fc"
            ]
        ]
    },
    {
        "id": "88edad7ca53698fd",
        "type": "inject",
        "z": "829d803b6033a693",
        "name": "1s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "000a811a215e08d4",
                "83c2b5ea51f0fec3",
                "88fde4ab78c965d7",
                "bee62d2a99cbc63b"
            ]
        ]
    },
    {
        "id": "bd75f33b8a57c522",
        "type": "link out",
        "z": "829d803b6033a693",
        "name": "enable",
        "mode": "link",
        "links": [
            "92c98e6ce7cd25f9"
        ],
        "x": 335,
        "y": 360,
        "wires": []
    },
    {
        "id": "000a811a215e08d4",
        "type": "function",
        "z": "829d803b6033a693",
        "name": "enable",
        "func": "msg.enabled = true\nmsg.payload = 1\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 360,
        "wires": [
            [
                "bd75f33b8a57c522"
            ]
        ]
    },
    {
        "id": "83c2b5ea51f0fec3",
        "type": "function",
        "z": "829d803b6033a693",
        "name": "disable",
        "func": "msg.enabled = false\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 400,
        "wires": [
            [
                "6b94bf2295b1b31d"
            ]
        ]
    },
    {
        "id": "6b94bf2295b1b31d",
        "type": "link out",
        "z": "829d803b6033a693",
        "name": "disable",
        "mode": "link",
        "links": [
            "a1d29e56599da0bd"
        ],
        "x": 335,
        "y": 400,
        "wires": []
    },
    {
        "id": "88fde4ab78c965d7",
        "type": "function",
        "z": "829d803b6033a693",
        "name": "write",
        "func": "var file = 'status_cloud'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\ncontent = 'ready'\n\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "960912e90ba5b5bc",
        "type": "link out",
        "z": "829d803b6033a693",
        "name": "started1s",
        "mode": "link",
        "links": [
            "2f4c0f98.dee2",
            "397ab7f44b893c89",
            "65145c939b6647e2",
            "65b38bfeb3fee710",
            "6d1e12f51f9af0b6",
            "788fabff98c7973c",
            "9b2bc9849aee310b",
            "a1e14624058e74cd",
            "a67c18aaca2f5fa5",
            "bd80ec228fb9a86d",
            "cc9c4092edeb43cc",
            "d3fc91d87d5d5f62",
            "d7c1fb4c028b21a5",
            "e5f38b4a07a5e278",
            "f0b355967b33dfee",
            "d0104e0163745993",
            "5e7d5e4335d37794"
        ],
        "x": 615,
        "y": 720,
        "wires": []
    },
    {
        "id": "168d72a54504b327",
        "type": "inject",
        "z": "829d803b6033a693",
        "name": "5/0.1s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 100,
        "y": 640,
        "wires": [
            [
                "6c6ef2255a7d39e5"
            ]
        ]
    },
    {
        "id": "6c6ef2255a7d39e5",
        "type": "link out",
        "z": "829d803b6033a693",
        "name": "repeat 5s/0.1s",
        "mode": "link",
        "links": [
            "61990987acd0f263",
            "2415272f42ce468c",
            "40fcd859005250c3"
        ],
        "x": 195,
        "y": 640,
        "wires": []
    },
    {
        "id": "bee62d2a99cbc63b",
        "type": "function",
        "z": "829d803b6033a693",
        "name": "global",
        "func": "global.set('flag_pw', true)\nglobal.set('flag', true)\nglobal.set('combine', false)\nglobal.set('focus', 2838)\nglobal.set('focus1', 0)\nglobal.set('focus2', 0)\n\nglobal.set('focuser', true)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "544d20f02215011a",
        "type": "function",
        "z": "829d803b6033a693",
        "name": "CREATE FACTORY DEFAULT",
        "func": "msg = { \n'overwrite':msg.overwrite,\n'settings':\n    {\n    'advanced_settings':false,\n    'cameras':{\n        'imx519':[4656,3496],\n        'imx219':[3280,2464],\n        'imx477':[4056,3040],\n        'ov5647':[2592,1944],\n        'imx378':[3840,2880],\n        'ov9271':[1280,800],\n        'imx290a':[1920,1080],\n        'imx290b':[1920,1080],\n    },\n    'cam_AFmode':true,\n    'cam_STmode':true,\n    'cam_stacksize':2,\n    'cam_awbg_blue':0,\n    'cam_awbg_red':0,\n    'cam_contrast':1,\n    'cam_cropx':0,\n    'cam_cropy':0,\n    'cam_delay_after':0,\n    'cam_delay_before':0,\n    'camera':'',\n    'cam_gain':1,\n    'cam_jpeg_quality':95,\n    'cam_rotation':0,\n    'cam_saturation':1,\n    'cam_shutter':50000,\n    'cam_timeout':800,\n    'hostname':'',\n    'model':'',\n    'osc_credit':'',\n    'osc_limit_filesize':'',\n    'osc_limit_photos':'',\n    'osc_splitsize':200000000,\n    'pin_endstop1':24,\n    'pin_endstop2':25,\n    'pin_external':10,\n    'pin_ringlight1':17,\n    'pin_ringlight2':27,\n    'pin_rotor_dir':5,\n    'pin_rotor_enable':23,\n    'pin_rotor_step':6,\n    'pin_tt_dir':9,\n    'pin_tt_enable':22,\n    'pin_tt_step':11,\n    'rotor_acc':1,\n    'rotor_accramp':2000,\n    'rotor_angle':10,\n    'rotor_anglemax':60,\n    'rotor_anglemin':-40,\n    'rotor_anglestart':0,\n    'rotor_delay':0.0001,\n    'rotor_dir':1,\n    'rotor_stepsperrotation':48000,\n    'routine_photocount':50,\n    'routine_projectname':'default',\n    'smb':true,\n    'ssh':true,\n    'status_cloud':'ready',\n    'status_internal_cam':'--READY--',\n    'status_uploadprogress':'',\n    'terms':false,\n    'token':'',\n    'tt_acc':1,\n    'tt_accramp':200,\n    'tt_angle':10,\n    'tt_delay':0.0001,\n    'tt_dir':1,\n    'tt_stepsperrotation':3600,\n    'cam_focus':2838,\n    'cam_focus1':0,\n    'cam_focus2':0,\n    'uploadprogress':'',\n    'update_type':'main',\n    'update_auto':true,\n}}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 720,
        "wires": [
            [
                "c77552216a8bb781"
            ]
        ]
    },
    {
        "id": "a1f0ed7d5a9d670e",
        "type": "inject",
        "z": "829d803b6033a693",
        "name": "",
        "props": [
            {
                "p": "overwrite",
                "v": "false",
                "vt": "bool"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "x": 90,
        "y": 720,
        "wires": [
            [
                "544d20f02215011a"
            ]
        ]
    },
    {
        "id": "c77552216a8bb781",
        "type": "python3-function",
        "z": "829d803b6033a693",
        "name": "chk files",
        "func": "from os import listdir\n\nbasedir = '/home/pi/OpenScan/settings/'\n\nmsg['payload'] = ''\n\nfiles = listdir(basedir)\n\nfor i in msg['settings']:\n    if msg['overwrite'] != True:\n        if i not in files:\n            with open(basedir + i, 'w+') as file:\n                file.write(str(msg['settings'][i]))        \n    else:\n        with open(basedir + i, 'w+') as file:\n            file.write(str(msg['settings'][i])) \n\nmsg['payload'] = True\n\nreturn msg",
        "outputs": 1,
        "x": 520,
        "y": 720,
        "wires": [
            [
                "960912e90ba5b5bc"
            ]
        ]
    },
    {
        "id": "38783aea9cc317a6",
        "type": "link in",
        "z": "829d803b6033a693",
        "name": "factory reset",
        "links": [
            "80bccc884b0be297"
        ],
        "x": 135,
        "y": 760,
        "wires": [
            [
                "544d20f02215011a"
            ]
        ]
    },
    {
        "id": "828e5298.d2192",
        "type": "ui_button",
        "z": "1613373abaf77a2c",
        "name": "",
        "group": "7aaf184330605300",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "⇐",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 90,
        "y": 400,
        "wires": [
            [
                "b12e54fb.3141b8"
            ]
        ]
    },
    {
        "id": "96c7e241.458e6",
        "type": "ui_button",
        "z": "1613373abaf77a2c",
        "name": "",
        "group": "7aaf184330605300",
        "order": 10,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "⇒",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 90,
        "y": 440,
        "wires": [
            [
                "37f52dd4.bd7572"
            ]
        ]
    },
    {
        "id": "2e854876.6b6008",
        "type": "ui_button",
        "z": "1613373abaf77a2c",
        "name": "",
        "group": "7aaf184330605300",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": true,
        "label": "⇑",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 90,
        "y": 280,
        "wires": [
            [
                "555aea34.b3b5e4"
            ]
        ]
    },
    {
        "id": "753817f.1b9b3e8",
        "type": "ui_button",
        "z": "1613373abaf77a2c",
        "name": "",
        "group": "7aaf184330605300",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": true,
        "label": "⇓",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "9905e0c9.dddcd"
            ]
        ]
    },
    {
        "id": "8775044.3aa3ef8",
        "type": "ui_text",
        "z": "1613373abaf77a2c",
        "group": "7aaf184330605300",
        "order": 8,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Turntable",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 100,
        "y": 360,
        "wires": []
    },
    {
        "id": "9e8a2d23.bf6ce",
        "type": "ui_text",
        "z": "1613373abaf77a2c",
        "group": "7aaf184330605300",
        "order": 5,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Rotor",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 90,
        "y": 240,
        "wires": []
    },
    {
        "id": "555aea34.b3b5e4",
        "type": "delay",
        "z": "1613373abaf77a2c",
        "name": "lmt 0.2/s",
        "pauseType": "rate",
        "timeout": "0.1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "0.2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 220,
        "y": 280,
        "wires": [
            [
                "46e00b45.c24ca4"
            ]
        ]
    },
    {
        "id": "9905e0c9.dddcd",
        "type": "delay",
        "z": "1613373abaf77a2c",
        "name": "lmt 0.2/s",
        "pauseType": "rate",
        "timeout": "0.1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "0.2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 220,
        "y": 320,
        "wires": [
            [
                "6ee089cb343a35ef"
            ]
        ]
    },
    {
        "id": "b12e54fb.3141b8",
        "type": "delay",
        "z": "1613373abaf77a2c",
        "name": "lmt 0.2/s",
        "pauseType": "rate",
        "timeout": "0.1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "0.2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 220,
        "y": 400,
        "wires": [
            [
                "c1871a2b9af5419a"
            ]
        ]
    },
    {
        "id": "37f52dd4.bd7572",
        "type": "delay",
        "z": "1613373abaf77a2c",
        "name": "lmt 0.2/s",
        "pauseType": "rate",
        "timeout": "0.1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "0.2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 220,
        "y": 440,
        "wires": [
            [
                "42b9f1fc49e69f54"
            ]
        ]
    },
    {
        "id": "46e00b45.c24ca4",
        "type": "python3-function",
        "z": "1613373abaf77a2c",
        "name": "Rotor left",
        "func": "from OpenScan import motorrun, load_int\n\nmotorrun('rotor',load_int('rotor_angle'))",
        "outputs": 1,
        "x": 360,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "6ee089cb343a35ef",
        "type": "python3-function",
        "z": "1613373abaf77a2c",
        "name": "Rotor right",
        "func": "from OpenScan import motorrun, load_int\n\nmotorrun('rotor',-load_int('rotor_angle'))",
        "outputs": 1,
        "x": 370,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "42b9f1fc49e69f54",
        "type": "python3-function",
        "z": "1613373abaf77a2c",
        "name": "TT right",
        "func": "from OpenScan import motorrun, load_int\n\nmotorrun('tt',-load_int('tt_angle'))",
        "outputs": 1,
        "x": 360,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "c1871a2b9af5419a",
        "type": "python3-function",
        "z": "1613373abaf77a2c",
        "name": "TT left",
        "func": "from OpenScan import motorrun, load_int\n\nmotorrun('tt',load_int('tt_angle'))",
        "outputs": 1,
        "x": 350,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "aebad788761dce4a",
        "type": "ui_slider",
        "z": "1613373abaf77a2c",
        "name": "routine_photocount",
        "label": "",
        "tooltip": "",
        "group": "7aaf184330605300",
        "order": 15,
        "width": 3,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "10",
        "max": "300",
        "step": "10",
        "className": "",
        "x": 350,
        "y": 540,
        "wires": [
            [
                "ce28a0b5bfb0d5a1"
            ]
        ]
    },
    {
        "id": "107a030938cbfea9",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "loadI",
        "func": "var file = 'routine_photocount'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 540,
        "wires": [
            [
                "aebad788761dce4a"
            ]
        ]
    },
    {
        "id": "ce28a0b5bfb0d5a1",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "write",
        "func": "var file = 'routine_photocount'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "84d6b96c8ebaac96",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "loadF",
        "func": "var file = 'cam_shutter'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data) / 1000;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 580,
        "wires": [
            [
                "470b10726d298834"
            ]
        ]
    },
    {
        "id": "470b10726d298834",
        "type": "ui_slider",
        "z": "1613373abaf77a2c",
        "name": "shutter ",
        "label": " ",
        "tooltip": "",
        "group": "7aaf184330605300",
        "order": 17,
        "width": 3,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "1",
        "max": "700",
        "step": "1",
        "className": "",
        "x": 310,
        "y": 580,
        "wires": [
            [
                "44c3947a9b92d32d"
            ]
        ]
    },
    {
        "id": "44c3947a9b92d32d",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "write",
        "func": "var file = 'cam_shutter'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload * 1000)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "069bcf58b1fe44cd",
        "type": "ui_text",
        "z": "1613373abaf77a2c",
        "group": "7aaf184330605300",
        "order": 14,
        "width": 3,
        "height": 1,
        "name": "photocount",
        "label": "Photos",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 670,
        "y": 540,
        "wires": []
    },
    {
        "id": "8dc7df1de59cb03a",
        "type": "ui_text",
        "z": "1613373abaf77a2c",
        "group": "7aaf184330605300",
        "order": 16,
        "width": 3,
        "height": 1,
        "name": "shutter",
        "label": "Shutter (ms)",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 650,
        "y": 580,
        "wires": []
    },
    {
        "id": "cc69dba8d54a29dd",
        "type": "ui_slider",
        "z": "1613373abaf77a2c",
        "name": "Crop X",
        "label": " ",
        "tooltip": "",
        "group": "7aaf184330605300",
        "order": 19,
        "width": 3,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0",
        "max": "99",
        "step": "1",
        "className": "",
        "x": 310,
        "y": 620,
        "wires": [
            [
                "c2b2ab5524271123"
            ]
        ]
    },
    {
        "id": "e3a90602605fb9e9",
        "type": "ui_slider",
        "z": "1613373abaf77a2c",
        "name": "Crop Y",
        "label": " ",
        "tooltip": "",
        "group": "7aaf184330605300",
        "order": 21,
        "width": 3,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0",
        "max": "99",
        "step": "1",
        "className": "",
        "x": 310,
        "y": 660,
        "wires": [
            [
                "26f17a7f406df73c"
            ]
        ]
    },
    {
        "id": "9c6b48b7b4cc4e1a",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "loadI",
        "func": "var file = 'cam_cropx'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 620,
        "wires": [
            [
                "cc69dba8d54a29dd"
            ]
        ]
    },
    {
        "id": "c470fd0b15356206",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "loadI",
        "func": "var file = 'cam_cropy'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 660,
        "wires": [
            [
                "e3a90602605fb9e9"
            ]
        ]
    },
    {
        "id": "c2b2ab5524271123",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "write",
        "func": "var file = 'cam_cropx'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "26f17a7f406df73c",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "write",
        "func": "var file = 'cam_cropy'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "fecf5cff888bb570",
        "type": "ui_text",
        "z": "1613373abaf77a2c",
        "group": "7aaf184330605300",
        "order": 18,
        "width": 3,
        "height": 1,
        "name": "cropx",
        "label": "Crop X (%)",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 650,
        "y": 620,
        "wires": []
    },
    {
        "id": "0ee4950bd21498bd",
        "type": "ui_text",
        "z": "1613373abaf77a2c",
        "group": "7aaf184330605300",
        "order": 20,
        "width": 3,
        "height": 1,
        "name": "cropy",
        "label": "Crop Y (%)",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 670,
        "y": 660,
        "wires": []
    },
    {
        "id": "ebbf11b55d758806",
        "type": "ui_text_input",
        "z": "1613373abaf77a2c",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "7aaf184330605300",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 320,
        "y": 500,
        "wires": [
            [
                "67385b196c517ac6"
            ]
        ]
    },
    {
        "id": "f4b3112a9ec6c487",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "msg",
        "func": "msg.payload=\"default\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 500,
        "wires": [
            [
                "ebbf11b55d758806"
            ]
        ]
    },
    {
        "id": "67385b196c517ac6",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "write",
        "func": "var file = 'routine_projectname'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload).replace(/ /g, '_')\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "4dd7285c2b0fd79b",
        "type": "ui_slider",
        "z": "1613373abaf77a2c",
        "name": "ringlight",
        "label": "",
        "tooltip": "",
        "group": "7aaf184330605300",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "topicType": "str",
        "min": 0,
        "max": "3",
        "step": 1,
        "className": "",
        "x": 320,
        "y": 700,
        "wires": [
            [
                "50d94e9385cd4845"
            ]
        ]
    },
    {
        "id": "873dace18a23fdf2",
        "type": "python3-function",
        "z": "1613373abaf77a2c",
        "name": "LED",
        "func": "from OpenScan import ringlight\nval = msg['payload']\n\nif val == 0:\n    ringlight(1,False)\n    ringlight(2,False)\nelif val == 1:\n    ringlight(1,False)\n    ringlight(2,True)\nelif val == 2:\n    ringlight(1,True)\n    ringlight(2,False)\nelif val == 3:\n    ringlight(1,True)\n    ringlight(2,True)\n",
        "outputs": 1,
        "x": 390,
        "y": 980,
        "wires": [
            [
                "82c8ad50ecfbc755"
            ]
        ]
    },
    {
        "id": "9e30e33a1520fee0",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "loadI",
        "func": "msg.payload = 0\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 700,
        "wires": [
            [
                "4dd7285c2b0fd79b"
            ]
        ]
    },
    {
        "id": "7dd287f40385922f",
        "type": "ui_button",
        "z": "1613373abaf77a2c",
        "name": "start ",
        "group": "7aaf184330605300",
        "order": 23,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-play",
        "payload": "",
        "payloadType": "date",
        "topic": "enabled",
        "topicType": "str",
        "x": 230,
        "y": 1100,
        "wires": [
            [
                "431f917c2541ae48",
                "33d94a04b96a2de0",
                "6d15f717d5a11002"
            ]
        ]
    },
    {
        "id": "579f2211199fd6ab",
        "type": "ui_button",
        "z": "1613373abaf77a2c",
        "name": "stop",
        "group": "7aaf184330605300",
        "order": 24,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-stop",
        "payload": "numberofphotos",
        "payloadType": "global",
        "topic": "",
        "topicType": "str",
        "x": 570,
        "y": 1140,
        "wires": [
            [
                "1787f08ed7070ddd",
                "c1c044f3c2139f68"
            ]
        ]
    },
    {
        "id": "431f917c2541ae48",
        "type": "python3-function",
        "z": "1613373abaf77a2c",
        "name": "Routine",
        "func": "from OpenScan import load_str, load_int, motorrun, create_coordinates, take_photo, save, load_bool, camera\nfrom time import sleep, strftime\nfrom zipfile import ZipFile, ZIP_DEFLATED\nfrom os import system\nfrom os.path import isfile\nfrom Arducam import Focuser\n\nif load_str(\"status_internal_cam\")==\"no camera found\" or load_str(\"status_internal_cam\")[:5]==\"Featu\":\n    return\n\nsave('status_internal_cam','Routine-preparing')\nsleep(2)\n\nprojectname=load_str(\"routine_projectname\")\nphotocount = load_int('routine_photocount') #vorher point_count\nangle_max = load_int('rotor_anglemax')\nangle_min = load_int('rotor_anglemin')\nangle_start = load_int('rotor_anglestart')\nprojectcode = strftime('20%y-%m-%d_%H.%M.%S-') + projectname\ncam = load_str('camera')\nSTmode = load_bool('cam_STmode')\n\nif cam == 'imx519' and STmode == True:\n    focuser = Focuser('/dev/v4l-subdev1')\n    stacksize = load_int('cam_stacksize')\n    focus1 = load_int('cam_focus1')\n    focus2 = load_int('cam_focus2')\n    if focus1 > focus2:\n        focus2 = focus1\n        focus1 = load_int('cam_focus2') \n    focusstep = int((focus2-focus1)/(stacksize - 1))\n\n\ncoordinates = create_coordinates(angle_min,angle_max,photocount)\nposition_last = (angle_start , 0)\ncounter = 0\nbasepath = '/home/pi/OpenScan/'\ntemppath = basepath + 'tmp/tmp.jpg'\nzippath = basepath + 'tmp/tmp.zip'\n\nif isfile(zippath):\n    system('rm ' + zippath)\n\nzip = ZipFile(zippath, \"w\",ZIP_DEFLATED, allowZip64=True)\n\nfor position in coordinates:\n    counter += 1\n    if load_str('status_internal_cam') == \"Routine-stopping\":\n        break\n\n    filepath = basepath + 'tmp/' + projectname + '_' + str(counter) + \".jpg\"\n\n    rotor_angle = position_last[0] - position[0]\n    if abs(rotor_angle) > 180:\n        rotor_angle = -360 * rotor_angle/abs(rotor_angle) + rotor_angle\n\n    tt_angle = position_last[1] - position[1]\n    if abs(tt_angle) > 180:\n        tt_angle = -360 * tt_angle/abs(tt_angle) + tt_angle\n            \n    motorrun('rotor', rotor_angle)\n    motorrun('tt', tt_angle)\n\n    msg['cropx'] = load_int('cam_cropx')\n    msg['cropy'] = load_int('cam_cropy')\n    msg['rotation'] = load_int('cam_rotation')\n    msg['filepath_in'] = 'tmp/tmp.jpg'\n    msg['filepath_out'] = 'tmp/tmp.jpg'\n    msg['filepath'] = 'tmp/tmp.jpg'\n\n    if STmode == True:\n        counter2 = 0\n        for focus in range (stacksize):\n            if load_str('status_internal_cam') == \"Routine-stopping\":\n                break\n            counter2 += 1\n            save('status_internal_cam','Routine-' + str(counter) + '/' + str(photocount) + ' F' + str(counter2))\n            focuser.write(focus1 + focus * focusstep)\n            take_photo('tmp/tmp.jpg')\n            camera('/crop',msg)\n            zip.write(temppath, projectname + '_' + str(counter) + '-' + str(focus) + \".jpg\")\n            system('cp ' + temppath + ' ' + basepath +'tmp/preview.jpg')\n    elif cam != 'external':\n        save('status_internal_cam','Routine-Photo ' + str(counter) + '/' + str(photocount))\n\n        if cam == 'gphoto':\n            camera('/gphoto_capture', msg)\n        if cam in ('imx219','ov5647','imx477','imx290a','imx290b','imx378','ov9281','imx519'):\n            take_photo('tmp/tmp.jpg')\n        camera('/crop',msg)\n        \n        zip.write(temppath, projectname + '_' + str(counter) + \".jpg\")\n        system('cp ' + temppath + ' ' + basepath +'tmp/preview.jpg')\n    elif cam == 'external':\n        camera('external_capture')\n\n    position_last = position\n\nzip.close()\n\nsystem('mv '+ zippath + ' ' + basepath + 'scans/' + projectcode + '.zip')\n\nsave('status_internal_cam','Routine-done')\n\nmotorrun('rotor',position_last[0] - angle_start)\nmotorrun('tt',position_last[1])\n\nsave('status_internal_cam','--READY--')\n\nmsg['enabled'] = False\nreturn msg\n\n",
        "outputs": 1,
        "x": 380,
        "y": 1100,
        "wires": [
            [
                "579f2211199fd6ab",
                "1daf9e3a5bd5ab48"
            ]
        ]
    },
    {
        "id": "1787f08ed7070ddd",
        "type": "python3-function",
        "z": "1613373abaf77a2c",
        "name": "stop",
        "func": "from OpenScan import load_str, save\n\nstatus = load_str('status_internal_cam')\n\nif status == 'no camera found' or status[:5]=='Featu' or status =='--READY--':\n    return\n\nsave('status_internal_cam', 'Routine-stopping')",
        "outputs": 1,
        "x": 690,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "e9b13dfd9f8d3711",
        "type": "link out",
        "z": "1613373abaf77a2c",
        "name": "",
        "mode": "link",
        "links": [
            "8367cfa0bf5bc5df",
            "b33d604c.5f1a6"
        ],
        "x": 475,
        "y": 1060,
        "wires": []
    },
    {
        "id": "5ba05110851a5096",
        "type": "ui_button",
        "z": "1613373abaf77a2c",
        "name": "reboot",
        "group": "7aaf184330605300",
        "order": 27,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "reboot",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-repeat",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "topicType": "str",
        "x": 170,
        "y": 1220,
        "wires": [
            [
                "16c76929f88df841"
            ]
        ]
    },
    {
        "id": "152d402caa595189",
        "type": "ui_button",
        "z": "1613373abaf77a2c",
        "name": "shutdown",
        "group": "7aaf184330605300",
        "order": 28,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "shutdown",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-power-off",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "topicType": "str",
        "x": 180,
        "y": 1260,
        "wires": [
            [
                "597bfb653e8cddbf"
            ]
        ]
    },
    {
        "id": "16c76929f88df841",
        "type": "link out",
        "z": "1613373abaf77a2c",
        "name": "",
        "mode": "link",
        "links": [
            "9bb0adbd716ce347"
        ],
        "x": 295,
        "y": 1220,
        "wires": []
    },
    {
        "id": "597bfb653e8cddbf",
        "type": "link out",
        "z": "1613373abaf77a2c",
        "name": "",
        "mode": "link",
        "links": [
            "fc9abb94c35eec56"
        ],
        "x": 295,
        "y": 1260,
        "wires": []
    },
    {
        "id": "9654deebb668e012",
        "type": "inject",
        "z": "1613373abaf77a2c",
        "name": "1s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 370,
        "y": 1180,
        "wires": [
            [
                "c1c044f3c2139f68"
            ]
        ]
    },
    {
        "id": "8367cfa0bf5bc5df",
        "type": "link in",
        "z": "1613373abaf77a2c",
        "name": "start routine",
        "links": [
            "210ef5246d1a8790",
            "84608db962fd9932",
            "8689e938.dd9e38",
            "f20f2dbc.0f123",
            "e9b13dfd9f8d3711",
            "96bdb9417e38810f",
            "fb13752beddee9f2"
        ],
        "x": 135,
        "y": 1100,
        "wires": [
            [
                "7dd287f40385922f"
            ]
        ]
    },
    {
        "id": "fb13752beddee9f2",
        "type": "link out",
        "z": "1613373abaf77a2c",
        "name": "",
        "mode": "link",
        "links": [
            "2f4c0f98.dee2",
            "8367cfa0bf5bc5df",
            "b33d604c.5f1a6"
        ],
        "x": 655,
        "y": 1100,
        "wires": []
    },
    {
        "id": "95439678bb2df2a2",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "enable",
        "func": "msg.flag = global.get('flag')\nif (global.get('flag_pw')== true){\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1440,
        "wires": [
            [
                "04cc2467807d2d6b",
                "14f9617b5b301318"
            ]
        ]
    },
    {
        "id": "948a3ae4444685f2",
        "type": "change",
        "z": "1613373abaf77a2c",
        "name": "flag_pw true",
        "rules": [
            {
                "t": "set",
                "p": "flag_pw",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "04cc2467807d2d6b",
        "type": "change",
        "z": "1613373abaf77a2c",
        "name": "flag_pw false",
        "rules": [
            {
                "t": "set",
                "p": "flag_pw",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "12f1399b240830bf",
        "type": "exec",
        "z": "1613373abaf77a2c",
        "command": " v4l2-ctl --list-formats-ext",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "check cam",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "6222f781629c72e7"
            ],
            [
                "6222f781629c72e7"
            ],
            []
        ]
    },
    {
        "id": "6222f781629c72e7",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "write",
        "func": "var file = 'status_internal_cam'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\ncontent = '--READY--'\n\nif (msg.payload.includes('Cannot open device')){\n    content = 'no camera found'\n}\n\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return msg\n  }\n  });\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 100,
        "wires": [
            [
                "e89c16809f8a5f1c"
            ]
        ]
    },
    {
        "id": "e978bf8c53d1f15a",
        "type": "comment",
        "z": "1613373abaf77a2c",
        "name": "Settings internal cam",
        "info": "",
        "x": 120,
        "y": 40,
        "wires": []
    },
    {
        "id": "ccb7da246de908d1",
        "type": "comment",
        "z": "1613373abaf77a2c",
        "name": "preview internal cam",
        "info": "",
        "x": 190,
        "y": 1340,
        "wires": []
    },
    {
        "id": "e9566588c5e40637",
        "type": "inject",
        "z": "1613373abaf77a2c",
        "name": "4s/0.5",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": "4",
        "topic": "Repeat",
        "payload": "0.2",
        "payloadType": "str",
        "x": 160,
        "y": 1440,
        "wires": [
            [
                "95439678bb2df2a2"
            ]
        ]
    },
    {
        "id": "14f9617b5b301318",
        "type": "python3-function",
        "z": "1613373abaf77a2c",
        "name": "Take Preview Shot",
        "func": "from time import time, sleep\nfrom OpenScan import load_str, load_bool, take_photo, camera, load_int,save\nsleep(0.5)\n\n\nstatus = load_str('status_internal_cam')\ncam=load_str('camera')\n\n\nif msg['flag'] == False and not 'Routine' in status:\n    return\n\nif cam == 'external':\n    return\n\nmsg['payload']=\"/tmp/preview.jpg?ts=\"+str(int(time()*10))\n\nif cam == 'gphoto' and status == 'no camera found':\n    if camera('/gphoto_init') == 200:\n        save('status_internal_cam','--READY--')\n\nif status!=\"--READY--\":\n    return msg\n\nmsg['cropx'] = load_int('cam_cropx')\nmsg['cropy'] = load_int('cam_cropy')\nmsg['rotation'] = load_int('cam_rotation')\nmsg['filepath_in'] = 'tmp/tmp.jpg'\nmsg['filepath_out'] = 'tmp/preview.jpg'\nmsg['filepath'] = 'tmp/tmp.jpg'\n\nif cam == 'gphoto':\n    if camera('/gphoto_test', msg) != 200:\n        save('status_internal_cam','no camera found')\n        return msg\n    camera('/gphoto_preview', msg)\n\nif cam in ('imx219','ov5647','imx477','imx290a','imx290b','imx378','ov9281','imx519'):\n    take_photo('tmp/tmp.jpg')\n\ncamera('/crop',msg)\n\nreturn msg\n",
        "outputs": 1,
        "x": 490,
        "y": 1440,
        "wires": [
            [
                "948a3ae4444685f2",
                "991b587d406d0d91",
                "8f5d87ce24c40b11"
            ]
        ]
    },
    {
        "id": "991b587d406d0d91",
        "type": "ui_template",
        "z": "1613373abaf77a2c",
        "group": "ce9cc9d915dc6eb6",
        "name": "preview_internal",
        "order": 1,
        "width": 12,
        "height": 12,
        "format": "<div align=\"center\" >\n<img ng-src= {{msg.payload}} style=\"width: auto; height: auto;max-width: 606px;max-height: 606px\"/>\n\n</div>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 700,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "1118d0965ff7c40b",
        "type": "ui_text",
        "z": "1613373abaf77a2c",
        "group": "7aaf184330605300",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "projectname",
        "label": "Projectname",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 670,
        "y": 500,
        "wires": []
    },
    {
        "id": "82c8ad50ecfbc755",
        "type": "ui_text",
        "z": "1613373abaf77a2c",
        "group": "7aaf184330605300",
        "order": 11,
        "width": 3,
        "height": 1,
        "name": "ringlight",
        "label": "Ringlight",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 560,
        "y": 980,
        "wires": []
    },
    {
        "id": "33d94a04b96a2de0",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "enable",
        "func": "global.set('flag', false)\n\nvar file = 'status_internal_cam'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\ndata = fs.readFileSync(filepath+file, 'utf8');\n\n\nif (data === 'no camera found' || data.substring(0,5) === 'Featu'){\n    return\n}\n\nmsg.enabled = true\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1140,
        "wires": [
            [
                "579f2211199fd6ab"
            ]
        ]
    },
    {
        "id": "c1c044f3c2139f68",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "msg",
        "func": "msg.enabled = false\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1180,
        "wires": [
            [
                "579f2211199fd6ab"
            ]
        ]
    },
    {
        "id": "9a368472a72fbc48",
        "type": "comment",
        "z": "1613373abaf77a2c",
        "name": "preview arducam with focus",
        "info": "",
        "x": 220,
        "y": 1580,
        "wires": []
    },
    {
        "id": "8f5d87ce24c40b11",
        "type": "ui_template",
        "z": "1613373abaf77a2c",
        "group": "90223f7ddc082321",
        "name": "preview_arducam",
        "order": 2,
        "width": 10,
        "height": 12,
        "format": "<div align=\"center\" >\n<img ng-src= {{msg.payload}} style=\"width: auto; height: auto;max-width: 502px;max-height: 606px\"/>\n</div>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 730,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "282efe64332193c8",
        "type": "python3-function",
        "z": "1613373abaf77a2c",
        "name": "focus",
        "func": "from OpenScan import load_str\n\nif load_str('camera') != 'imx519':\n    return\n\nfrom Arducam import Focuser\n\n\nif msg['focuser'] == True:\n    focuser = Focuser('/dev/v4l-subdev1')\n    focuser.write(msg['focus'])\n    return msg",
        "outputs": 1,
        "x": 1190,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "64b16ef47ab6d859",
        "type": "ui_switch",
        "z": "1613373abaf77a2c",
        "name": "MF",
        "label": "",
        "tooltip": "",
        "group": "90223f7ddc082321",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "false",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "true",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 230,
        "y": 1620,
        "wires": [
            [
                "f017f67a8d4a3750"
            ]
        ]
    },
    {
        "id": "f017f67a8d4a3750",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "enable",
        "func": "let fs = global.get('fs');\nfilepath = '/home/pi/OpenScan/settings/';\n\nvar file = 'status_internal_cam'\ndata = fs.readFileSync(filepath+file, 'utf8');\nif(data != '--READY--'){\n    return\n}\n\nfile = 'cam_AFmode'\ncontent = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n});\n\nglobal.set('AF',msg.payload)\nmsg.enabled = false\nif (msg.payload == false){\n    msg.enabled = true\n}\nif (msg.payload == true){\n    file = 'cam_focus1'\n    content = String(0)\n    fs.writeFile(filepath + file, content, err => {\n      if (err) {\n        return\n      }\n    });\n    file = 'cam_focus2'\n    fs.writeFile(filepath + file, content, err => {\n      if (err) {\n        return\n      }\n    });\n    \n    file = 'cam_stacksize'\n    content = String(2)\n    fs.writeFile(filepath + file, content, err => {\n      if (err) {\n        return\n      }\n    });\n    global.set('focus1', 0)\n    global.set('focus2', 0)\n\n}\n\n\nmsg.focus = global.get('focus')\nmsg.payload = 'down'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1620,
        "wires": [
            [
                "5c39bd09.702d84",
                "74521cf72050b515",
                "b70e8c24ee011258",
                "a2ff9dfd858821bc",
                "ef62086d10d830fd"
            ]
        ]
    },
    {
        "id": "65145c939b6647e2",
        "type": "link in",
        "z": "1613373abaf77a2c",
        "name": "",
        "links": [
            "960912e90ba5b5bc"
        ],
        "x": 135,
        "y": 1620,
        "wires": [
            [
                "64b16ef47ab6d859"
            ]
        ]
    },
    {
        "id": "5ea18678.975138",
        "type": "trigger",
        "z": "1613373abaf77a2c",
        "name": "20ms",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-20",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 810,
        "y": 1660,
        "wires": [
            [
                "fd93843e238cc9ce"
            ]
        ]
    },
    {
        "id": "5c39bd09.702d84",
        "type": "ui_template",
        "z": "1613373abaf77a2c",
        "group": "90223f7ddc082321",
        "name": "F+",
        "order": 8,
        "width": 1,
        "height": 1,
        "format": "<md-button style=\"padding:0 0, margin:0 ; width:100%; height:100%;\" ng-mousedown=\"send({payload: -1})\" ng-mouseup=\"send({payload: 'up'})\"><i class=\"fa fa-plus\"></i> </md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 490,
        "y": 1620,
        "wires": [
            [
                "dcfb5cce.0431a"
            ]
        ]
    },
    {
        "id": "dcfb5cce.0431a",
        "type": "switch",
        "z": "1613373abaf77a2c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "-1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "up",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 630,
        "y": 1640,
        "wires": [
            [
                "5ea18678.975138",
                "f4a41b1e7b221486"
            ],
            [
                "5ea18678.975138",
                "f4a41b1e7b221486"
            ],
            [
                "8cdd0a6b.40bcd8"
            ]
        ]
    },
    {
        "id": "8cdd0a6b.40bcd8",
        "type": "change",
        "z": "1613373abaf77a2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1700,
        "wires": [
            [
                "5ea18678.975138",
                "e9b3837b1ffb0360"
            ]
        ]
    },
    {
        "id": "74521cf72050b515",
        "type": "ui_template",
        "z": "1613373abaf77a2c",
        "group": "90223f7ddc082321",
        "name": "F-",
        "order": 9,
        "width": 1,
        "height": 1,
        "format": "<md-button style=\"padding:0 0, margin:0 ; width:100%; height:100%;\" ng-mousedown=\"send({payload: 1})\" ng-mouseup=\"send({payload: 'up'})\"><i class=\"fa fa-minus\"></i> </md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 490,
        "y": 1660,
        "wires": [
            [
                "dcfb5cce.0431a"
            ]
        ]
    },
    {
        "id": "7219f62c9fdc6753",
        "type": "ui_text",
        "z": "1613373abaf77a2c",
        "group": "90223f7ddc082321",
        "order": 7,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 1190,
        "y": 1640,
        "wires": []
    },
    {
        "id": "b70e8c24ee011258",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "global",
        "func": "if (msg.payload == 'down'){\n    msg.enabled = false\n    msg.payload = ' '\n    msg.focuser = global.get('focuser')\n    return msg\n}\n\n\nmsg.enabled = true\n\nsign = msg.payload\nfocus = global.get('focus')\nif (focus > 3000){\n    focusstep = 5\n}\nelse if (focus <=3000 && focus > 2000){\n    focusstep = 3\n}\nelse{\n    focusstep = 2\n}\n\n\nfocus = focus + sign * focusstep\n\nsign = msg.payload\nif (focus > 4000){\n    distance = 6\n    focus = 4000\n}\nelse if (focus > 1200 && focus <= 4000){\n    distance = 737086 * Math.pow(focus, -1.4096)\n}\nelse if (focus <= 1200){\n    distance = 999\n    if (focus <=0){\n       focus = 0\n    }\n}\n\n\nglobal.set('focus', focus)\nmsg.focus = focus\nmsg.distance = distance\ndistance = distance * 10\nmsg.focuser = global.get('focuser')\nmsg.payload = String(distance.toFixed(1)) + 'mm'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1660,
        "wires": [
            [
                "7219f62c9fdc6753",
                "282efe64332193c8",
                "704a9f89089d1f25"
            ]
        ]
    },
    {
        "id": "f4a41b1e7b221486",
        "type": "change",
        "z": "1613373abaf77a2c",
        "name": "focuser f",
        "rules": [
            {
                "t": "set",
                "p": "focuser",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "e9b3837b1ffb0360",
        "type": "change",
        "z": "1613373abaf77a2c",
        "name": "focuser t",
        "rules": [
            {
                "t": "set",
                "p": "focuser",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "fd93843e238cc9ce",
        "type": "delay",
        "z": "1613373abaf77a2c",
        "name": "10ms",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 930,
        "y": 1660,
        "wires": [
            [
                "b70e8c24ee011258"
            ]
        ]
    },
    {
        "id": "25c4138bddb77b6b",
        "type": "ui_template",
        "z": "1613373abaf77a2c",
        "group": "90223f7ddc082321",
        "name": "set",
        "order": 10,
        "width": 2,
        "height": 1,
        "format": "<md-button class=\"button save\" style=\"padding:0 0; margin:0 ;width:100%; height:100%;\"ng-click=\"send({payload:'1'})\">set</md-button></md-button>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 650,
        "y": 1760,
        "wires": [
            [
                "95e1d239988b29e0"
            ]
        ]
    },
    {
        "id": "95e1d239988b29e0",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "msg",
        "func": "focus = global.get('focus')\nfocus1 = global.get('focus1')\nfocus2 = global.get('focus2')\nlet fs = global.get('fs');\nfilepath = '/home/pi/OpenScan/settings/';\n    \nif (msg.payload == false){\n    return msg\n}\n\nif (focus1 != 0 && focus2 != 0){\n    global.set('focus1', 0)\n    global.set('focus2', 0)\n        file = 'cam_focus1'\n    content = String(0)\n    fs.writeFile(filepath + file, content, err => {\n      if (err) {\n        return\n      }\n    });\n    file = 'cam_focus2'\n    fs.writeFile(filepath + file, content, err => {\n      if (err) {\n        return\n      }\n    });\n    msg.distance1 = ' '\n    msg.distance2 = ' '\n    msg.enabled = false\n    return msg\n}\n\nif (focus > 4000){\n    distance = 6\n    focus = 4000\n}\nelse if (focus > 1200 && focus <= 4000){\n    distance = 737086 * Math.pow(focus, -1.4096)\n}\nelse if (focus <= 1200){\n    distance = 999.9\n    if (focus <=0){\n       focus = 0\n    }\n}\ndistance = distance * 10\n\nif (focus1 == 0){\n    global.set('focus1', focus)\n    file = 'cam_focus1'\n    content = String(focus)\n    fs.writeFile(filepath + file, content, err => {\n      if (err) {\n        return\n      }\n    });\n    global.set('distance1', distance)\n    msg.distance1 = distance.toFixed(1)\n    msg.distance2 = 'tbd'\n    msg.enabled = false\n    return msg\n}\nif (focus1 != 0 && focus2 ==0 && focus!= focus1){\n    global.set('focus2', focus)\n    file = 'cam_focus2'\n    content = String(focus)\n    fs.writeFile(filepath + file, content, err => {\n      if (err) {\n        return\n      }\n    });\n    global.set('distance2', distance)\n    msg.distance1 = global.get('distance1').toFixed(1)\n    msg.distance2 = distance.toFixed(1)\n    msg.enabled = true\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1780,
        "wires": [
            [
                "7889245e91ddea4b",
                "210ef5246d1a8790"
            ]
        ]
    },
    {
        "id": "7889245e91ddea4b",
        "type": "ui_text",
        "z": "1613373abaf77a2c",
        "group": "90223f7ddc082321",
        "order": 11,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "{{msg.distance1}}",
        "format": "{{msg.distance2}}",
        "layout": "col-center",
        "className": "",
        "x": 910,
        "y": 1820,
        "wires": []
    },
    {
        "id": "a1d29e56599da0bd",
        "type": "link in",
        "z": "1613373abaf77a2c",
        "name": "focusnumber",
        "links": [
            "210ef5246d1a8790",
            "2dd2503d7ab0214b",
            "6b94bf2295b1b31d"
        ],
        "x": 255,
        "y": 1980,
        "wires": [
            [
                "06504f47ee1744d7",
                "5f8b90ef08a7d68c"
            ]
        ]
    },
    {
        "id": "210ef5246d1a8790",
        "type": "link out",
        "z": "1613373abaf77a2c",
        "name": "",
        "mode": "link",
        "links": [
            "a1d29e56599da0bd",
            "8367cfa0bf5bc5df",
            "149e2e46b9623a2d"
        ],
        "x": 915,
        "y": 1780,
        "wires": []
    },
    {
        "id": "b6f37e23f2491639",
        "type": "ui_switch",
        "z": "1613373abaf77a2c",
        "name": "Stack",
        "label": "",
        "tooltip": "",
        "group": "90223f7ddc082321",
        "order": 6,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 370,
        "y": 1820,
        "wires": [
            [
                "2d66216fee29250c"
            ]
        ]
    },
    {
        "id": "a2ff9dfd858821bc",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "enable",
        "func": "msg.payload = false\nif (msg.enabled == false){\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1780,
        "wires": [
            [
                "25c4138bddb77b6b",
                "7889245e91ddea4b",
                "4cfada2de1c5bb74",
                "95e1d239988b29e0"
            ]
        ]
    },
    {
        "id": "2d66216fee29250c",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "enable",
        "func": "file = 'cam_STmode'\nlet fs = global.get('fs');\nfilepath = '/home/pi/OpenScan/settings/';\ncontent = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n});\n\nmsg.enabled = true\nglobal.set('ST',msg.payload)\nif (msg.payload == false){\n    global.set('focus1',0)\n    global.set('focus2',0)\n    file = 'cam_focus1'\n    content = String(0)\n    fs.writeFile(filepath + file, content, err => {\n      if (err) {\n        return\n      }\n    });\n    file = 'cam_focus2'\n    fs.writeFile(filepath + file, content, err => {\n      if (err) {\n        return\n      }\n    });\n        \n    \n    msg.enabled = false\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1820,
        "wires": [
            [
                "25c4138bddb77b6b",
                "7889245e91ddea4b",
                "2dd2503d7ab0214b",
                "4cfada2de1c5bb74"
            ]
        ]
    },
    {
        "id": "ef62086d10d830fd",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "enable",
        "func": "msg.payload = false\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1780,
        "wires": [
            [
                "b6f37e23f2491639",
                "523019d0a2c698f5"
            ]
        ]
    },
    {
        "id": "06504f47ee1744d7",
        "type": "ui_text",
        "z": "1613373abaf77a2c",
        "group": "90223f7ddc082321",
        "order": 12,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Stacksize:",
        "format": "{{msg.stacksize}}",
        "layout": "row-center",
        "className": "",
        "x": 790,
        "y": 1980,
        "wires": []
    },
    {
        "id": "2dd2503d7ab0214b",
        "type": "link out",
        "z": "1613373abaf77a2c",
        "name": "",
        "mode": "link",
        "links": [
            "a1d29e56599da0bd"
        ],
        "x": 615,
        "y": 1840,
        "wires": []
    },
    {
        "id": "21306d6402225553",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "msg",
        "func": "msg.stacksize = msg.payload\nmsg.enabled = true\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1940,
        "wires": [
            [
                "06504f47ee1744d7",
                "ca184d58f7deb4b1",
                "84608db962fd9932"
            ]
        ]
    },
    {
        "id": "e2f8fdd47bdd1b66",
        "type": "ui_slider",
        "z": "1613373abaf77a2c",
        "name": "stacksize",
        "label": " ",
        "tooltip": "",
        "group": "90223f7ddc082321",
        "order": 13,
        "width": 2,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "2",
        "max": "20",
        "step": "1",
        "className": "",
        "x": 480,
        "y": 1940,
        "wires": [
            [
                "21306d6402225553"
            ]
        ]
    },
    {
        "id": "523019d0a2c698f5",
        "type": "ui_text",
        "z": "1613373abaf77a2c",
        "group": "90223f7ddc082321",
        "order": 5,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "St",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 370,
        "y": 1780,
        "wires": []
    },
    {
        "id": "dfbfe28bac5c4221",
        "type": "ui_text",
        "z": "1613373abaf77a2c",
        "group": "90223f7ddc082321",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "MF",
        "label": "MF",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 230,
        "y": 1660,
        "wires": []
    },
    {
        "id": "ca184d58f7deb4b1",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "save",
        "func": "var file = 'cam_stacksize'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.stacksize)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "704a9f89089d1f25",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "save",
        "func": "var file = 'cam_focus'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.focus)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "5f8b90ef08a7d68c",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "loadI",
        "func": "var file = 'cam_stacksize'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1940,
        "wires": [
            [
                "e2f8fdd47bdd1b66"
            ]
        ]
    },
    {
        "id": "4cfada2de1c5bb74",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "enable",
        "func": "if (msg.enabled == true){\n    msg.enabled = false\n}\nelse{\n    msg.enabled = true\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1880,
        "wires": [
            [
                "84608db962fd9932"
            ]
        ]
    },
    {
        "id": "84608db962fd9932",
        "type": "link out",
        "z": "1613373abaf77a2c",
        "name": "",
        "mode": "link",
        "links": [
            "8367cfa0bf5bc5df",
            "149e2e46b9623a2d"
        ],
        "x": 755,
        "y": 1880,
        "wires": []
    },
    {
        "id": "e89c16809f8a5f1c",
        "type": "python3-function",
        "z": "1613373abaf77a2c",
        "name": "gphoto",
        "func": "\nfrom OpenScan import camera, save, load_str\n\nif load_str('camera') == 'gphoto':\n    if camera('/gphoto_init') == 200:\n        if camera('/gphoto_test') == 200:\n            save('status_internal_cam','--READY--')\n            return msg\n",
        "outputs": 1,
        "x": 490,
        "y": 100,
        "wires": [
            [
                "b5722c9a250aeb3d"
            ]
        ]
    },
    {
        "id": "b5722c9a250aeb3d",
        "type": "debug",
        "z": "1613373abaf77a2c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "917a194be245384a",
        "type": "link in",
        "z": "1613373abaf77a2c",
        "name": "enable projectname",
        "links": [
            "a0ba1aa77c5c8b7c",
            "a42c12e94f65fa01"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "f4b3112a9ec6c487"
            ]
        ]
    },
    {
        "id": "65cef204b16f8741",
        "type": "link in",
        "z": "1613373abaf77a2c",
        "name": "enable shutter",
        "links": [
            "2d76e5617f13cd6c",
            "a0ba1aa77c5c8b7c",
            "a42c12e94f65fa01"
        ],
        "x": 55,
        "y": 580,
        "wires": [
            [
                "84d6b96c8ebaac96"
            ]
        ]
    },
    {
        "id": "2aea1727dbea76ce",
        "type": "link in",
        "z": "1613373abaf77a2c",
        "name": "enable cropx",
        "links": [
            "a0ba1aa77c5c8b7c",
            "a42c12e94f65fa01"
        ],
        "x": 55,
        "y": 620,
        "wires": [
            [
                "9c6b48b7b4cc4e1a"
            ]
        ]
    },
    {
        "id": "4f212b44aa487945",
        "type": "link in",
        "z": "1613373abaf77a2c",
        "name": "enable cropy",
        "links": [
            "a0ba1aa77c5c8b7c",
            "a42c12e94f65fa01"
        ],
        "x": 55,
        "y": 660,
        "wires": [
            [
                "c470fd0b15356206"
            ]
        ]
    },
    {
        "id": "6d1e12f51f9af0b6",
        "type": "link in",
        "z": "1613373abaf77a2c",
        "name": "start camchk",
        "links": [
            "960912e90ba5b5bc"
        ],
        "x": 55,
        "y": 100,
        "wires": [
            [
                "12f1399b240830bf"
            ]
        ]
    },
    {
        "id": "8ebd1dcb5db156ed",
        "type": "ui_text",
        "z": "1613373abaf77a2c",
        "group": "7aaf184330605300",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Current Status:",
        "format": "<font color= {{msg.color}} > {{msg.payload}} </font>",
        "layout": "row-spread",
        "className": "",
        "x": 320,
        "y": 160,
        "wires": []
    },
    {
        "id": "94a7aec739f9266b",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "loadS",
        "func": "var file = 'status_internal_cam'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = String(data);\n\nif (data === 'no camera found'){\n    msg.color = 'red'\n}\n\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 160,
        "wires": [
            [
                "8ebd1dcb5db156ed",
                "b87aecd9dc7f94b1"
            ]
        ]
    },
    {
        "id": "2415272f42ce468c",
        "type": "link in",
        "z": "1613373abaf77a2c",
        "name": "start status",
        "links": [
            "6c6ef2255a7d39e5"
        ],
        "x": 55,
        "y": 160,
        "wires": [
            [
                "94a7aec739f9266b"
            ]
        ]
    },
    {
        "id": "a1e14624058e74cd",
        "type": "link in",
        "z": "1613373abaf77a2c",
        "name": "start routine settings",
        "links": [
            "960912e90ba5b5bc"
        ],
        "x": 55,
        "y": 500,
        "wires": [
            [
                "f4b3112a9ec6c487",
                "107a030938cbfea9",
                "84d6b96c8ebaac96",
                "9c6b48b7b4cc4e1a",
                "c470fd0b15356206",
                "9e30e33a1520fee0"
            ]
        ]
    },
    {
        "id": "1daf9e3a5bd5ab48",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "msg",
        "func": "global.set('flag_pw', true)\nglobal.set('flag', true)\nmsg.enabled = true\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1100,
        "wires": [
            [
                "fb13752beddee9f2"
            ]
        ]
    },
    {
        "id": "6d15f717d5a11002",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "disable",
        "func": "msg.enabled = false\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1060,
        "wires": [
            [
                "e9b13dfd9f8d3711"
            ]
        ]
    },
    {
        "id": "9613e5549d7395cc",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "msg",
        "func": "msg.enabled = true\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "0ad3d8cfcb22472b",
        "type": "ui_switch",
        "z": "1613373abaf77a2c",
        "name": "",
        "label": "Ringlight test",
        "tooltip": "",
        "group": "7aaf184330605300",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 770,
        "y": 260,
        "wires": [
            [
                "863f97875fd752de"
            ]
        ]
    },
    {
        "id": "b87aecd9dc7f94b1",
        "type": "switch",
        "z": "1613373abaf77a2c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "--READY--",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "--READY--",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 290,
        "y": 200,
        "wires": [
            [
                "8c130831504887e3"
            ],
            [
                "21cdfb2315d39b6c",
                "a6b9dba90e2abab7"
            ]
        ]
    },
    {
        "id": "21cdfb2315d39b6c",
        "type": "change",
        "z": "1613373abaf77a2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ringlight",
                "pt": "flow",
                "to": "ringlightSlider",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "b125677901d305ae",
        "type": "change",
        "z": "1613373abaf77a2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ringlight",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 980,
        "wires": [
            [
                "873dace18a23fdf2"
            ]
        ]
    },
    {
        "id": "50d94e9385cd4845",
        "type": "change",
        "z": "1613373abaf77a2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ringlightSlider",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "40fcd859005250c3",
        "type": "link in",
        "z": "1613373abaf77a2c",
        "name": "",
        "links": [
            "6c6ef2255a7d39e5"
        ],
        "x": 55,
        "y": 860,
        "wires": [
            [
                "b125677901d305ae",
                "06d1ca69026e150f"
            ]
        ]
    },
    {
        "id": "8c130831504887e3",
        "type": "change",
        "z": "1613373abaf77a2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ringlight",
                "pt": "flow",
                "to": "ringlightSliderTest",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "863f97875fd752de",
        "type": "change",
        "z": "1613373abaf77a2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ringlightSwitch",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "06d1ca69026e150f",
        "type": "switch",
        "z": "1613373abaf77a2c",
        "name": "",
        "property": "ringlightSwitch",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 190,
        "y": 900,
        "wires": [
            [
                "5bfe68da10f3ed2c"
            ],
            [
                "f793d4b16397a53d"
            ]
        ]
    },
    {
        "id": "5bfe68da10f3ed2c",
        "type": "change",
        "z": "1613373abaf77a2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ringlightSliderTest",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "f793d4b16397a53d",
        "type": "change",
        "z": "1613373abaf77a2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ringlightSliderTest",
                "pt": "flow",
                "to": "ringlightSlider",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "a6b9dba90e2abab7",
        "type": "function",
        "z": "1613373abaf77a2c",
        "name": "",
        "func": "msg.payload = 0\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 260,
        "wires": [
            [
                "0ad3d8cfcb22472b"
            ]
        ]
    },
    {
        "id": "ea54fcc2.cfcc2",
        "type": "python3-function",
        "z": "4981d84ef1a366d1",
        "name": "get dirs",
        "func": "from glob import glob\nimport os\nfrom zipfile import ZipFile\n\ndef set_stats(stat):\n    try:\n        with open(directory+set[:-4]+\"/\"+stat,\"r\") as file:\n            stat=file.read()\n    except:\n        stat=\"\"\n    return stat\n\ntable=[]\ndirectory=\"/home/pi/OpenScan/scans/\"\n\nfor d in glob(directory+\"*.zip\"):\n    set=os.path.basename(d)\n\n    try:\n        with ZipFile(d, 'r') as f:\n            photos = len(f.namelist())\n\n        size = float(int(float(os.path.getsize(d))/100000))/10\n        size_full= os.path.getsize(d)\n        status=set_stats(\"status\")\n        expiration=set_stats(\"expiration\")\n        download=set_stats(\"download\")\n    \n        if len(download)!=0:\n            table.append({\n                \"Set\":set,\n                \"Photos\":photos,\n                \"Size\":str(size)+\"MB\",\n                \"Date\":set[:16],\n                \"Name\":(set[20:-4]),\n                \"Status\":status,\n                \"Download\":\"<a href=\"+download+\">RESULT</a>\",\n                \"Size_full\":size_full,\n    \n                })\n        else:\n            table.append({\n                \"Set\":set,\n                \"Photos\":photos,\n                \"Size\":str(size)+\"MB\",\n                \"Date\":set[:16],\n                \"Name\":(set[20:-4]),\n                \"Status\":status,\n                \"Size_full\":size_full,\n    \n                })\n    except:\n        pass\n\nmsg['payload']=table\nmsg['topic']=\"\"\nreturn msg",
        "outputs": 1,
        "x": 480,
        "y": 180,
        "wires": [
            [
                "b9a3a0f9.bcbea"
            ]
        ]
    },
    {
        "id": "2f4c0f98.dee2",
        "type": "link in",
        "z": "4981d84ef1a366d1",
        "name": "filelist",
        "links": [
            "960912e90ba5b5bc",
            "a4f09e25.02569",
            "ed35109311335099",
            "fb13752beddee9f2"
        ],
        "x": 355,
        "y": 140,
        "wires": [
            [
                "ea54fcc2.cfcc2"
            ]
        ]
    },
    {
        "id": "b9a3a0f9.bcbea",
        "type": "ui_table",
        "z": "4981d84ef1a366d1",
        "group": "b5fdd57b.15eda8",
        "name": "",
        "order": 1,
        "width": 13,
        "height": 7,
        "columns": [
            {
                "field": "Date",
                "title": "Date",
                "width": "150",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Name",
                "title": "Name",
                "width": "210",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Photos",
                "title": "Photos",
                "width": "80",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Size",
                "title": "Size",
                "width": "80",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Status",
                "title": "Status",
                "width": "140",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 610,
        "y": 180,
        "wires": [
            [
                "50710948.71c308",
                "4082b136.dae18",
                "834046a4.647938",
                "0c387c0291d6c131"
            ]
        ]
    },
    {
        "id": "952ce286.4ffd4",
        "type": "ui_text",
        "z": "4981d84ef1a366d1",
        "group": "db43d646.2074c8",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "Status",
        "label": "Status",
        "format": "{{msg.status}}",
        "layout": "row-spread",
        "className": "",
        "x": 250,
        "y": 60,
        "wires": []
    },
    {
        "id": "d4383424.7807c8",
        "type": "python3-function",
        "z": "4981d84ef1a366d1",
        "name": "upload",
        "func": "import os\nfrom OpenScan import OpenScanCloud, load_str, load_int, save\n\nbasedir = '/home/pi/OpenScan/'\n\nif load_str(\"feedback_terms\")==\"False\":\n    msg['payload']=\"Please read and agree to the Terms of Use (See Settings Menu) before you can use the OpenScanCloud\"\n    msg['topic'] = 'OpenScanCloud - Terms of Use'\n    return None,msg\n\nmsg = msg['payload']\n\ndef upload(filelist, ulinks):\n    i = 0\n    for file in filelist:\n        link = ulinks[i]\n        save('status_cloud', 'uploading ' + str(i+1) + '/' + str(len(filelist)))\n        cmd = 'curl -# -X POST ' + link + ' --header Content-Type:application/octet-stream --data-binary @\"' + file + '\" 2>&1 | tee /home/pi/OpenScan/settings/status_uploadprogress'\n        i = i+1\n        os.system(cmd)\n\n########\nif not os.path.isfile(basedir + 'settings/token'):\n    msg['flag'] = True\n    save('status_cloud', 'please enter token first')\n    return msg\nwith open(basedir + 'settings/token', 'r') as file:\n    token = file.read().strip('\\n')\n\n########\nr = OpenScanCloud('getTokenInfo', {'token':token})\n\nif r.status_code == 400:\n    msg['topic'] = 'Invalid Token'\n    msg['payload'] = 'Please enter a valid token (settings --> OpenScanCloud)'\n    save('status_cloud', 'invalid/missing token')\n    return None,msg\nelif r.status_code == 200:\n    pass\nelse:\n    msg['topic'] = 'Connection Error'\n    msg['payload'] = 'Not able to establish a connection to OpenScanCloud.'\n    return None,msg\n\nmsg1 = r.json()\n\n########\nif msg['Photos'] > msg1['limit_photos'] or msg['Size_full'] > msg1['limit_filesize']:\n    msg['flag'] = True\n    save('status_cloud', 'limit(s) exceeded')\n    return msg\n\n########\ntemp =  OpenScanCloud('getProjectInfo', {'token':token, 'project':msg['Set']})\nif temp.status_code not in (200,401):\n    msg['topic'] = 'Connection to OpenScanCloud failed'\n    msg['payload'] = 'Please check your internet connection'\n    return None,msg\n\nif temp.status_code != 401:\n    temp = temp.json()\n    if 'status' in temp:\n        if temp['status'] != 'created':\n            save('status_cloud','already exists')\n            with open(basedir + 'scans/' + msg['Set'][:-4] + '/status', 'w') as file:\n                file.write(temp['status'])\n            return msg\n#####\n\nmsg2={}\nmsg2['token'] = token\nmsg2['parts'] = 1\nmsg['partslist']=[]\n\n#######\nsize_to_split = load_int('osc_splitsize')\n\nif msg['Size_full'] > size_to_split:\n    tempdir = basedir + 'tmp/split/'\n    if os.path.isdir(tempdir):\n        os.system('rm -r ' + tempdir)\n    os.mkdir(tempdir)\n    save('status_cloud', 'zipping files, please wait ...')\n    cmd = 'split -b ' + str(size_to_split) + ' ' + basedir + 'scans/' + msg['Set'] + ' ' + tempdir + msg['Set']\n    os.system(cmd)\n    save('status_cloud', 'zip done')\n    list = os.listdir(tempdir)\n    for l in list:\n        msg['partslist'].append(tempdir + l)\n        msg['partslist'].sort()\n    msg2['parts']=len(msg['partslist'])\nelse:\n    msg['partslist'] = [basedir + 'scans/' +msg['Set']]\n\n#######\nmsg2['photos'] = msg['Photos']\nmsg2['filesize'] = msg['Size_full']\nmsg2['project'] = msg['Set']\n\nr = OpenScanCloud('createProject', msg2)\nif r.status_code != 200:\n    msg['topic'] = 'Connection to OpenScanCloud failed'\n    msg['payload'] = 'Please check your internet connection'\n    return None,msg\n\nmsg1 = r.json()\n\nif not os.path.isdir(basedir+ 'scans/' + msg['Set'][:-4]):\n    os.mkdir(basedir+ 'scans/' + msg['Set'][:-4])\nwith open(basedir+ 'scans/' + msg['Set'][:-4]+'/status', 'w+') as file:\n    file.write('prepared')\n\nsave('status_cloud', 'uploading')\nupload(msg['partslist'], msg1['ulink'])\n\nr = OpenScanCloud('startProject', msg2)\nif r.status_code != 200:\n    msg['topic'] = 'Upload failed'\n    msg['payload'] = 'please try again'\n    save('status_cloud', 'upload failed')\n    return None,msg\n\nsave('status_cloud', 'uploaded')\n\nsave('status_cloud', 'project started')\n\ntry:\n    os.system('rm -r ' + tempdir)\nexcept:\n    pass\n\nreturn msg",
        "outputs": 2,
        "x": 530,
        "y": 420,
        "wires": [
            [
                "9a132ab1.b21658"
            ],
            [
                "3d16b3789632784d",
                "9a132ab1.b21658"
            ]
        ]
    },
    {
        "id": "50710948.71c308",
        "type": "change",
        "z": "4981d84ef1a366d1",
        "name": "set",
        "rules": [
            {
                "t": "set",
                "p": "set",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 180,
        "wires": [
            [
                "ada1b6f7cccc9344"
            ]
        ]
    },
    {
        "id": "834046a4.647938",
        "type": "ui_text",
        "z": "4981d84ef1a366d1",
        "group": "db43d646.2074c8",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "Set",
        "label": "Set:",
        "format": "{{msg.payload.Name}}",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 220,
        "wires": []
    },
    {
        "id": "9a132ab1.b21658",
        "type": "change",
        "z": "4981d84ef1a366d1",
        "name": "flag.true",
        "rules": [
            {
                "t": "set",
                "p": "flag",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 420,
        "wires": [
            [
                "8689e938.dd9e38"
            ]
        ]
    },
    {
        "id": "3c67e97b.9d19a6",
        "type": "function",
        "z": "4981d84ef1a366d1",
        "name": "enable",
        "func": "if (global.get('flag') === false){\n    msg.enabled = false\n    msg.color=\"white\"\n}\nelse{\n    msg.enabled = true\n    msg.color=\"red\"\n    \n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 340,
        "wires": [
            [
                "7a93d1e18254685c",
                "e434ef42bd6b92e8",
                "d5d840183025d91b",
                "ab9e90ab5a53a0dd",
                "478994f671a3907d"
            ]
        ]
    },
    {
        "id": "bfc01f26.c32cf",
        "type": "change",
        "z": "4981d84ef1a366d1",
        "name": "flag.false",
        "rules": [
            {
                "t": "set",
                "p": "flag",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 460,
        "wires": [
            [
                "f20f2dbc.0f123"
            ]
        ]
    },
    {
        "id": "b33d604c.5f1a6",
        "type": "link in",
        "z": "4981d84ef1a366d1",
        "name": "enable cloud",
        "links": [
            "4082b136.dae18",
            "8689e938.dd9e38",
            "e9b13dfd9f8d3711",
            "f20f2dbc.0f123",
            "fb13752beddee9f2"
        ],
        "x": 35,
        "y": 340,
        "wires": [
            [
                "3c67e97b.9d19a6"
            ]
        ]
    },
    {
        "id": "f6bd1a04.470838",
        "type": "change",
        "z": "4981d84ef1a366d1",
        "name": "set",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "set",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 420,
        "wires": [
            [
                "d4383424.7807c8"
            ]
        ]
    },
    {
        "id": "4082b136.dae18",
        "type": "link out",
        "z": "4981d84ef1a366d1",
        "name": "",
        "links": [
            "b33d604c.5f1a6",
            "87574a42938afec4"
        ],
        "x": 715,
        "y": 140,
        "wires": []
    },
    {
        "id": "f20f2dbc.0f123",
        "type": "link out",
        "z": "4981d84ef1a366d1",
        "name": "",
        "mode": "link",
        "links": [
            "8367cfa0bf5bc5df",
            "b33d604c.5f1a6",
            "149e2e46b9623a2d"
        ],
        "x": 515,
        "y": 460,
        "wires": []
    },
    {
        "id": "8689e938.dd9e38",
        "type": "link out",
        "z": "4981d84ef1a366d1",
        "name": "",
        "mode": "link",
        "links": [
            "8367cfa0bf5bc5df",
            "b33d604c.5f1a6",
            "149e2e46b9623a2d"
        ],
        "x": 875,
        "y": 420,
        "wires": []
    },
    {
        "id": "15de0ebb.616d61",
        "type": "ui_toast",
        "z": "4981d84ef1a366d1",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "No",
        "cancel": "Yes",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 550,
        "y": 380,
        "wires": [
            [
                "a7d89487.ee8858"
            ]
        ]
    },
    {
        "id": "a7d89487.ee8858",
        "type": "python3-function",
        "z": "4981d84ef1a366d1",
        "name": "del",
        "func": "import os\nimport shutil\n\ndir=\"/home/pi/OpenScan/scans/\"\n\nif msg['payload']==\"No\":\n    return\n\"\"\"\ntry:\n    node.warn('\"'+dir+msg['Date']+\"-\"+msg['Set']+'.zip\"')\n    os.remove('\"'+dir+msg['Date']+\"-\"+msg['Set']+'.zip\"')\n    node.warn(\"os.remove done\")\n    node.warn(dir+msg['Date']+\"-\"+msg['Set'])\n    shutil.rmtree(dir+msg['Date']+\"-\"+msg['Set'])\nexcept:\n    node.warn(\"failed\")\n    pass\n    \"\"\"\n\nfor i in os.listdir(dir):\n    if msg['Date'] in i and msg['Set'] in i:\n        if os.path.isdir(dir + i):\n            shutil.rmtree(dir + i)\n        else:\n            os.remove(dir + i)\nreturn msg",
        "outputs": 1,
        "x": 690,
        "y": 380,
        "wires": [
            [
                "a4f09e25.02569"
            ]
        ]
    },
    {
        "id": "a4f09e25.02569",
        "type": "link out",
        "z": "4981d84ef1a366d1",
        "name": "",
        "links": [
            "2f4c0f98.dee2",
            "c20357dd.374108",
            "e9aab326.a6896",
            "edd22cc7.befe1",
            "19b81967.49db87",
            "8ee1b3bb.7b0b3",
            "d5246b3cc796afc6"
        ],
        "x": 775,
        "y": 360,
        "wires": []
    },
    {
        "id": "7a93d1e18254685c",
        "type": "link out",
        "z": "4981d84ef1a366d1",
        "name": "",
        "mode": "link",
        "links": [
            "809c9427e14e2448",
            "92c98e6ce7cd25f9"
        ],
        "x": 235,
        "y": 460,
        "wires": []
    },
    {
        "id": "4d99c601c9881680",
        "type": "python3-function",
        "z": "4981d84ef1a366d1",
        "name": "refresh",
        "func": "from time import sleep\nimport os\nfrom OpenScan import load_str, OpenScanCloud, save, load_bool\n\nbasepath = '/home/pi/OpenScan/scans/'\n\nif load_bool(\"terms\")==False:\n    msg['payload']=\"Please read and agree to the Terms of Use (See Settings Menu) before you can use the OpenScanCloud\"\n    msg['topic']='OpenScanCloud - Terms of Use'\n    return None,msg\n\nsave('status_cloud','refreshing')\ntoken = load_str('token')\n\ntest = OpenScanCloud('getTokenInfo',{'token':token})\nif test.status_code == 400:\n    msg['topic'] = 'Invalid Token'\n    msg['payload'] = 'Please enter a valid token (settings --> OpenScanCloud)'\n    return None,msg\nelif test.status_code == 200:\n    pass\nelse:\n    msg['topic'] = 'Connection Error'\n    msg['payload'] = 'Not able to establish a connection to OpenScanCloud.'\n    return None,msg\n\nstats = test.json()\nfor i in stats:\n    save('osc_'+i, stats[i])\n    pass\n\nmsg={}\nprojects = []\nfor i in os.listdir(basepath):\n    if os.path.isdir(basepath + i):\n        if os.path.isfile(basepath + i + '/status'):\n            with open(basepath + i + '/status', 'r') as file:\n                status = file.read().strip('\\n')\n                if status in ['expired', 'processing done', 'processing failed']:\n                    continue\n        projects.append(i)\nnode.warn(projects)\n\nfor p in projects:\n    r = OpenScanCloud('getProjectInfo',{'token':token, 'project':p+'.zip'})\n    if r.status_code == 200:\n        answer = r.json()\n        if answer == {}:\n            os.system('sudo rm -r ' + basepath + p)\n        else:\n            with open(basepath + p + '/status', 'w+') as file:\n                file.write(answer['status'])\n            with open(basepath + p + '/download', 'w+') as file:\n                file.write(answer['dlink'])\n\nmsg['list'] = projects\nsleep(0.5)\nsave('status_cloud','ready')\nreturn msg, None\n",
        "outputs": 2,
        "x": 320,
        "y": 180,
        "wires": [
            [
                "ea54fcc2.cfcc2",
                "b42e061fb1f1f3d7"
            ],
            [
                "6434e713f088012b"
            ]
        ]
    },
    {
        "id": "372e95797a3f2f3b",
        "type": "python3-function",
        "z": "4981d84ef1a366d1",
        "name": "limit :)",
        "func": "from time import sleep\n\nmsg2={}\nmsg2['enabled'] = True\n\nmsg['enabled'] = False\nnode.send(msg)\n\nwait = 15\n\nfor i in range (wait):\n    msg['text'] = ' ('+ str(wait - i)+')'\n    node.send(msg)\n\nmsg['enabled'] = True\nmsg['text']=\"\"\n\n\nreturn msg",
        "outputs": 1,
        "x": 90,
        "y": 220,
        "wires": [
            [
                "573edbfdb7500ddc"
            ]
        ]
    },
    {
        "id": "573edbfdb7500ddc",
        "type": "delay",
        "z": "4981d84ef1a366d1",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 230,
        "y": 220,
        "wires": [
            [
                "c46e10b9c201913e"
            ]
        ]
    },
    {
        "id": "dacb1f078b624e10",
        "type": "ui_toast",
        "z": "4981d84ef1a366d1",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "No",
        "cancel": "Yes",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 550,
        "y": 340,
        "wires": [
            [
                "c8d65cc7c2ff7c36"
            ]
        ]
    },
    {
        "id": "92c98e6ce7cd25f9",
        "type": "link in",
        "z": "4981d84ef1a366d1",
        "name": "",
        "links": [
            "7a93d1e18254685c",
            "bd75f33b8a57c522"
        ],
        "x": 35,
        "y": 180,
        "wires": [
            [
                "c46e10b9c201913e"
            ]
        ]
    },
    {
        "id": "3d16b3789632784d",
        "type": "ui_toast",
        "z": "4981d84ef1a366d1",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Terms",
        "x": 770,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "6434e713f088012b",
        "type": "ui_toast",
        "z": "4981d84ef1a366d1",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Terms",
        "x": 470,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "c8d65cc7c2ff7c36",
        "type": "python3-function",
        "z": "4981d84ef1a366d1",
        "name": "del",
        "func": "import os\nimport shutil\n\ndir=\"/home/pi/OpenScan/scans/\"\n\nif msg['payload']==\"No\":\n    return\n\nfor i in os.listdir(dir):\n    if os.path.isdir(dir + i):\n        shutil.rmtree(dir + i)\n    else:\n        os.remove(dir + i)\n\nreturn msg",
        "outputs": 1,
        "x": 690,
        "y": 340,
        "wires": [
            [
                "a4f09e25.02569"
            ]
        ]
    },
    {
        "id": "6d471a5210505276",
        "type": "function",
        "z": "4981d84ef1a366d1",
        "name": "read",
        "func": "var file = 'status_cloud'\nvar file2 = 'status_uploadprogress'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\ndata = fs.readFileSync(filepath+file, 'utf8');\nstatus = String(data);\n\nif (status.substr(0,9) === 'uploading'){\n    data = fs.readFileSync(filepath+file2, 'utf8');\n    progress = data.substr(data.length - 6)\n        if (progress.substr(progress.length -1) === '%'){\n            status = status + ' (' + progress + ')'\n        }\n}\nmsg.status = status\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 60,
        "wires": [
            [
                "952ce286.4ffd4"
            ]
        ]
    },
    {
        "id": "f4e9a4bd79b4221f",
        "type": "function",
        "z": "4981d84ef1a366d1",
        "name": "msg",
        "func": "msg.payload = 'Are you sure to delete ALL saved image sets? This can not be undone!'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 340,
        "wires": [
            [
                "dacb1f078b624e10"
            ]
        ]
    },
    {
        "id": "2806bf08ea21216d",
        "type": "function",
        "z": "4981d84ef1a366d1",
        "name": "msg",
        "func": "msg.Set=global.get('set').Name\nmsg.Date=global.get('set').Date\nmsg.payload = 'Are you sure to delete and ALL associated files: ' + msg.Set + '?'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 380,
        "wires": [
            [
                "15de0ebb.616d61"
            ]
        ]
    },
    {
        "id": "61990987acd0f263",
        "type": "link in",
        "z": "4981d84ef1a366d1",
        "name": "",
        "links": [
            "6c6ef2255a7d39e5"
        ],
        "x": 35,
        "y": 60,
        "wires": [
            [
                "6d471a5210505276"
            ]
        ]
    },
    {
        "id": "e8e488a6dd5d0b33",
        "type": "ui_template",
        "z": "4981d84ef1a366d1",
        "group": "db43d646.2074c8",
        "name": "Download",
        "order": 5,
        "width": 3,
        "height": 1,
        "format": "<md-button style=\"background-color:default ; color:default;width:100%; height:100%;\"   target=\"_blank\" ng-href={{msg.download}}>\n <div class=\"center\" style=\"position: relative; top: 30%;\">Download\n</div></md-button>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 900,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "0c387c0291d6c131",
        "type": "function",
        "z": "4981d84ef1a366d1",
        "name": "msg",
        "func": "msg.download = '/scans/' + String(msg.payload.Set)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 260,
        "wires": [
            [
                "e8e488a6dd5d0b33"
            ]
        ]
    },
    {
        "id": "e5f38b4a07a5e278",
        "type": "link in",
        "z": "4981d84ef1a366d1",
        "name": "",
        "links": [
            "960912e90ba5b5bc"
        ],
        "x": 655,
        "y": 220,
        "wires": [
            [
                "834046a4.647938"
            ]
        ]
    },
    {
        "id": "e434ef42bd6b92e8",
        "type": "ui_template",
        "z": "4981d84ef1a366d1",
        "group": "db43d646.2074c8",
        "name": "upload2",
        "order": 6,
        "width": 3,
        "height": 1,
        "format": "<md-button class=\"button save\" style=\"padding:0 0, margin:0 ;width:100%; height:100%;\"ng-click=\"send({payload:'1'})\">upload</md-button></md-button>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 280,
        "y": 420,
        "wires": [
            [
                "f6bd1a04.470838",
                "bfc01f26.c32cf"
            ]
        ]
    },
    {
        "id": "c46e10b9c201913e",
        "type": "ui_template",
        "z": "4981d84ef1a366d1",
        "group": "db43d646.2074c8",
        "name": "refresh",
        "order": 1,
        "width": 3,
        "height": 1,
        "format": "<md-button class=\"button save\" style=\"padding:0 0, margin:0 ;width:100%; height:100%;\"ng-click=\"send({payload:'1'})\">refresh{{msg.text}}</md-button></md-button>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "372e95797a3f2f3b",
                "4d99c601c9881680"
            ]
        ]
    },
    {
        "id": "d5d840183025d91b",
        "type": "ui_template",
        "z": "4981d84ef1a366d1",
        "group": "db43d646.2074c8",
        "name": "del set",
        "order": 8,
        "width": 2,
        "height": 1,
        "format": "<md-button class=\"button save\" style=\"padding:0 0, margin:0 ;color:red; width:100%; height:100%;\"ng-click=\"send({payload:'1'})\">delete set</md-button></md-button>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 270,
        "y": 380,
        "wires": [
            [
                "2806bf08ea21216d"
            ]
        ]
    },
    {
        "id": "ab9e90ab5a53a0dd",
        "type": "ui_template",
        "z": "4981d84ef1a366d1",
        "group": "db43d646.2074c8",
        "name": "del ",
        "order": 9,
        "width": 2,
        "height": 1,
        "format": "<md-button class=\"button save\" style=\"color:red; padding:0 0; margin:0 ;width:100%; height:100%;\"ng-click=\"send({payload:'1'})\">delete all</md-button></md-button>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 270,
        "y": 340,
        "wires": [
            [
                "f4e9a4bd79b4221f"
            ]
        ]
    },
    {
        "id": "478994f671a3907d",
        "type": "ui_template",
        "z": "4981d84ef1a366d1",
        "group": "db43d646.2074c8",
        "name": "combine",
        "order": 7,
        "width": 2,
        "height": 1,
        "format": "<md-button class=\"button save\" style=\"color:red; padding:0 0; margin:0 ;width:100%; height:100%;\"ng-click=\"send({payload:'1'})\">combine</md-button></md-button>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 280,
        "y": 500,
        "wires": [
            [
                "51bfd0fb7b1d292e"
            ]
        ]
    },
    {
        "id": "189c1eed09624a7b",
        "type": "function",
        "z": "4981d84ef1a366d1",
        "name": "combine",
        "func": "combine = global.get('combine')\ncombine_set = global.get('set').Set\n\nif (combine === true && global.get('combine_set') !== combine_set){\n    msg.set1 = global.get('combine_set')\n    msg.set2 = combine_set\n    global.set('combine', false)\n    msg.topic = 'Combine the following two sets:'\n    msg.payload = msg.set1 + '<br>' + msg.set2 + '<br>FILES WILL BE MERGED INTO ON FILE!'\n    return msg\n}\nglobal.set('combine_set' , combine_set)\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 540,
        "wires": [
            [
                "1493398979a63775"
            ]
        ]
    },
    {
        "id": "51bfd0fb7b1d292e",
        "type": "function",
        "z": "4981d84ef1a366d1",
        "name": "combine",
        "func": "global.set('combine', true)\ncombine_set = global.get('set').Set\nmsg.topic = 'Merge two sets into one (can not be undone)!'\nmsg.payload = combine_set\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "da325be8e74179be",
        "type": "python3-function",
        "z": "4981d84ef1a366d1",
        "name": "combine",
        "func": "from os.path import getsize\nfrom shutil import copy\nfrom os import rename, remove\nimport zipfile as z\nfrom OpenScan import save\n\nfrom time import sleep\n\nif msg['payload'] != 'OK':\n    return\n\nbasepath = '/home/pi/OpenScan/scans/'\ntmp1 = basepath + msg['set1']\ntmp2 = basepath + msg['set2']\n\nif getsize(tmp1) > getsize(tmp2):\n    set1 = tmp1\n    set2 = tmp2\nelse:\n    set1 = tmp2\n    set2 = tmp1\n\n#set 1 is larger and to be merged into\n\nzips = [set1, set2]\n\nwith z.ZipFile(set1, 'a') as z1:\n    z2 = z.ZipFile(set2, 'r')\n    i = 0\n    for n in z2.namelist():\n        i += 1\n        n2 = n\n        save('status_cloud','writing ' + str(i) + '/' + str(len(z2.namelist())))\n        while 'X'+n in z1.namelist():\n            n = 'X' + n\n        z1.writestr('X'+n, z2.open(n2).read())\nsave('status_cloud','ready')\n\nos.rename(set1, set1[:-4] + 'X.zip')\n\nreturn msg",
        "outputs": 1,
        "x": 560,
        "y": 540,
        "wires": [
            [
                "ed35109311335099"
            ]
        ]
    },
    {
        "id": "ed35109311335099",
        "type": "link out",
        "z": "4981d84ef1a366d1",
        "name": "",
        "mode": "link",
        "links": [
            "809c9427e14e2448",
            "2f4c0f98.dee2"
        ],
        "x": 655,
        "y": 540,
        "wires": []
    },
    {
        "id": "1493398979a63775",
        "type": "ui_toast",
        "z": "4981d84ef1a366d1",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "Combine",
        "x": 420,
        "y": 540,
        "wires": [
            [
                "da325be8e74179be"
            ]
        ]
    },
    {
        "id": "ada1b6f7cccc9344",
        "type": "link out",
        "z": "4981d84ef1a366d1",
        "name": "combine",
        "mode": "link",
        "links": [
            "6dd356510c446cf4"
        ],
        "x": 835,
        "y": 180,
        "wires": []
    },
    {
        "id": "6dd356510c446cf4",
        "type": "link in",
        "z": "4981d84ef1a366d1",
        "name": "combine",
        "links": [
            "ada1b6f7cccc9344"
        ],
        "x": 175,
        "y": 540,
        "wires": [
            [
                "189c1eed09624a7b"
            ]
        ]
    },
    {
        "id": "b42e061fb1f1f3d7",
        "type": "link out",
        "z": "4981d84ef1a366d1",
        "name": "",
        "mode": "link",
        "links": [
            "397ab7f44b893c89"
        ],
        "x": 435,
        "y": 140,
        "wires": []
    },
    {
        "id": "40dee936a9abac0d",
        "type": "ui_switch",
        "z": "017bd4e4a428bee5",
        "name": "",
        "label": "SSH",
        "tooltip": "",
        "group": "4fe6b4c0ade0938a",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 340,
        "wires": [
            [
                "dc354c54078ca607"
            ]
        ]
    },
    {
        "id": "4fd9bb53fdb51a25",
        "type": "ui_switch",
        "z": "017bd4e4a428bee5",
        "name": "",
        "label": "Samba",
        "tooltip": "",
        "group": "4fe6b4c0ade0938a",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "test2",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 400,
        "y": 380,
        "wires": [
            [
                "b0aa8ffae5a3578a"
            ]
        ]
    },
    {
        "id": "dc354c54078ca607",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "ssh",
        "func": "from OpenScan import load_bool, save\n\nstate = msg['payload']\n\nif state != load_bool('ssh'):\n    save('ssh', state)\n\nif state == True:\n    os.system('sudo /etc/init.d/ssh start')\nelse:\n    os.system('sudo /etc/init.d/ssh stop')",
        "outputs": 1,
        "x": 530,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "52858b4eceacc902",
        "type": "ui_button",
        "z": "017bd4e4a428bee5",
        "name": "",
        "group": "4fe6b4c0ade0938a",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Terms Of Use",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 300,
        "wires": [
            [
                "f99ec8781a33ec7d"
            ]
        ]
    },
    {
        "id": "595153429adef33b",
        "type": "ui_button",
        "z": "017bd4e4a428bee5",
        "name": "Network&Cloud",
        "group": "0fe66c9190b8a87c",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "transparent",
        "className": "",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 280,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "7dc39bd847d16ded",
        "type": "ui_toast",
        "z": "017bd4e4a428bee5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Agree",
        "cancel": "Disagree",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 410,
        "y": 300,
        "wires": [
            [
                "5f849178998d9082"
            ]
        ]
    },
    {
        "id": "02858034e17b827f",
        "type": "ui_button",
        "z": "017bd4e4a428bee5",
        "name": "General",
        "group": "4fe6b4c0ade0938a",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "transparent",
        "className": "",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 260,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "675d4933a44ae6b5",
        "type": "ui_button",
        "z": "017bd4e4a428bee5",
        "name": "Pinout",
        "group": "644b3bcc903d46ca",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "transparent",
        "className": "",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "b0aa8ffae5a3578a",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "smb",
        "func": "from OpenScan import load_bool, save\n\nstate = msg['payload']\n\nif state != load_bool('smb'):\n    save('smb', state)\nif state == True:\n    os.system('sudo /etc/init.d/smbd start')\nelse:\n    os.system('sudo /etc/init.d/smbd stop')\n\n\n",
        "outputs": 1,
        "x": 530,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "7b9d44c2b72c7558",
        "type": "ui_button",
        "z": "017bd4e4a428bee5",
        "name": "reboot",
        "group": "4fe6b4c0ade0938a",
        "order": 13,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "restart",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-repeat",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 720,
        "wires": [
            [
                "cc3cb10f2ea3f8b8",
                "d114f4d4d7f31981"
            ]
        ]
    },
    {
        "id": "b2f11720e95de6b7",
        "type": "ui_button",
        "z": "017bd4e4a428bee5",
        "name": "shutdown",
        "group": "4fe6b4c0ade0938a",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "shutdown",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-power-off",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 800,
        "wires": [
            [
                "cc3cb10f2ea3f8b8",
                "f52d4d86b39aeb6b"
            ]
        ]
    },
    {
        "id": "cc3cb10f2ea3f8b8",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "blink Light1",
        "func": "import RPi.GPIO as GPIO\nGPIO.setwarnings(False)\nGPIO.cleanup()\nfrom OpenScan import ringlight\nfrom time import sleep\n\ndelay = 0.1\nringlight(2,False)\n\nfor i in range (5):\n    ringlight(1,True)\n    sleep(delay)\n    ringlight(1,False)\n    sleep(delay)",
        "outputs": 1,
        "x": 290,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "d114f4d4d7f31981",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "reboot",
        "func": "import os\nfrom time import sleep\nsleep(1.5)\nimport RPi.GPIO as GPIO\nGPIO.setwarnings(False)\nGPIO.cleanup()\nos.system('sudo reboot')\n",
        "outputs": 1,
        "x": 270,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "f52d4d86b39aeb6b",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "shutdown",
        "func": "import os\nfrom time import sleep\nsleep(1.5)\nimport RPi.GPIO as GPIO\nGPIO.setwarnings(False)\nGPIO.cleanup()\nos.system('sudo shutdown -h now')",
        "outputs": 1,
        "x": 280,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "79181ad3b56d5c62",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "4fe6b4c0ade0938a",
        "order": 8,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Model",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 670,
        "y": 600,
        "wires": []
    },
    {
        "id": "4d81bd138733c410",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "4fe6b4c0ade0938a",
        "order": 10,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Camera",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 840,
        "y": 420,
        "wires": []
    },
    {
        "id": "80b579a4220e5c23",
        "type": "ui_dropdown",
        "z": "017bd4e4a428bee5",
        "name": "model",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "4fe6b4c0ade0938a",
        "order": 7,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Please Select",
                "value": "None",
                "type": "str"
            },
            {
                "label": "OpenScan Mini",
                "value": "OSMini",
                "type": "str"
            },
            {
                "label": "OpenScan Classic",
                "value": "OSClassic",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 390,
        "y": 600,
        "wires": [
            [
                "896242c5a7e50fa7"
            ]
        ]
    },
    {
        "id": "a2c1dba3e67be015",
        "type": "ui_dropdown",
        "z": "017bd4e4a428bee5",
        "name": "Camera",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "4fe6b4c0ade0938a",
        "order": 9,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Pi Cam v1 - 5mp",
                "value": "ov5647",
                "type": "str"
            },
            {
                "label": "Pi Cam v2 - 8mp",
                "value": "imx219",
                "type": "str"
            },
            {
                "label": "Pi Cam HQ - 12.3mp",
                "value": "imx477",
                "type": "str"
            },
            {
                "label": "Arducam IMX519 - 16mp",
                "value": "imx519",
                "type": "str"
            },
            {
                "label": "IMX290 a",
                "value": "imx290a",
                "type": "str"
            },
            {
                "label": "IMX290 b",
                "value": "imx290b",
                "type": "str"
            },
            {
                "label": "IMX378",
                "value": "imx378",
                "type": "str"
            },
            {
                "label": "OV9281",
                "value": "ov9281",
                "type": "str"
            },
            {
                "label": "DSLR (gphoto)",
                "value": "gphoto",
                "type": "str"
            },
            {
                "label": "External Camera",
                "value": "external",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 400,
        "y": 420,
        "wires": [
            [
                "4058a31e942e8f95",
                "6d68cccec646e0a0"
            ]
        ]
    },
    {
        "id": "9cf5d56263caada7",
        "type": "ui_button",
        "z": "017bd4e4a428bee5",
        "name": "Motor",
        "group": "d49a6dfd7fb17096",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "transparent",
        "className": "",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 930,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "72238e6a01d1152c",
        "type": "ui_button",
        "z": "017bd4e4a428bee5",
        "name": "camera",
        "group": "93aadb71dee6d977",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "transparent",
        "className": "",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 940,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "15a0a2f431ce55c3",
        "type": "comment",
        "z": "017bd4e4a428bee5",
        "name": "General Settings",
        "info": "",
        "x": 120,
        "y": 260,
        "wires": []
    },
    {
        "id": "87a403b9a09aa38d",
        "type": "comment",
        "z": "017bd4e4a428bee5",
        "name": "Network",
        "info": "",
        "x": 100,
        "y": 880,
        "wires": []
    },
    {
        "id": "896242c5a7e50fa7",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "model",
        "func": "from OpenScan import load_str, save\n\nstate = msg['payload']\nmsg['state'] = state\n\nif state != load_str('model'):\n    save('model', state)\n    if state == 'OSMini':\n        save('rotor_stepsperrotation',48000)\n        save('cam_rotation',90)\n\n    if state == 'OSClassic':\n        save('rotor_stepsperrotation',17067)\n        save('cam_rotation',0)",
        "outputs": 1,
        "x": 530,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "4058a31e942e8f95",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "camera",
        "func": "from OpenScan import load_str, save\nfrom json import load\nstate = msg['payload']\nstate_old = load_str('camera')\n\nif state_old != state:\n    save('camera',state)\n    return msg",
        "outputs": 1,
        "x": 540,
        "y": 500,
        "wires": [
            [
                "34b685aff2080d31"
            ]
        ]
    },
    {
        "id": "c833f6243a059d83",
        "type": "ui_switch",
        "z": "017bd4e4a428bee5",
        "name": "more sets",
        "label": "Advanced Settings",
        "tooltip": "",
        "group": "4fe6b4c0ade0938a",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 400,
        "y": 640,
        "wires": [
            [
                "8be8015931c663cc"
            ]
        ]
    },
    {
        "id": "15fd1c9e5610cb85",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "more sets",
        "func": "from OpenScan import save\n\nif msg['payload'] != 'OK':\n    msg['payload'] = False\n    return None,msg\n    \nsave('advanced_settings', True)\n\nreturn msg",
        "outputs": 2,
        "x": 820,
        "y": 640,
        "wires": [
            [
                "62cd775a1c02dac8"
            ],
            [
                "c833f6243a059d83"
            ]
        ]
    },
    {
        "id": "74c5c7cd2681045b",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "load camera&model",
        "func": "from OpenScan import load_str\n\nmodel = load_str('model')\ncamera = load_str('camera')\nmsg['model'] = model\nmsg['camera'] = camera\n\n\nif camera in ('imx219','ov5647','imx477','imx290a','imx290b','imx378','ov9281','gphoto'):\n    msg['payload'] = {\"group\":{\"hide\":[\"Scan_Arducam\"],\"show\":[\"Scan_Settings\",\"Scan_Picamera\"]}}\nelif camera in ('imx519'):\n    msg['payload'] = {\"group\":{\"hide\":[\"Scan_Picamera\"],\"show\":[\"Scan_Settings\",\"Scan_Arducam\"]}}\nelif camera in ('external'):\n    msg['payload'] = {\"group\":{\"hide\":[\"Scan_Arducam\",\"Scan_Picamera\"],\"show\":[\"Scan_Settings\"]}}\nif model == 'None' or model == '' or camera == 'None' or camera == '':\n    msg['payload'] = {\"group\":{\"hide\":[\"Scan_Picamera\",\"Scan_Arducam\",\"Scan_Settings\"],\"show\":[]}}\n\n\nreturn msg",
        "outputs": 1,
        "x": 340,
        "y": 40,
        "wires": [
            [
                "b4db790aad28ba39"
            ]
        ]
    },
    {
        "id": "b4db790aad28ba39",
        "type": "ui_ui_control",
        "z": "017bd4e4a428bee5",
        "name": "change visibility",
        "events": "all",
        "x": 560,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "eb8ccf2786ea3d63",
        "type": "inject",
        "z": "017bd4e4a428bee5",
        "name": "1s_repeater",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 40,
        "wires": [
            [
                "74c5c7cd2681045b",
                "9b756a1f9b0e7317"
            ]
        ]
    },
    {
        "id": "9b756a1f9b0e7317",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "load advanced",
        "func": "from OpenScan import load_bool\n\nif load_bool('advanced_settings') == False:\n    msg['payload']={\"group\":{\"hide\":[\"Settings_Camera\",\"Settings_Motor\",\"Settings_Pinout\",],\"show\":[\"Settings_General\",\"Settings_Network\",\"Settings_OpenScanCloud\"]}}\nelse:\n    msg['payload']={\"group\":{\"hide\":[],\"show\":[\"Settings_General\",\"Settings_Network\",\"Settings_OpenScanCloud\",\"Settings_Camera\",\"Settings_Motor\",\"Settings_Pinout\",]}}\nreturn msg",
        "outputs": 1,
        "x": 320,
        "y": 80,
        "wires": [
            [
                "b4db790aad28ba39"
            ]
        ]
    },
    {
        "id": "ca4afadb5b21751f",
        "type": "comment",
        "z": "017bd4e4a428bee5",
        "name": "Info Texts",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "f393400.d87dcc",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "check ip address",
        "func": "import socket\nimport subprocess\n\ntestIP = \"8.8.8.8\"\ns = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\ns.connect((testIP, 0))\nipaddr = s.getsockname()[0]\nhost = socket.gethostname()\n\nmsg['ip']=ipaddr\n\nreturn msg",
        "outputs": 1,
        "x": 410,
        "y": 1060,
        "wires": [
            [
                "bb789eed.9f73c"
            ]
        ]
    },
    {
        "id": "bb789eed.9f73c",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "0fe66c9190b8a87c",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Your local IP:",
        "format": "{{msg.ip}}",
        "layout": "row-spread",
        "className": "",
        "x": 590,
        "y": 1060,
        "wires": []
    },
    {
        "id": "2a0f9919.4c9a86",
        "type": "comment",
        "z": "017bd4e4a428bee5",
        "name": "OpenScanCloud",
        "info": "",
        "x": 120,
        "y": 1240,
        "wires": []
    },
    {
        "id": "27c6b221c90ed9e1",
        "type": "exec",
        "z": "017bd4e4a428bee5",
        "command": "sudo iwlist wlan0 scan | grep ESSID | sed 's/ESSID://g;s/\"//g;s/^ *//;s/ *$//'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "scan",
        "x": 250,
        "y": 1040,
        "wires": [
            [
                "b05cf92302a5c112",
                "f393400.d87dcc"
            ],
            [
                "e9677b85856b5873"
            ],
            []
        ]
    },
    {
        "id": "b05cf92302a5c112",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "WIFI",
        "func": "msg['options']=[]\n\nfor i in msg['payload'].split('\\n'):\n    if i not in msg['options'] and i!=\"\":\n        msg['options'].append(i)\n        \nif len(msg['options']) != 0:\n    msg['enabled']=True\n\nreturn msg",
        "outputs": 1,
        "x": 370,
        "y": 1020,
        "wires": [
            [
                "59c9f67283ba1709"
            ]
        ]
    },
    {
        "id": "da5ddaf4cc25b8c8",
        "type": "ui_button",
        "z": "017bd4e4a428bee5",
        "name": "search",
        "group": "0fe66c9190b8a87c",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Search Wifi",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 90,
        "y": 980,
        "wires": [
            [
                "27c6b221c90ed9e1",
                "51521bc6eb44cde5"
            ]
        ]
    },
    {
        "id": "59c9f67283ba1709",
        "type": "ui_dropdown",
        "z": "017bd4e4a428bee5",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select Wifi",
        "group": "0fe66c9190b8a87c",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 520,
        "y": 980,
        "wires": [
            [
                "2bb52656f9554dab"
            ]
        ]
    },
    {
        "id": "b2d7d6a730f7dca6",
        "type": "ui_button",
        "z": "017bd4e4a428bee5",
        "name": "Reset Wifi",
        "group": "0fe66c9190b8a87c",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Reset Wifi",
        "tooltip": "",
        "color": "red",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Delete all prior wifi connections? (You will need to reconnect to the OpenScan device by Ethernet or manually modify the wpa_supplicant.conf)",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 110,
        "y": 1140,
        "wires": [
            [
                "78985ac6d3bcdf60"
            ]
        ]
    },
    {
        "id": "c3b8faac9ebb2c80",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "Reset Wifi",
        "func": "from time import sleep\n\nif msg['payload']!=\"Yes\":\n    return\n\ntemp_dir = '/home/pi/OpenScan/tmp/wpa_empty.log'\nwpa_dir = '/etc/wpa_supplicant/wpa_supplicant.conf'\n\nwith open(temp_dir, 'w+') as file:\n    file.write('update_config=1\\nctrl_interface=DIR=/var/run/wpa_supplicant\\ncountry=de\\n\\n')\nos.system('sudo mv '+ temp_dir + ' ' + wpa_dir)\nos.system('sudo wpa_cli -i wlan0 reconfigure')\nsleep(3)\nos.system('sudo systemctl restart nodered')\nreturn msg",
        "outputs": 1,
        "x": 440,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "78985ac6d3bcdf60",
        "type": "ui_toast",
        "z": "017bd4e4a428bee5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "No",
        "cancel": "Yes",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 270,
        "y": 1140,
        "wires": [
            [
                "c3b8faac9ebb2c80"
            ]
        ]
    },
    {
        "id": "4f7f49b12c2d2572",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "add Wifi",
        "func": "from time import sleep\nsleep(0.1)\n\nos.system('sudo wpa_cli -i wlan0 reconfigure')\n\nreturn msg",
        "outputs": 1,
        "x": 1320,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "ebcc98685059b9d4",
        "type": "ui_toast",
        "z": "017bd4e4a428bee5",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "password",
        "x": 780,
        "y": 980,
        "wires": [
            [
                "68204a14528ab842"
            ]
        ]
    },
    {
        "id": "68204a14528ab842",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "msg",
        "func": "if msg['payload'] == 'Cancel':\n    return\n\nmsg['password'] = msg['payload']\nmsg['payload']='Enter country code (ISO 3166-1 alpha-2, see: <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">Wikipedia</a>)'\n\n\nreturn msg",
        "outputs": 1,
        "x": 910,
        "y": 980,
        "wires": [
            [
                "852edf901bdec9c5"
            ]
        ]
    },
    {
        "id": "852edf901bdec9c5",
        "type": "ui_toast",
        "z": "017bd4e4a428bee5",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Save",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "country",
        "x": 1040,
        "y": 980,
        "wires": [
            [
                "1b09d634e3d9357b"
            ]
        ]
    },
    {
        "id": "1b09d634e3d9357b",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "modWPA",
        "func": "if msg['payload'] == 'Cancel':\n    return\n\nif len(msg['payload'])!=2:\n    msg['payload'] = 'invalid country code'\n    return msg,None\n\nwpa_dir = '/etc/wpa_supplicant/wpa_supplicant.conf'\n\ntemp_dir = '/home/pi/OpenScan/tmp/wpa'\n\ncode = msg['payload'].upper()\nssid = msg['ssid']\npassword = msg['password']\n\nif len(code) != 2:\n    msg['topic'] = 'ERROR'\n    msg['payload'] = 'invalid country code (see  ISO 3166-1 alpha-2)'\n    return msg\n\nwith open(wpa_dir, 'r') as file:\n    for i in file.readlines():\n        if 'country=' in i:\n            code_old=i.split('country=')[1][0:2]\n            break\n\nwith open(wpa_dir, 'r') as file:\n    wpa = file.read()\n    if ssid in wpa:\n        msg['topic'] = 'ERROR'\n        msg['payload'] = 'Network already exists! If you have trouble connecting, please consider resetting the saved Wifi connections.'\n        return msg\n    wpa=wpa.replace('country=' + code_old, 'country=' + code)\n    wpa=wpa + '\\nnetwork={\\n priority=10\\n ssid=\"'+ssid+'\"\\n psk=\"'+password+'\"\\n}\\n'\n\nwith open(temp_dir,'w+') as file:\n    file.write(wpa)\nos.system('sudo mv '+temp_dir + ' ' + wpa_dir)\n\nmsg['topic'] = 'Updating Wifi'\nmsg['payload'] = 'reconnecting might take a moment'\nreturn msg,msg\n",
        "outputs": 2,
        "x": 1180,
        "y": 980,
        "wires": [
            [
                "03732a7d3b0c95aa"
            ],
            [
                "4f7f49b12c2d2572"
            ]
        ]
    },
    {
        "id": "03732a7d3b0c95aa",
        "type": "ui_toast",
        "z": "017bd4e4a428bee5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1330,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "e97d17c6590138e2",
        "type": "ui_button",
        "z": "017bd4e4a428bee5",
        "name": "Cloud",
        "group": "3b4bd36726be16d5",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "transparent",
        "className": "",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 930,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "f7bf47e3eec6d736",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "3b4bd36726be16d5",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Max. Number of Photos:",
        "format": "{{msg.limit_photos}}",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 1380,
        "wires": []
    },
    {
        "id": "b52d91c628b151a4",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "3b4bd36726be16d5",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Max. Filesize (GB):",
        "format": "{{msg.limit_filesize}}",
        "layout": "row-spread",
        "className": "",
        "x": 390,
        "y": 1420,
        "wires": []
    },
    {
        "id": "1969c709ef2fd1d5",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "3b4bd36726be16d5",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Credit (GB):",
        "format": "{{msg.credit}}",
        "layout": "row-spread",
        "className": "",
        "x": 370,
        "y": 1460,
        "wires": []
    },
    {
        "id": "88e92b621d2a3394",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "save",
        "func": "import requests\nimport os\nfrom OpenScan import save, OpenScanCloud\n\nif msg['payload']!=\"Yes\":\n    return None,msg\n\ntry:\n    r = OpenScanCloud('getTokenInfo', {'token':msg['token']})\n    if r.status_code != 200:\n        msg['payload'] = 'Could not verify token'\n        return msg \n    \n    msg1 = r.json()\n    \n    save('osc_credit',msg1['credit'])\n    save('osc_limit_filesize',msg1['limit_filesize'])\n    save('osc_limit_photos',msg1['limit_photos'])\n    msg1['enabled'] = True\nexcept:\n    pass\n\nsave('token',msg['token'])\n    \nmsg['payload'] = 'Token verified and saved'\nreturn msg, msg1",
        "outputs": 2,
        "x": 750,
        "y": 1320,
        "wires": [
            [
                "76acd48a511a5e3e",
                "b01581296b94dfcd"
            ],
            [
                "9c51aa678f16980f"
            ]
        ]
    },
    {
        "id": "76acd48a511a5e3e",
        "type": "ui_toast",
        "z": "017bd4e4a428bee5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 890,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "5f50ed3f6ba37cef",
        "type": "ui_text_input",
        "z": "017bd4e4a428bee5",
        "name": "",
        "label": "Token",
        "tooltip": "",
        "group": "3b4bd36726be16d5",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 350,
        "y": 1340,
        "wires": [
            [
                "cb62d30728af2968"
            ]
        ]
    },
    {
        "id": "cb62d30728af2968",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "Save?",
        "func": "msg['token'] = msg['payload']\n\nif len(msg['payload'])>=14:\n    \n    msg[\"payload\"]='Save and verify token: ' + msg['payload']\n    return msg\nelse:\n    return None,msg",
        "outputs": 2,
        "x": 470,
        "y": 1340,
        "wires": [
            [
                "94e503dd2e64d903"
            ],
            [
                "d859bb39914d4999"
            ]
        ]
    },
    {
        "id": "0dd01eef6e70059e",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "text",
        "func": "from OpenScan import load_str\n\ntoken = load_str('token')[0:8]\nmsg['payload']= token + '...'\nif len(token)==0:\n    msg['payload']=\"enter token\"\nreturn msg",
        "outputs": 1,
        "x": 230,
        "y": 1340,
        "wires": [
            [
                "5f50ed3f6ba37cef"
            ]
        ]
    },
    {
        "id": "788fabff98c7973c",
        "type": "link in",
        "z": "017bd4e4a428bee5",
        "name": "token",
        "links": [
            "960912e90ba5b5bc",
            "b01581296b94dfcd",
            "d859bb39914d4999"
        ],
        "x": 75,
        "y": 1340,
        "wires": [
            [
                "0dd01eef6e70059e"
            ]
        ]
    },
    {
        "id": "94e503dd2e64d903",
        "type": "ui_toast",
        "z": "017bd4e4a428bee5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "No",
        "cancel": "Yes",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 610,
        "y": 1320,
        "wires": [
            [
                "88e92b621d2a3394"
            ]
        ]
    },
    {
        "id": "d859bb39914d4999",
        "type": "link out",
        "z": "017bd4e4a428bee5",
        "name": "",
        "mode": "link",
        "links": [
            "788fabff98c7973c"
        ],
        "x": 555,
        "y": 1360,
        "wires": []
    },
    {
        "id": "9c51aa678f16980f",
        "type": "link out",
        "z": "017bd4e4a428bee5",
        "name": "",
        "links": [
            "5d267acc10020091",
            "397ab7f44b893c89"
        ],
        "x": 835,
        "y": 1360,
        "wires": []
    },
    {
        "id": "397ab7f44b893c89",
        "type": "link in",
        "z": "017bd4e4a428bee5",
        "name": "OSCparameters",
        "links": [
            "960912e90ba5b5bc",
            "9c51aa678f16980f",
            "b42e061fb1f1f3d7"
        ],
        "x": 75,
        "y": 1380,
        "wires": [
            [
                "a7fd00943edc380b"
            ]
        ]
    },
    {
        "id": "b01581296b94dfcd",
        "type": "link out",
        "z": "017bd4e4a428bee5",
        "name": "",
        "links": [
            "788fabff98c7973c",
            "5d267acc10020091"
        ],
        "x": 835,
        "y": 1320,
        "wires": []
    },
    {
        "id": "bf6d941ad307ce22",
        "type": "ui_toast",
        "z": "017bd4e4a428bee5",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 250,
        "y": 1520,
        "wires": [
            [
                "f22dfef37d5de773"
            ]
        ]
    },
    {
        "id": "f22dfef37d5de773",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "msg",
        "func": "import re\n\nif msg['payload'] == 'Cancel':\n    return\n\nmail = msg['payload']\nemail_regex = re.compile(r\"[^@]+@[^@]+\\.[^@]+\")\n\nif email_regex.match(mail) != None:\n    msg['mail'] = mail\n    msg['topic'] = 'OpenScanCloud Registration (2/3)'\n    msg['payload'] = 'Enter your first name'\n    return msg\nmsg['payload'] = 'invalid input'\nreturn None,msg\n",
        "outputs": 2,
        "x": 390,
        "y": 1520,
        "wires": [
            [
                "54602ee49ca022e7"
            ],
            [
                "1505f3e72f971081"
            ]
        ]
    },
    {
        "id": "1505f3e72f971081",
        "type": "ui_toast",
        "z": "017bd4e4a428bee5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 530,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "54602ee49ca022e7",
        "type": "ui_toast",
        "z": "017bd4e4a428bee5",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 530,
        "y": 1520,
        "wires": [
            [
                "f9efcb87b74abbd4"
            ]
        ]
    },
    {
        "id": "510dbe4d76253bd6",
        "type": "ui_toast",
        "z": "017bd4e4a428bee5",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "SUBMIT",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 810,
        "y": 1520,
        "wires": [
            [
                "600b2306caed1640"
            ]
        ]
    },
    {
        "id": "600b2306caed1640",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "msg",
        "func": "import requests\nimport os\nfrom OpenScan import OpenScanCloud\n\nif msg['payload'] == 'Cancel':\n    return\n\nmsg['lastname'] = msg['payload']\n\nmsg2 = {}\n\nfor i in ['forename','lastname','mail']:\n    msg2[i] = msg[i]\n\nr = OpenScanCloud('requestToken',msg2)\n\nstatus = r.status_code\n\nmsg['topic'] = 'OpenScanCloud Registration - Success'\nmsg['payload'] = 'registration done, you will get an email with your token within the next one or two days :)'\n\nif status != 200:\n    msg['topic'] = 'OpenScanCloud Registration - Failed'\n    msg['payload'] = 'Registration failed, please try again.'\n\nmsg['status'] = status\n\nreturn msg",
        "outputs": 1,
        "x": 950,
        "y": 1520,
        "wires": [
            [
                "bbad1ab5f8f63fb7",
                "b53c3038b7cb62b0"
            ]
        ]
    },
    {
        "id": "d34cd203725bac15",
        "type": "ui_button",
        "z": "017bd4e4a428bee5",
        "name": "Register",
        "group": "3b4bd36726be16d5",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Register",
        "tooltip": "testtesttest",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Please enter your email address:",
        "payloadType": "str",
        "topic": "Requesting an OpenScanCloud Token",
        "topicType": "str",
        "x": 100,
        "y": 1520,
        "wires": [
            [
                "bf6d941ad307ce22"
            ]
        ]
    },
    {
        "id": "bbad1ab5f8f63fb7",
        "type": "ui_toast",
        "z": "017bd4e4a428bee5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1090,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "a7fd00943edc380b",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "msg",
        "func": "from OpenScan import load_int\n\nmsg = {}\n\ntry:\n    msg['credit'] = float(int(load_int('osc_credit')/10000000))/100\n    msg['limit_filesize'] = float(int(load_int('osc_limit_filesize')/10000000))/100\n    msg['limit_photos'] = load_int('osc_limit_photos')\n    return msg\nexcept:\n    pass",
        "outputs": 1,
        "x": 230,
        "y": 1380,
        "wires": [
            [
                "f7bf47e3eec6d736",
                "b52d91c628b151a4",
                "1969c709ef2fd1d5"
            ]
        ]
    },
    {
        "id": "124459147143ec6a",
        "type": "comment",
        "z": "017bd4e4a428bee5",
        "name": "Motor",
        "info": "",
        "x": 90,
        "y": 1620,
        "wires": []
    },
    {
        "id": "dbd62b91a6c9c412",
        "type": "comment",
        "z": "017bd4e4a428bee5",
        "name": "Camera",
        "info": "",
        "x": 90,
        "y": 2280,
        "wires": []
    },
    {
        "id": "842b6fe016087ce3",
        "type": "comment",
        "z": "017bd4e4a428bee5",
        "name": "Pinout",
        "info": "",
        "x": 110,
        "y": 2780,
        "wires": []
    },
    {
        "id": "8c1a92f2dcc976c7",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "Rotor_delay (ms)",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0.01",
        "max": "0.2",
        "step": "0.005",
        "className": "",
        "x": 450,
        "y": 1820,
        "wires": [
            [
                "bb54bbdae6690576"
            ]
        ]
    },
    {
        "id": "2647111c06f2055d",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "tt delay",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 25,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0.01",
        "max": "0.2",
        "step": "0.005",
        "className": "",
        "x": 420,
        "y": 2060,
        "wires": [
            [
                "fb8145a9f8d4f7b2"
            ]
        ]
    },
    {
        "id": "f9b51424edb0491c",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "rotor_acc",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 14,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0.1",
        "max": "2",
        "step": "0.1",
        "className": "",
        "x": 420,
        "y": 1860,
        "wires": [
            [
                "ea87ecfd2af3cc7f"
            ]
        ]
    },
    {
        "id": "1ab34b0a78b2c577",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "rotor_accramp",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 16,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "100",
        "max": "5000",
        "step": "100",
        "className": "",
        "x": 440,
        "y": 1900,
        "wires": [
            [
                "249f44c3a87793ba"
            ]
        ]
    },
    {
        "id": "1d4230b3d9b93f63",
        "type": "ui_text_input",
        "z": "017bd4e4a428bee5",
        "name": "rotor_stepsperrotation",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 10,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 460,
        "y": 1780,
        "wires": [
            [
                "0bb56b1edb12c2cf"
            ]
        ]
    },
    {
        "id": "2e3222f0aba88040",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "d49a6dfd7fb17096",
        "order": 15,
        "width": 3,
        "height": 1,
        "name": "rotor Accramp",
        "label": "Acceleration ramp",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 780,
        "y": 1860,
        "wires": []
    },
    {
        "id": "9d50311679acf215",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "d49a6dfd7fb17096",
        "order": 9,
        "width": 3,
        "height": 1,
        "name": "rotor_Steps per Rotation",
        "label": "Steps per Rotation",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 810,
        "y": 1900,
        "wires": []
    },
    {
        "id": "25d7b4dd2aab8f05",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "d49a6dfd7fb17096",
        "order": 13,
        "width": 3,
        "height": 1,
        "name": "rotor Acc",
        "label": "Acceleration",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 760,
        "y": 1820,
        "wires": []
    },
    {
        "id": "15682cca9622831f",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "d49a6dfd7fb17096",
        "order": 11,
        "width": 3,
        "height": 1,
        "name": "rotor_delay",
        "label": "Delay",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 770,
        "y": 1780,
        "wires": []
    },
    {
        "id": "8e2d22042bfcb4e8",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "d49a6dfd7fb17096",
        "order": 21,
        "width": 6,
        "height": 1,
        "name": "tt",
        "label": "TURNTABLE",
        "format": "",
        "layout": "row-center",
        "className": "",
        "x": 90,
        "y": 2020,
        "wires": []
    },
    {
        "id": "56bc3b93af2ebe16",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "tt_acc",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 27,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0.1",
        "max": "2",
        "step": "0.1",
        "className": "",
        "x": 410,
        "y": 2100,
        "wires": [
            [
                "35422077b53da9bf"
            ]
        ]
    },
    {
        "id": "6ef996f8a36f94c2",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "tt_accramp",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 29,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "1",
        "max": "500",
        "step": "1",
        "className": "",
        "x": 430,
        "y": 2140,
        "wires": [
            [
                "2c000bd53cdb98ca"
            ]
        ]
    },
    {
        "id": "0c50fdbb5ac3c373",
        "type": "ui_text_input",
        "z": "017bd4e4a428bee5",
        "name": "tt_stepsperrotation",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 23,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 450,
        "y": 2020,
        "wires": [
            [
                "485a4bed5a6bea23"
            ]
        ]
    },
    {
        "id": "213ccfb441a42890",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "d49a6dfd7fb17096",
        "order": 28,
        "width": 3,
        "height": 1,
        "name": "ttAccramp",
        "label": "Acceleration ramp",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 760,
        "y": 2140,
        "wires": []
    },
    {
        "id": "73c9b4d09dc25e54",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "d49a6dfd7fb17096",
        "order": 22,
        "width": 3,
        "height": 1,
        "name": "tt_steps per Rotation",
        "label": "Steps per Rotation",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 800,
        "y": 2020,
        "wires": []
    },
    {
        "id": "a81824c92f22487d",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "d49a6dfd7fb17096",
        "order": 26,
        "width": 3,
        "height": 1,
        "name": "tt Acc",
        "label": "Acceleration",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 750,
        "y": 2100,
        "wires": []
    },
    {
        "id": "9715161858f69649",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "d49a6dfd7fb17096",
        "order": 24,
        "width": 3,
        "height": 1,
        "name": "tt_delay",
        "label": "Delay",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 760,
        "y": 2060,
        "wires": []
    },
    {
        "id": "1b3ac50d2c6600c6",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "rotor_angle",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 18,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "1",
        "max": "180",
        "step": "1",
        "className": "",
        "x": 430,
        "y": 1940,
        "wires": [
            [
                "e0d7c36daa42b3f3"
            ]
        ]
    },
    {
        "id": "6dcd1f0ccb01a299",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "d49a6dfd7fb17096",
        "order": 17,
        "width": 3,
        "height": 1,
        "name": "rotor_angle",
        "label": "Manual angle",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 770,
        "y": 1940,
        "wires": []
    },
    {
        "id": "16e9a3a71c4bb916",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "tt_angle",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 31,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "1",
        "max": "180",
        "step": "1",
        "className": "",
        "x": 420,
        "y": 2180,
        "wires": [
            [
                "c34111aaec734dd9"
            ]
        ]
    },
    {
        "id": "888161059eb9c71c",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "d49a6dfd7fb17096",
        "order": 30,
        "width": 3,
        "height": 1,
        "name": "tt_angle",
        "label": "Manual angle",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 2180,
        "wires": []
    },
    {
        "id": "f4fc72297074c7ae",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "d49a6dfd7fb17096",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "rotor",
        "label": "ROTOR",
        "format": "",
        "layout": "row-center",
        "className": "",
        "x": 90,
        "y": 1680,
        "wires": []
    },
    {
        "id": "9b1d8f9e21b34102",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "tt_dir",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 33,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0",
        "max": "1",
        "step": "1",
        "className": "",
        "x": 410,
        "y": 2220,
        "wires": [
            [
                "89dbbe7d99ddbbaf"
            ]
        ]
    },
    {
        "id": "b2e839fe47a32b5f",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "rotor_dir",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 20,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0",
        "max": "1",
        "step": "1",
        "className": "",
        "x": 420,
        "y": 1980,
        "wires": [
            [
                "204b0a5c8629d78a"
            ]
        ]
    },
    {
        "id": "4519daf0b4b28aef",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "d49a6dfd7fb17096",
        "order": 32,
        "width": 3,
        "height": 1,
        "name": "tt_dir",
        "label": "Direction",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 2220,
        "wires": []
    },
    {
        "id": "5f269ea2c8a53f6c",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "d49a6dfd7fb17096",
        "order": 19,
        "width": 3,
        "height": 1,
        "name": "rotor_dir",
        "label": "Direction",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 1980,
        "wires": []
    },
    {
        "id": "b67dfacfc9a23aa5",
        "type": "link in",
        "z": "017bd4e4a428bee5",
        "name": "advanced settings",
        "links": [
            "62cd775a1c02dac8"
        ],
        "x": 95,
        "y": 80,
        "wires": [
            [
                "9b756a1f9b0e7317"
            ]
        ]
    },
    {
        "id": "62cd775a1c02dac8",
        "type": "link out",
        "z": "017bd4e4a428bee5",
        "name": "",
        "mode": "link",
        "links": [
            "b67dfacfc9a23aa5"
        ],
        "x": 955,
        "y": 640,
        "wires": []
    },
    {
        "id": "9d94dbc523d989a3",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "cam_delay_after",
        "label": "",
        "tooltip": "",
        "group": "93aadb71dee6d977",
        "order": 11,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0",
        "max": "5",
        "step": "0.1",
        "className": "",
        "x": 440,
        "y": 2420,
        "wires": [
            [
                "b81e238ccd0a04fe"
            ]
        ]
    },
    {
        "id": "0558d6eb9a01862e",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "cam_delay_before",
        "label": "",
        "tooltip": "",
        "group": "93aadb71dee6d977",
        "order": 9,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0",
        "max": "5",
        "step": "0.1",
        "className": "",
        "x": 450,
        "y": 2460,
        "wires": [
            [
                "a0048747e7300bdc"
            ]
        ]
    },
    {
        "id": "d47515c9b208bfb7",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "cam_timeout",
        "label": "",
        "tooltip": "",
        "group": "93aadb71dee6d977",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0.01",
        "max": "1",
        "step": "0.01",
        "className": "",
        "x": 430,
        "y": 2380,
        "wires": [
            [
                "9b0d5c521a7822cc"
            ]
        ]
    },
    {
        "id": "89c76766c7552b57",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "cam_gain",
        "label": "",
        "tooltip": "",
        "group": "93aadb71dee6d977",
        "order": 17,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0",
        "max": "10",
        "step": "0.1",
        "className": "",
        "x": 420,
        "y": 2500,
        "wires": [
            [
                "9b26ed02296d27c9"
            ]
        ]
    },
    {
        "id": "c385518eb65a1b27",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "cam_awbg_red",
        "label": "",
        "tooltip": "",
        "group": "93aadb71dee6d977",
        "order": 13,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "-10",
        "max": "10",
        "step": "0.1",
        "className": "",
        "x": 440,
        "y": 2540,
        "wires": [
            [
                "b0ac7e9a7c713b84"
            ]
        ]
    },
    {
        "id": "5c80833b718d9bf6",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "cam_awbg_blue",
        "label": "",
        "tooltip": "",
        "group": "93aadb71dee6d977",
        "order": 15,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "-10",
        "max": "10",
        "step": "0.1",
        "className": "",
        "x": 440,
        "y": 2580,
        "wires": [
            [
                "827b1a671a77037d"
            ]
        ]
    },
    {
        "id": "5a3826e112fb24e6",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "cam_contrast",
        "label": "",
        "tooltip": "",
        "group": "93aadb71dee6d977",
        "order": 19,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0",
        "max": "5",
        "step": "0.1",
        "className": "",
        "x": 440,
        "y": 2620,
        "wires": [
            [
                "78a1536c167da741"
            ]
        ]
    },
    {
        "id": "3182ed7ac02b1509",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "cam_saturation",
        "label": "",
        "tooltip": "",
        "group": "93aadb71dee6d977",
        "order": 21,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0",
        "max": "5",
        "step": "0.1",
        "className": "",
        "x": 440,
        "y": 2660,
        "wires": [
            [
                "fe9a5b68fc8c2077"
            ]
        ]
    },
    {
        "id": "7fa6337cdf0a0bc8",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "cam_jpeg_q",
        "label": "",
        "tooltip": "",
        "group": "93aadb71dee6d977",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "1",
        "max": "100",
        "step": "1",
        "className": "",
        "x": 430,
        "y": 2700,
        "wires": [
            [
                "e27d2613e942f344"
            ]
        ]
    },
    {
        "id": "08275bf96f87b8ef",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "93aadb71dee6d977",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "timeout",
        "label": "Timeout",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 2380,
        "wires": []
    },
    {
        "id": "d2d028df4a139f41",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "93aadb71dee6d977",
        "order": 10,
        "width": 3,
        "height": 1,
        "name": "delay_after",
        "label": "Delay after",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 770,
        "y": 2420,
        "wires": []
    },
    {
        "id": "c6a65762aa4ffb7b",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "93aadb71dee6d977",
        "order": 8,
        "width": 3,
        "height": 1,
        "name": "delay_before",
        "label": "Delay before",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 770,
        "y": 2460,
        "wires": []
    },
    {
        "id": "780323fd4504b855",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "93aadb71dee6d977",
        "order": 16,
        "width": 3,
        "height": 1,
        "name": "gain",
        "label": "Gain",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 2500,
        "wires": []
    },
    {
        "id": "780bf08b41202135",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "93aadb71dee6d977",
        "order": 12,
        "width": 3,
        "height": 1,
        "name": "awbg red",
        "label": "AWBG red",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 2540,
        "wires": []
    },
    {
        "id": "c0faf441fc918538",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "93aadb71dee6d977",
        "order": 14,
        "width": 3,
        "height": 1,
        "name": "awbg blue",
        "label": "AWBG blue",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 770,
        "y": 2580,
        "wires": []
    },
    {
        "id": "93d12b447a39c5bb",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "93aadb71dee6d977",
        "order": 18,
        "width": 3,
        "height": 1,
        "name": "contrast",
        "label": "Contrast",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 2620,
        "wires": []
    },
    {
        "id": "e77e6dcd285d3062",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "93aadb71dee6d977",
        "order": 20,
        "width": 3,
        "height": 1,
        "name": "saturation",
        "label": "Saturation",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 2660,
        "wires": []
    },
    {
        "id": "a7075bc8d5ee1138",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "93aadb71dee6d977",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "jpegQ",
        "label": "Jpeg Quality",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 2700,
        "wires": []
    },
    {
        "id": "282681e7c4351f74",
        "type": "ui_text_input",
        "z": "017bd4e4a428bee5",
        "name": "ext",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 410,
        "y": 2820,
        "wires": [
            [
                "b17e82651407d8e0"
            ]
        ]
    },
    {
        "id": "da43c58979737fec",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "644b3bcc903d46ca",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "ext",
        "label": "External Camera",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 2820,
        "wires": []
    },
    {
        "id": "ef70d61678fe1f11",
        "type": "ui_text_input",
        "z": "017bd4e4a428bee5",
        "name": "light1",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 410,
        "y": 2860,
        "wires": [
            [
                "2c812acffdb330c5"
            ]
        ]
    },
    {
        "id": "fec56a7e913b21d6",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "644b3bcc903d46ca",
        "order": 4,
        "width": 4,
        "height": 1,
        "name": "light1",
        "label": "Light 1",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 2860,
        "wires": []
    },
    {
        "id": "24929b4629f22070",
        "type": "ui_text_input",
        "z": "017bd4e4a428bee5",
        "name": "light2",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 410,
        "y": 2900,
        "wires": [
            [
                "ae0654af69446942"
            ]
        ]
    },
    {
        "id": "7c6bdc0504aa4cc7",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "644b3bcc903d46ca",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "light2",
        "label": "Light 2",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 2900,
        "wires": []
    },
    {
        "id": "8c396b060f3d2646",
        "type": "ui_text_input",
        "z": "017bd4e4a428bee5",
        "name": "rotordir",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 420,
        "y": 2940,
        "wires": [
            [
                "58cf48cfacc979fb"
            ]
        ]
    },
    {
        "id": "97568610daccf74a",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "644b3bcc903d46ca",
        "order": 8,
        "width": 4,
        "height": 1,
        "name": "rotordir",
        "label": "Rotor direction",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 2940,
        "wires": []
    },
    {
        "id": "a3c58ea48c388215",
        "type": "ui_text_input",
        "z": "017bd4e4a428bee5",
        "name": "rotorstep",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 420,
        "y": 2980,
        "wires": [
            [
                "c7ae206f2fff6810"
            ]
        ]
    },
    {
        "id": "6da92aeaeffd95e0",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "644b3bcc903d46ca",
        "order": 10,
        "width": 4,
        "height": 1,
        "name": "rotorstep",
        "label": "Rotor step",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 2980,
        "wires": []
    },
    {
        "id": "9b5da90eaf6ac562",
        "type": "ui_text_input",
        "z": "017bd4e4a428bee5",
        "name": "rotoren",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 13,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 420,
        "y": 3020,
        "wires": [
            [
                "cfebd4a47a68b319"
            ]
        ]
    },
    {
        "id": "12623e4addfa2c22",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "644b3bcc903d46ca",
        "order": 12,
        "width": 4,
        "height": 1,
        "name": "rotoren",
        "label": "Rotor enable",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 3020,
        "wires": []
    },
    {
        "id": "f24cb404d7d09f8a",
        "type": "ui_text_input",
        "z": "017bd4e4a428bee5",
        "name": "ttdir",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 15,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 410,
        "y": 3060,
        "wires": [
            [
                "90f4d220928e4727"
            ]
        ]
    },
    {
        "id": "542bfb9d92935c2c",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "644b3bcc903d46ca",
        "order": 14,
        "width": 4,
        "height": 1,
        "name": "ttdir",
        "label": "Turntable direction",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 3060,
        "wires": []
    },
    {
        "id": "1f79467df98ce894",
        "type": "ui_text_input",
        "z": "017bd4e4a428bee5",
        "name": "ttstep",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 17,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 410,
        "y": 3100,
        "wires": [
            [
                "b05e1e612887f9c2"
            ]
        ]
    },
    {
        "id": "170d3b925f7745cc",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "644b3bcc903d46ca",
        "order": 16,
        "width": 4,
        "height": 1,
        "name": "ttstep",
        "label": "Turntable step",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 3100,
        "wires": []
    },
    {
        "id": "65b0130e390c2e67",
        "type": "ui_text_input",
        "z": "017bd4e4a428bee5",
        "name": "tten",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 19,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 410,
        "y": 3140,
        "wires": [
            [
                "fe22723ce5a3495f"
            ]
        ]
    },
    {
        "id": "10ac340984418a58",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "644b3bcc903d46ca",
        "order": 18,
        "width": 4,
        "height": 1,
        "name": "tten",
        "label": "Turntable enable",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 3140,
        "wires": []
    },
    {
        "id": "661614f5bd2c71d6",
        "type": "ui_text_input",
        "z": "017bd4e4a428bee5",
        "name": "endstop1",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 21,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 420,
        "y": 3180,
        "wires": [
            [
                "2af447a6905b83bc"
            ]
        ]
    },
    {
        "id": "c18b55859dae5f85",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "644b3bcc903d46ca",
        "order": 20,
        "width": 4,
        "height": 1,
        "name": "endstop1",
        "label": "Endstop 1",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 3180,
        "wires": []
    },
    {
        "id": "e23a396162026618",
        "type": "ui_text_input",
        "z": "017bd4e4a428bee5",
        "name": "endstop2",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 23,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 420,
        "y": 3220,
        "wires": [
            [
                "787a128f84f747c0"
            ]
        ]
    },
    {
        "id": "82c1a33014d003e9",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "644b3bcc903d46ca",
        "order": 22,
        "width": 4,
        "height": 1,
        "name": "endstop1",
        "label": "Endstop 2",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 3220,
        "wires": []
    },
    {
        "id": "5255759a7c5b2a74",
        "type": "ui_toast",
        "z": "017bd4e4a428bee5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "confirm",
        "x": 680,
        "y": 640,
        "wires": [
            [
                "15fd1c9e5610cb85"
            ]
        ]
    },
    {
        "id": "8be8015931c663cc",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "msg",
        "func": "from OpenScan import save, load_bool\n\nif msg['payload'] == True and not load_bool('advanced_settings'):\n    msg['payload'] = '''<p style=\"text-align: center;\"><span style=\"font-size: 22px;\"><strong><u>PLEASE READ :)</u></strong></span></p>\n<p style=\"margin-left: 20px; text-align: center;\"><strong>Modifying the advanced settings can potentially damage your device and/or the connected peripherals.</strong></p>\n<p style=\"margin-left: 20px; text-align: center;\"><strong>Please read the given information texts carefully and only change settings, when you are sure about the consequences!</strong></p>\n'''\n    return msg\nelif not msg['payload']: \n    save('advanced_settings', False)\n",
        "outputs": 1,
        "x": 530,
        "y": 640,
        "wires": [
            [
                "5255759a7c5b2a74"
            ]
        ]
    },
    {
        "id": "9d464b2ba1edaf48",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "cam_rotation",
        "label": "",
        "tooltip": "",
        "group": "93aadb71dee6d977",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0",
        "max": "270",
        "step": "90",
        "className": "",
        "x": 430,
        "y": 2740,
        "wires": [
            [
                "b7d3fe0c0b40b3e1"
            ]
        ]
    },
    {
        "id": "db98b95693ebce63",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "93aadb71dee6d977",
        "order": 4,
        "width": 3,
        "height": 1,
        "name": "cam_rot",
        "label": "Image Rotation",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 2740,
        "wires": []
    },
    {
        "id": "6659121906897a1f",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'rotor_stepsperrotation'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1780,
        "wires": [
            [
                "1d4230b3d9b93f63"
            ]
        ]
    },
    {
        "id": "0bb56b1edb12c2cf",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'rotor_stepsperrotation'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "569829eeff715c33",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'rotor_accramp'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1900,
        "wires": [
            [
                "1ab34b0a78b2c577"
            ]
        ]
    },
    {
        "id": "249f44c3a87793ba",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'rotor_accramp'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "c997e60519341afd",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'rotor_angle'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1940,
        "wires": [
            [
                "1b3ac50d2c6600c6"
            ]
        ]
    },
    {
        "id": "e0d7c36daa42b3f3",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'rotor_angle'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "59ecf3a22cd3a669",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'rotor_dir'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1980,
        "wires": [
            [
                "b2e839fe47a32b5f"
            ]
        ]
    },
    {
        "id": "204b0a5c8629d78a",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'rotor_dir'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nif (msg.payload === 1){\n    content = '1'\n}\nelse{\n    content = '-1'\n}\n\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "15f02421b30a9ab6",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadF",
        "func": "var file = 'rotor_delay'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data) * 1000;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1820,
        "wires": [
            [
                "8c1a92f2dcc976c7"
            ]
        ]
    },
    {
        "id": "bb54bbdae6690576",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'rotor_delay'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload / 1000)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "58928befcc61b1f7",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadF",
        "func": "var file = 'rotor_acc'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1860,
        "wires": [
            [
                "f9b51424edb0491c"
            ]
        ]
    },
    {
        "id": "ea87ecfd2af3cc7f",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'rotor_acc'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "27bc56f273360ac7",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'tt_stepsperrotation'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2020,
        "wires": [
            [
                "0c50fdbb5ac3c373"
            ]
        ]
    },
    {
        "id": "f46ced86106306c8",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'tt_accramp'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2140,
        "wires": [
            [
                "6ef996f8a36f94c2"
            ]
        ]
    },
    {
        "id": "4339704cd8552eb3",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'tt_angle'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2180,
        "wires": [
            [
                "16e9a3a71c4bb916"
            ]
        ]
    },
    {
        "id": "1ac53bb6150645fe",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'tt_dir'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2220,
        "wires": [
            [
                "9b1d8f9e21b34102"
            ]
        ]
    },
    {
        "id": "9b89eb1eaf333c10",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadF",
        "func": "var file = 'tt_delay'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data) * 1000;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2060,
        "wires": [
            [
                "2647111c06f2055d"
            ]
        ]
    },
    {
        "id": "2e8927be0e235fa1",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadF",
        "func": "var file = 'tt_acc'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2100,
        "wires": [
            [
                "56bc3b93af2ebe16"
            ]
        ]
    },
    {
        "id": "485a4bed5a6bea23",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'tt_stepsperrotation'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "2c000bd53cdb98ca",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'tt_accramp'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "c34111aaec734dd9",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'tt_angle'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "89dbbe7d99ddbbaf",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'tt_dir'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nif (msg.payload === 1){\n    content = '1'\n}\nelse{\n    content = '-1'\n}\n\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "fb8145a9f8d4f7b2",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'tt_delay'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload / 1000)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "35422077b53da9bf",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'tt_acc'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "d5308090f2b7971a",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadF",
        "func": "var file = 'cam_timeout'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data) / 1000;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2380,
        "wires": [
            [
                "d47515c9b208bfb7"
            ]
        ]
    },
    {
        "id": "9b0d5c521a7822cc",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'cam_timeout'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload * 1000)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "694d1068bea15171",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadF",
        "func": "var file = 'cam_delay_after'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2420,
        "wires": [
            [
                "9d94dbc523d989a3"
            ]
        ]
    },
    {
        "id": "cec3e5e78a40476b",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadF",
        "func": "var file = 'cam_delay_before'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2460,
        "wires": [
            [
                "0558d6eb9a01862e"
            ]
        ]
    },
    {
        "id": "b81e238ccd0a04fe",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'cam_delay_after'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "a0048747e7300bdc",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'cam_delay_before'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "6f524f9370a18482",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadF",
        "func": "var file = 'cam_gain'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2500,
        "wires": [
            [
                "89c76766c7552b57"
            ]
        ]
    },
    {
        "id": "9b26ed02296d27c9",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'cam_gain'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2500,
        "wires": [
            []
        ]
    },
    {
        "id": "1f87f473e327c3cc",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadF",
        "func": "var file = 'cam_awbg_red'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2540,
        "wires": [
            [
                "c385518eb65a1b27"
            ]
        ]
    },
    {
        "id": "b0ac7e9a7c713b84",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'cam_awbg_red'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2540,
        "wires": [
            []
        ]
    },
    {
        "id": "cff7ac5f1e061855",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadF",
        "func": "var file = 'cam_awbg_blue'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2580,
        "wires": [
            [
                "5c80833b718d9bf6"
            ]
        ]
    },
    {
        "id": "827b1a671a77037d",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'cam_awbg_blue'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2580,
        "wires": [
            []
        ]
    },
    {
        "id": "cf854461c37ca54f",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadF",
        "func": "var file = 'cam_contrast'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2620,
        "wires": [
            [
                "5a3826e112fb24e6"
            ]
        ]
    },
    {
        "id": "78a1536c167da741",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'cam_contrast'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2620,
        "wires": [
            []
        ]
    },
    {
        "id": "ba10e04dd1761692",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadF",
        "func": "var file = 'cam_saturation'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2660,
        "wires": [
            [
                "3182ed7ac02b1509"
            ]
        ]
    },
    {
        "id": "fe9a5b68fc8c2077",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'cam_saturation'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2660,
        "wires": [
            []
        ]
    },
    {
        "id": "a69d216114f908a5",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'cam_jpeg_quality'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2700,
        "wires": [
            [
                "7fa6337cdf0a0bc8"
            ]
        ]
    },
    {
        "id": "e27d2613e942f344",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'cam_jpeg_quality'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2700,
        "wires": [
            []
        ]
    },
    {
        "id": "f02d4a036a225e87",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'cam_rotation'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2740,
        "wires": [
            [
                "9d464b2ba1edaf48"
            ]
        ]
    },
    {
        "id": "b7d3fe0c0b40b3e1",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'cam_rotation'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2740,
        "wires": [
            []
        ]
    },
    {
        "id": "612cccacda1a65aa",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'pin_external'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2820,
        "wires": [
            [
                "282681e7c4351f74"
            ]
        ]
    },
    {
        "id": "b17e82651407d8e0",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'pin_external'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2820,
        "wires": [
            []
        ]
    },
    {
        "id": "3b126549c03a872e",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'pin_endstop1'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 3180,
        "wires": [
            [
                "661614f5bd2c71d6"
            ]
        ]
    },
    {
        "id": "2af447a6905b83bc",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'pin_endstop1'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 3180,
        "wires": [
            []
        ]
    },
    {
        "id": "954db931f87894ee",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'pin_ringlight1'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2860,
        "wires": [
            [
                "ef70d61678fe1f11"
            ]
        ]
    },
    {
        "id": "2c812acffdb330c5",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'pin_ringlight1'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2860,
        "wires": [
            []
        ]
    },
    {
        "id": "6682c8057e89d087",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'pin_ringlight2'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2900,
        "wires": [
            [
                "24929b4629f22070"
            ]
        ]
    },
    {
        "id": "ae0654af69446942",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'pin_ringlight2'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2900,
        "wires": [
            []
        ]
    },
    {
        "id": "015be401d08047d2",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'pin_rotor_dir'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2940,
        "wires": [
            [
                "8c396b060f3d2646"
            ]
        ]
    },
    {
        "id": "58cf48cfacc979fb",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'pin_rotor_dir'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2940,
        "wires": [
            []
        ]
    },
    {
        "id": "1c6c0f8b9ac95659",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'pin_rotor_step'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2980,
        "wires": [
            [
                "a3c58ea48c388215"
            ]
        ]
    },
    {
        "id": "c7ae206f2fff6810",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'pin_rotor_step'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2980,
        "wires": [
            []
        ]
    },
    {
        "id": "dcee66c0d56c6934",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'pin_rotor_enable'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 3020,
        "wires": [
            [
                "9b5da90eaf6ac562"
            ]
        ]
    },
    {
        "id": "cfebd4a47a68b319",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'pin_rotor_enable'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 3020,
        "wires": [
            []
        ]
    },
    {
        "id": "6ec7d85bb17eb159",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'pin_tt_dir'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 3060,
        "wires": [
            [
                "f24cb404d7d09f8a"
            ]
        ]
    },
    {
        "id": "4f42d02a3776a006",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'pin_tt_step'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 3100,
        "wires": [
            [
                "1f79467df98ce894"
            ]
        ]
    },
    {
        "id": "5d70f4715c9a5ae1",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'pin_tt_enable'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 3140,
        "wires": [
            [
                "65b0130e390c2e67"
            ]
        ]
    },
    {
        "id": "90f4d220928e4727",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'pin_tt_dir'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 3060,
        "wires": [
            []
        ]
    },
    {
        "id": "b05e1e612887f9c2",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'pin_tt_step'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 3100,
        "wires": [
            []
        ]
    },
    {
        "id": "fe22723ce5a3495f",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'pin_tt_enable'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 3140,
        "wires": [
            []
        ]
    },
    {
        "id": "58bbe9fc41e0d7b9",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'pin_endstop2'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 3220,
        "wires": [
            [
                "e23a396162026618"
            ]
        ]
    },
    {
        "id": "787a128f84f747c0",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'pin_endstop2'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 3220,
        "wires": [
            []
        ]
    },
    {
        "id": "78351089ee9ebeaf",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadB",
        "func": "var file = 'ssh'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\ndata = fs.readFileSync(filepath+file, 'utf8');\nif(data === '1' || data === 'True' || data === 'true'){\n    data = true;\n}\nelse{\n    data = false;\n}\nmsg.payload = data;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 340,
        "wires": [
            [
                "40dee936a9abac0d"
            ]
        ]
    },
    {
        "id": "5fba78ae65eaaf5d",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadB",
        "func": "var file = 'smb'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\ndata = fs.readFileSync(filepath+file, 'utf8');\nif(data === '1' || data === 'True' || data === 'true'){\n    data = true;\n}\nelse{\n    data = false;\n}\nmsg.payload = data;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 380,
        "wires": [
            [
                "4fd9bb53fdb51a25"
            ]
        ]
    },
    {
        "id": "67206663b3881868",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadB",
        "func": "var file = 'advanced_settings'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\ndata = fs.readFileSync(filepath+file, 'utf8');\nif(data === '1' || data === 'True' || data === 'true'){\n    data = true;\n}\nelse{\n    data = false;\n}\nmsg.payload = data;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 640,
        "wires": [
            [
                "c833f6243a059d83"
            ]
        ]
    },
    {
        "id": "3492754252645e62",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadS",
        "func": "var file = 'camera'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = String(data.replace(/(\\r\\n|\\n|\\r)/gm,\"\"));\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 420,
        "wires": [
            [
                "a2c1dba3e67be015"
            ]
        ]
    },
    {
        "id": "d16525a31223bc42",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadS",
        "func": "var file = 'model'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = String(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 600,
        "wires": [
            [
                "80b579a4220e5c23"
            ]
        ]
    },
    {
        "id": "f99ec8781a33ec7d",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "msg",
        "func": "msg.payload = 'This is a free piece of software and it is provided as is, without any warranty. <br>There might be functions that need a connection to the internet: '+\n    '<br><br>By pressing GET FEATURES you agree that the shown preview image will be transfered, stored and processed via SFTP  to my servers '+\n    '(Thomas Megel, OpenScan, Halle, Germany). The IP address will be saved for 14 days  The images might be used for further experiments (e.g. machine learning, automation ...). '+\n    '<br><br>By entering a token and/or pressing UPLOAD, the device will create a connection to my servers, where the associated user information is stored (token, email, name, credit, limit_photos, limit_filesize)'+\n    'The selected image set will be uploaded to Dropbox Inc via one-time temporary upload link. The files will be saved on Dropbox Inc. for a maximum of 7 days. (+the time Dropbox Inc. will need to delete the files permanently)'+\n    'Processing will be done on my local servers, where the images get downloaded from Dropbox and processed on my workstations. The resulting 3D model will be uploaded to Dropbox and a link will be created and send to your email address from my google mail account.'+\n    '<br><br>By uploading data to my servers, you agree, that I can use those images and derived 3d models for further research and to improve my services.'+\n    'The raw images and resulting 3d models will never be published without your explicit consent.'+  \n    '<br><br>If you have any questions you can contact me at info@openscan.eu.'+ \n    '<br><br>THE SOFTWARE IS PROVIDED AS IS WITHOUT '+\n    'WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE'+ \n    'AND NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY,'+ \n    'WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE';\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 300,
        "wires": [
            [
                "7dc39bd847d16ded"
            ]
        ]
    },
    {
        "id": "5f849178998d9082",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "if(msg.payload === 'Agree'){\n    data = true;\n}\nelse{\n    data = false;\n}\nvar file = 'terms'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nfs.writeFile(filepath+file, String(data), err => {\n  if (err) {\n    return msg\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "725fd0cab0bddc0e",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadS",
        "func": "var file = 'hostname'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = String(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 940,
        "wires": [
            [
                "49259adad52fc214"
            ]
        ]
    },
    {
        "id": "49259adad52fc214",
        "type": "ui_text_input",
        "z": "017bd4e4a428bee5",
        "name": "",
        "label": "Hostname",
        "tooltip": "",
        "group": "0fe66c9190b8a87c",
        "order": 6,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "Change hostname to:",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 530,
        "y": 940,
        "wires": [
            [
                "8001f7c361de7d8c"
            ]
        ]
    },
    {
        "id": "51521bc6eb44cde5",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "msg",
        "func": "msg.enabled = false\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 980,
        "wires": [
            [
                "59c9f67283ba1709"
            ]
        ]
    },
    {
        "id": "2bb52656f9554dab",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "msg",
        "func": "ssid = msg.payload\nmsg.topic = 'Add wifi network (' + ssid + ')'\nmsg.payload = 'Enter Wifi password:'\nmsg.ssid = ssid\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 980,
        "wires": [
            [
                "ebcc98685059b9d4"
            ]
        ]
    },
    {
        "id": "ebce67b739d1891f",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "chk/change hostname",
        "func": "from OpenScan import save\n\nif msg['payload'] != 'OK':\n    pass\n\nwith open('/etc/hostname', 'r') as file:\n    old_hostname = file.read().replace('\\n','')\n\nhostname = msg['hostname']\nif len(hostname) < 4 :\n    msg['payload'] = ' '\n    msg['topic'] = 'ERROR - Hostname NOT changed'\n    return msg\n    \n\nwith open('/etc/hostname', 'w+') as file:\n    file.write(hostname)\nos.system('echo ' + hostname + ' | sudo tee /etc/hostname')\nwith open('/etc/hosts', 'r') as file:\n    temp = file.read()\ntemp = temp.replace(old_hostname,hostname)\nwith open('/etc/hosts', 'w') as file:\n    file.write(temp)\nos.system('sudo hostnamectl set-hostname ' + hostname)\nos.system('sudo systemctl restart avahi-daemon')\nsave('hostname',hostname)\nmsg['payload'] = hostname\nmsg['topic'] = 'Success - Hostname changed'\nreturn msg\n",
        "outputs": 1,
        "x": 1140,
        "y": 940,
        "wires": [
            [
                "03732a7d3b0c95aa"
            ]
        ]
    },
    {
        "id": "667ac2aba819f506",
        "type": "ui_toast",
        "z": "017bd4e4a428bee5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Confirm",
        "x": 920,
        "y": 940,
        "wires": [
            [
                "ebce67b739d1891f"
            ]
        ]
    },
    {
        "id": "8001f7c361de7d8c",
        "type": "change",
        "z": "017bd4e4a428bee5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hostname",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 940,
        "wires": [
            [
                "667ac2aba819f506"
            ]
        ]
    },
    {
        "id": "9bb0adbd716ce347",
        "type": "link in",
        "z": "017bd4e4a428bee5",
        "name": "reboot",
        "links": [
            "16c76929f88df841",
            "fe3a855fee9e28c6"
        ],
        "x": 155,
        "y": 680,
        "wires": [
            [
                "d114f4d4d7f31981",
                "cc3cb10f2ea3f8b8"
            ]
        ]
    },
    {
        "id": "fc9abb94c35eec56",
        "type": "link in",
        "z": "017bd4e4a428bee5",
        "name": "shutdown",
        "links": [
            "597bfb653e8cddbf"
        ],
        "x": 155,
        "y": 840,
        "wires": [
            [
                "cc3cb10f2ea3f8b8",
                "f52d4d86b39aeb6b"
            ]
        ]
    },
    {
        "id": "f9efcb87b74abbd4",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "msg",
        "func": "if (msg.payload === 'Cancel'){\n    return\n}\nmsg.forename = msg.payload\nmsg.topic = 'OpenScanCloud Registration (3/3)'\nmsg.payload = 'Enter your last name'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1520,
        "wires": [
            [
                "510dbe4d76253bd6"
            ]
        ]
    },
    {
        "id": "adc206aa8edd1e41",
        "type": "ui_button",
        "z": "017bd4e4a428bee5",
        "name": "OSC",
        "group": "db43d646.2074c8",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "transparent",
        "className": "",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 610,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "45df91cae421e8e1",
        "type": "ui_button",
        "z": "017bd4e4a428bee5",
        "name": "Scan_settings",
        "group": "7aaf184330605300",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "transparent",
        "className": "",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 640,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "e9677b85856b5873",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "Reset rfkill",
        "func": "from os import system\nif \"Interface doesn't support scanning\" in msg['payload']:\n    system('rfkill unblock all')\n    system('sudo ifconfig wlan0 up')\n    return msg",
        "outputs": 1,
        "x": 390,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "91fe20cb16f54293",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'rotor_anglemin'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1660,
        "wires": [
            [
                "327c8bdde31033a4"
            ]
        ]
    },
    {
        "id": "add3e998b097c54f",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "d49a6dfd7fb17096",
        "order": 5,
        "width": 3,
        "height": 1,
        "name": "rotor_anglemin",
        "label": "Min Angle",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 780,
        "y": 1660,
        "wires": []
    },
    {
        "id": "da286366433c83a0",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'rotor_anglemin'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "327c8bdde31033a4",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "rotor_anglemin",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "-90",
        "max": "90",
        "step": "5",
        "className": "",
        "x": 440,
        "y": 1660,
        "wires": [
            [
                "da286366433c83a0"
            ]
        ]
    },
    {
        "id": "94288df4c6756197",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "rotor_anglemax",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 8,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "-90",
        "max": "90",
        "step": "5",
        "className": "",
        "x": 440,
        "y": 1700,
        "wires": [
            [
                "e531ffe3dcf34eb4"
            ]
        ]
    },
    {
        "id": "4702a4a09124e27d",
        "type": "ui_slider",
        "z": "017bd4e4a428bee5",
        "name": "rotor_anglestart",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "-90",
        "max": "90",
        "step": "5",
        "className": "",
        "x": 440,
        "y": 1740,
        "wires": [
            [
                "9ce407cb16f0419a"
            ]
        ]
    },
    {
        "id": "2cf946c7aab2cbb4",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'rotor_anglemax'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1700,
        "wires": [
            [
                "94288df4c6756197"
            ]
        ]
    },
    {
        "id": "e531ffe3dcf34eb4",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'rotor_anglemax'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "4da5f650d3845baa",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "loadI",
        "func": "var file = 'rotor_anglestart'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1740,
        "wires": [
            [
                "4702a4a09124e27d"
            ]
        ]
    },
    {
        "id": "9ce407cb16f0419a",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "write",
        "func": "var file = 'rotor_anglestart'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "fda776c5aa642867",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "d49a6dfd7fb17096",
        "order": 7,
        "width": 3,
        "height": 1,
        "name": "rotor_anglemax",
        "label": "Max Angle",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 780,
        "y": 1700,
        "wires": []
    },
    {
        "id": "6e9af48a1c4c58c6",
        "type": "ui_text",
        "z": "017bd4e4a428bee5",
        "group": "d49a6dfd7fb17096",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "rotor_anglestart",
        "label": "Start Angle",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 780,
        "y": 1740,
        "wires": []
    },
    {
        "id": "9b2bc9849aee310b",
        "type": "link in",
        "z": "017bd4e4a428bee5",
        "name": "changeHostname",
        "links": [
            "ec2db55a99bbe3ee",
            "d5175561293ef490",
            "960912e90ba5b5bc"
        ],
        "x": 835,
        "y": 900,
        "wires": [
            [
                "8b9e3781511e9231"
            ]
        ]
    },
    {
        "id": "8b9e3781511e9231",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "chk",
        "func": "with open('/etc/hostname', 'r') as file:\n    old_hostname = file.read().replace('\\n','')\nif old_hostname == 'raspberrypi':\n    msg['hostname'] = 'openscan'\n    msg['payload'] = 'OK'\n    return msg",
        "outputs": 1,
        "x": 930,
        "y": 900,
        "wires": [
            [
                "ebce67b739d1891f"
            ]
        ]
    },
    {
        "id": "3fcbd9fe3acc3fb7",
        "type": "ui_button",
        "z": "017bd4e4a428bee5",
        "name": "scan_arducam",
        "group": "90223f7ddc082321",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "transparent",
        "className": "",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 640,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "6d68cccec646e0a0",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "enable routine",
        "func": "msg_enable = {}\nmsg_disable = {}\n\nmsg_enable['enabled'] = True\nmsg_disable['enabled'] = False\n\nif msg['payload'] == 'external':\n    return msg_enable, msg_disable\nif msg['payload'] == 'gphoto':\n    return msg_enable, msg_enable, msg_disable\n\nreturn msg_enable",
        "outputs": 3,
        "x": 560,
        "y": 440,
        "wires": [
            [
                "a0ba1aa77c5c8b7c"
            ],
            [
                "a42c12e94f65fa01"
            ],
            [
                "2d76e5617f13cd6c"
            ]
        ]
    },
    {
        "id": "a0ba1aa77c5c8b7c",
        "type": "link out",
        "z": "017bd4e4a428bee5",
        "name": "",
        "mode": "link",
        "links": [
            "2aea1727dbea76ce",
            "4f212b44aa487945",
            "65cef204b16f8741",
            "917a194be245384a"
        ],
        "x": 675,
        "y": 420,
        "wires": []
    },
    {
        "id": "a42c12e94f65fa01",
        "type": "link out",
        "z": "017bd4e4a428bee5",
        "name": "",
        "mode": "link",
        "links": [
            "2aea1727dbea76ce",
            "4f212b44aa487945",
            "65cef204b16f8741",
            "917a194be245384a"
        ],
        "x": 715,
        "y": 440,
        "wires": []
    },
    {
        "id": "2d76e5617f13cd6c",
        "type": "link out",
        "z": "017bd4e4a428bee5",
        "name": "",
        "mode": "link",
        "links": [
            "65cef204b16f8741"
        ],
        "x": 675,
        "y": 460,
        "wires": []
    },
    {
        "id": "bd80ec228fb9a86d",
        "type": "link in",
        "z": "017bd4e4a428bee5",
        "name": "enable projectname",
        "links": [
            "960912e90ba5b5bc"
        ],
        "x": 135,
        "y": 340,
        "wires": [
            [
                "78351089ee9ebeaf",
                "5fba78ae65eaaf5d",
                "3492754252645e62",
                "d16525a31223bc42",
                "67206663b3881868"
            ]
        ]
    },
    {
        "id": "65b38bfeb3fee710",
        "type": "link in",
        "z": "017bd4e4a428bee5",
        "name": "enable projectname",
        "links": [
            "960912e90ba5b5bc"
        ],
        "x": 155,
        "y": 760,
        "wires": [
            [
                "cc3cb10f2ea3f8b8"
            ]
        ]
    },
    {
        "id": "d3fc91d87d5d5f62",
        "type": "link in",
        "z": "017bd4e4a428bee5",
        "name": "enable projectname",
        "links": [
            "960912e90ba5b5bc"
        ],
        "x": 135,
        "y": 940,
        "wires": [
            [
                "725fd0cab0bddc0e"
            ]
        ]
    },
    {
        "id": "cc9c4092edeb43cc",
        "type": "link in",
        "z": "017bd4e4a428bee5",
        "name": "enable projectname",
        "links": [
            "960912e90ba5b5bc"
        ],
        "x": 135,
        "y": 1020,
        "wires": [
            [
                "27c6b221c90ed9e1",
                "f393400.d87dcc"
            ]
        ]
    },
    {
        "id": "f0b355967b33dfee",
        "type": "link in",
        "z": "017bd4e4a428bee5",
        "name": "enable projectname",
        "links": [
            "960912e90ba5b5bc"
        ],
        "x": 175,
        "y": 1660,
        "wires": [
            [
                "91fe20cb16f54293",
                "2cf946c7aab2cbb4",
                "4da5f650d3845baa",
                "6659121906897a1f",
                "15f02421b30a9ab6",
                "58928befcc61b1f7",
                "569829eeff715c33",
                "c997e60519341afd",
                "59ecf3a22cd3a669",
                "27bc56f273360ac7",
                "9b89eb1eaf333c10",
                "2e8927be0e235fa1",
                "f46ced86106306c8",
                "4339704cd8552eb3",
                "1ac53bb6150645fe"
            ]
        ]
    },
    {
        "id": "d7c1fb4c028b21a5",
        "type": "link in",
        "z": "017bd4e4a428bee5",
        "name": "enable projectname",
        "links": [
            "960912e90ba5b5bc"
        ],
        "x": 155,
        "y": 2380,
        "wires": [
            [
                "d5308090f2b7971a",
                "694d1068bea15171",
                "cec3e5e78a40476b",
                "6f524f9370a18482",
                "1f87f473e327c3cc",
                "cff7ac5f1e061855",
                "cf854461c37ca54f",
                "ba10e04dd1761692",
                "a69d216114f908a5",
                "f02d4a036a225e87"
            ]
        ]
    },
    {
        "id": "a67c18aaca2f5fa5",
        "type": "link in",
        "z": "017bd4e4a428bee5",
        "name": "enable projectname",
        "links": [
            "960912e90ba5b5bc"
        ],
        "x": 155,
        "y": 2820,
        "wires": [
            [
                "612cccacda1a65aa",
                "954db931f87894ee",
                "6682c8057e89d087",
                "015be401d08047d2",
                "1c6c0f8b9ac95659",
                "dcee66c0d56c6934",
                "6ec7d85bb17eb159",
                "4f42d02a3776a006",
                "5d70f4715c9a5ae1",
                "3b126549c03a872e",
                "58bbe9fc41e0d7b9"
            ]
        ]
    },
    {
        "id": "c6d3821bc7f43f8e",
        "type": "ui_button",
        "z": "017bd4e4a428bee5",
        "name": "Reset default",
        "group": "4fe6b4c0ade0938a",
        "order": 15,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Restore default settings",
        "tooltip": "",
        "color": "red",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "This can not be undone!",
        "payloadType": "str",
        "topic": "Restore default settings?",
        "topicType": "str",
        "x": 1050,
        "y": 300,
        "wires": [
            [
                "e4be21c38b57f560"
            ]
        ]
    },
    {
        "id": "e4be21c38b57f560",
        "type": "ui_toast",
        "z": "017bd4e4a428bee5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "No",
        "cancel": "Yes",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1210,
        "y": 300,
        "wires": [
            [
                "9f30de04ced693d3"
            ]
        ]
    },
    {
        "id": "9f30de04ced693d3",
        "type": "function",
        "z": "017bd4e4a428bee5",
        "name": "msg",
        "func": "msg.overwrite = true\nif(msg.payload == \"Yes\"){\n    return msg}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 300,
        "wires": [
            [
                "80bccc884b0be297"
            ]
        ]
    },
    {
        "id": "80bccc884b0be297",
        "type": "link out",
        "z": "017bd4e4a428bee5",
        "name": "",
        "mode": "link",
        "links": [
            "38783aea9cc317a6"
        ],
        "x": 1435,
        "y": 300,
        "wires": []
    },
    {
        "id": "34b685aff2080d31",
        "type": "python3-function",
        "z": "017bd4e4a428bee5",
        "name": "boot-cam",
        "func": "import subprocess\nfrom OpenScan import load_str\n\ncamera_modules = ('imx519', 'imx219', 'ov5647', 'imx477', 'imx378', 'ov9281', 'imx290a', 'imx290b')\n\npt1 = \"[all]\\n\\ncamera_auto_detect=0\\ngpu_mem=256\\ndtoverlay=vc4-fkms-v3d\\ndtoverlay=\"\npt3 = \",media-controller=0\\n\"\n\nwith open('/boot/config.txt', 'r') as file:\n    config = file.read()\n\ncamera = load_str('camera')\nif camera not in camera_modules:\n    msg['payload'] = 'no changes'\n    return\n\nif camera == 'imx290a':\n    camera = 'imx290,clock-frequency=37125000'\nelif camera == 'imx290b':\n    camera = 'imx290,clock-frequency=74250000'\n\nconfig_keep = config.split('[all]\\n')[0]\nconfig_new = config_keep + pt1 + camera + pt3\n\nwith open('/boot/config.txt', 'w') as file:\n    file.write(config_new)\n\nmsg['topic'] = 'Camera configuration changed'\nmsg['payload'] = 'Please restart the device'\n\nreturn msg",
        "outputs": 1,
        "x": 680,
        "y": 500,
        "wires": [
            [
                "68cba0c530c6def6"
            ]
        ]
    },
    {
        "id": "68cba0c530c6def6",
        "type": "ui_toast",
        "z": "017bd4e4a428bee5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 830,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "b53c3038b7cb62b0",
        "type": "debug",
        "z": "017bd4e4a428bee5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 1440,
        "wires": []
    },
    {
        "id": "ceded879488bc933",
        "type": "python3-function",
        "z": "c8e7ecb5849edb9a",
        "name": "create beta/main update",
        "func": "import json\nimport shutil\n\nscope = 'beta'\n#scope = 'main'\n\nmsg= {}\nmsg[scope]={}\nmsg[scope]['1'] = {}\nmsg[scope]['1']['src'] = scope + '/fla.py'\nmsg[scope]['1']['dst'] = '/home/pi/OpenScan/files/fla.py'\n\nmsg[scope]['2'] = {}\nmsg[scope]['2']['src'] = scope + '/Arducam.py'\nmsg[scope]['2']['dst'] = '/usr/lib/python3/dist-packages/Arducam.py'\n\nmsg[scope]['3'] = {}\nmsg[scope]['3']['src'] = scope + '/OpenScan.py'\nmsg[scope]['3']['dst'] = '/usr/lib/python3/dist-packages/OpenScan.py'\n\nmsg[scope]['4'] = {}\nmsg[scope]['4']['src'] = scope + '/config.txt'\nmsg[scope]['4']['dst'] = '/boot/config.txt'\n\nmsg[scope]['5'] = {}\nmsg[scope]['5']['src'] = scope + '/flows.json'\nmsg[scope]['5']['dst'] = '/home/pi/OpenScan/settings/.node-red/flows.json'\n\nmsg[scope]['6'] = {}\nmsg[scope]['6']['src'] = scope + '/settings.js'\nmsg[scope]['6']['dst'] = '/root/.node-red/settings.js'\n\nmsg[scope]['7'] = {}\nmsg[scope]['7']['src'] = 'files/logo.jpg'\nmsg[scope]['7']['dst'] = '/home/pi/OpenScan/files/logo.jpg'\n\nfor i in msg[scope]:\n    filepath = msg[scope][i]['dst']\n    filesize = os.path.getsize(filepath)\n    msg[scope][i]['filesize'] = filesize\n\nif os.path.isdir('/home/pi/OpenScan/tmp/update/'):\n    os.system('rm -r /home/pi/OpenScan/tmp/update')    \nos.makedirs('/home/pi/OpenScan/tmp/update/')\n\nwith open('/home/pi/OpenScan/tmp/update/update_' + scope + '.json', 'w+') as f:\n    json.dump(msg, f, indent=4)\n\nfor i in msg[scope]:\n    if not os.path.isdir(os.path.dirname('/home/pi/OpenScan/tmp/update/' + msg[scope][i]['src'])):\n        os.makedirs(os.path.dirname('/home/pi/OpenScan/tmp/update/' + msg[scope][i]['src']))\n    shutil.copy(msg[scope][i]['dst'], '/home/pi/OpenScan/tmp/update/' + msg[scope][i]['src'])\n\nreturn msg\n\nma",
        "outputs": 1,
        "x": 1290,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "b0629875a30ae1d7",
        "type": "python3-function",
        "z": "c8e7ecb5849edb9a",
        "name": "get update",
        "func": "import json\nimport requests\nfrom OpenScan import load_str\n\nif not msg['payload']:\n    msg['status'] = '--READY--'\n    return msg\n\nupdatepath = '/home/pi/OpenScan/updates/'\nurl = 'https://raw.githubusercontent.com/OpenScanEu/OpenScan2/main/update/'\nupdatepath_temp = updatepath + 'update_temp.json'\nupdatepath_old = updatepath + 'update.json'\n\nr = requests.get(url + 'update.json')\n\nif r.status_code != 200:\n    msg['status'] = 'no internet connection'\n    return msg\n\nwith open(updatepath_temp, 'wb+') as file:\n    file.write(r.content)\nwith open(updatepath_temp, 'r') as file:\n    msg = json.load(file)\n\nmsg['status'] = 'checking updates'\n\nreturn msg, msg",
        "outputs": 2,
        "x": 310,
        "y": 240,
        "wires": [
            [
                "1bbe2d769f42c313"
            ],
            [
                "fefe45404bdb19c4"
            ]
        ]
    },
    {
        "id": "c7b6d05a62172432",
        "type": "ui_text",
        "z": "c8e7ecb5849edb9a",
        "group": "ddbd496e.93a288",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status:",
        "format": "{{msg.status}}",
        "layout": "row-spread",
        "className": "",
        "x": 170,
        "y": 100,
        "wires": []
    },
    {
        "id": "fefe45404bdb19c4",
        "type": "python3-function",
        "z": "c8e7ecb5849edb9a",
        "name": "check files",
        "func": "import json\nimport requests\nimport shutil\nfrom OpenScan import load_str\n\nscope = load_str('update_type')\nmsg['scope'] = scope\n\nupdatepath = '/home/pi/OpenScan/updates/'\nurl = 'https://raw.githubusercontent.com/OpenScanEu/OpenScan2/main/update/'\nupdatepath_old = updatepath + 'update.json'\n\ncounter = 0\nfor i in msg[scope]:\n    filepath = msg[scope][i]['dst']\n    temp = updatepath + os.path.basename(filepath)\n    if os.path.isfile(temp):\n        filesize = os.path.getsize(temp)\n        msg[scope][i]['filesize2'] = filesize\n        if filesize == msg[scope][i]['filesize']:\n            msg[scope][i]['update'] = False\n            continue\n    msg[scope][i]['update'] = True\n\n    counter += 1\n\nif counter == 0:\n    msg['status'] = 'No new update available'\nelse:\n    msg['status'] = 'New update available'\n    msg['topic'] = msg['status']\n    msg['payload'] = 'Install & reboot now?'\n\nmsg['counter'] = counter # new file counter\n\nreturn msg\n",
        "outputs": 1,
        "x": 470,
        "y": 260,
        "wires": [
            [
                "1bbe2d769f42c313",
                "ae92a328af306ebb"
            ]
        ]
    },
    {
        "id": "d0104e0163745993",
        "type": "link in",
        "z": "c8e7ecb5849edb9a",
        "name": "",
        "links": [
            "960912e90ba5b5bc"
        ],
        "x": 75,
        "y": 140,
        "wires": [
            [
                "ec30638407332e43",
                "38cbf7965d1c1834",
                "49f1ecb29a3f84f4"
            ]
        ]
    },
    {
        "id": "ec30638407332e43",
        "type": "function",
        "z": "c8e7ecb5849edb9a",
        "name": "loadS",
        "func": "var file = 'update_type'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = String(data.replace(/(\\r\\n|\\n|\\r)/gm,\"\"));\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 180,
        "wires": [
            [
                "2852023f3aa8db10"
            ]
        ]
    },
    {
        "id": "2852023f3aa8db10",
        "type": "ui_dropdown",
        "z": "c8e7ecb5849edb9a",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "ddbd496e.93a288",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "stable",
                "value": "main",
                "type": "str"
            },
            {
                "label": "beta",
                "value": "beta",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 300,
        "y": 180,
        "wires": [
            [
                "1e10b387ee30c486"
            ]
        ]
    },
    {
        "id": "1e10b387ee30c486",
        "type": "function",
        "z": "c8e7ecb5849edb9a",
        "name": "write",
        "func": "var file = 'update_type'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "274129c51b0b87ef",
        "type": "ui_text",
        "z": "c8e7ecb5849edb9a",
        "group": "ddbd496e.93a288",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Updatetype: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 570,
        "y": 180,
        "wires": []
    },
    {
        "id": "51cd8c8643e6b46a",
        "type": "ui_switch",
        "z": "c8e7ecb5849edb9a",
        "name": "",
        "label": "Auto-check update availability",
        "tooltip": "",
        "group": "ddbd496e.93a288",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 370,
        "y": 140,
        "wires": [
            [
                "1ab4c6b4b232a022"
            ]
        ]
    },
    {
        "id": "38cbf7965d1c1834",
        "type": "function",
        "z": "c8e7ecb5849edb9a",
        "name": "loadB",
        "func": "var file = 'update_auto'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\ndata = fs.readFileSync(filepath+file, 'utf8');\nif(data === '1' || data === 'True' || data === 'true'){\n    data = true;\n}\nelse{\n    data = false;\n}\nmsg.payload = data;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 140,
        "wires": [
            [
                "51cd8c8643e6b46a"
            ]
        ]
    },
    {
        "id": "1ab4c6b4b232a022",
        "type": "function",
        "z": "c8e7ecb5849edb9a",
        "name": "write",
        "func": "var file = 'update_auto'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "ae92a328af306ebb",
        "type": "ui_toast",
        "z": "c8e7ecb5849edb9a",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "NO",
        "cancel": "YES",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 630,
        "y": 260,
        "wires": [
            [
                "2de63e8e3ae5fb0c",
                "929281fef53e09f8"
            ]
        ]
    },
    {
        "id": "cbd0afc4aa7b302a",
        "type": "link in",
        "z": "c8e7ecb5849edb9a",
        "name": "update status",
        "links": [
            "1bbe2d769f42c313",
            "42061b28cff81f99"
        ],
        "x": 75,
        "y": 100,
        "wires": [
            [
                "c7b6d05a62172432"
            ]
        ]
    },
    {
        "id": "1bbe2d769f42c313",
        "type": "link out",
        "z": "c8e7ecb5849edb9a",
        "name": "",
        "mode": "link",
        "links": [
            "cbd0afc4aa7b302a"
        ],
        "x": 575,
        "y": 220,
        "wires": []
    },
    {
        "id": "7cf60615d93e696b",
        "type": "ui_button",
        "z": "c8e7ecb5849edb9a",
        "name": "",
        "group": "ddbd496e.93a288",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Check Updates",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 260,
        "wires": [
            [
                "b0629875a30ae1d7"
            ]
        ]
    },
    {
        "id": "2de63e8e3ae5fb0c",
        "type": "python3-function",
        "z": "c8e7ecb5849edb9a",
        "name": "download files",
        "func": "import json\nimport requests\nimport shutil\nfrom OpenScan import load_str\n\n\nscope = msg['scope']\n\nupdatepath = '/home/pi/OpenScan/updates/'\nurl = 'https://raw.githubusercontent.com/OpenScanEu/OpenScan2/main/update/'\n\nif msg['payload'] != 'YES':\n    return\n\ncounter = 0\n\nfor i in msg[scope]:\n    if msg[scope][i]['update'] == False:\n        continue\n    \n    filepath = msg[scope][i]['dst']\n    temp = updatepath + os.path.basename(filepath)\n    \n    r = requests.get(url + msg[scope][i]['src'])\n    if r.status_code != 200:\n        msg['status'] = 'downloading ' + msg[scope][i]['src'] + ' failed'\n        return msg\n    with open(temp, 'wb+') as file:\n        file.write(r.content)\n    shutil.copy(temp, msg[scope][i]['dst'])\n    counter += 1\n\nmsg['status'] = 'Installed ' + str(counter) + ' of ' + str(msg['counter']) + ' - restarting ...'\n\nif counter == msg['counter']:\n    updatepath_temp = updatepath + 'update_temp.json'\n    updatepath_old = updatepath + 'update.json'\n    shutil.move(updatepath_temp, updatepath_old)\n\nreturn msg\n",
        "outputs": 1,
        "x": 800,
        "y": 260,
        "wires": [
            [
                "42061b28cff81f99",
                "fe3a855fee9e28c6"
            ]
        ]
    },
    {
        "id": "929281fef53e09f8",
        "type": "function",
        "z": "c8e7ecb5849edb9a",
        "name": "msg",
        "func": "if (msg.payload == 'YES'){\n    msg.status = 'Installing updates'\n    return msg}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 220,
        "wires": [
            [
                "42061b28cff81f99"
            ]
        ]
    },
    {
        "id": "42061b28cff81f99",
        "type": "link out",
        "z": "c8e7ecb5849edb9a",
        "name": "",
        "mode": "link",
        "links": [
            "cbd0afc4aa7b302a"
        ],
        "x": 915,
        "y": 220,
        "wires": []
    },
    {
        "id": "49f1ecb29a3f84f4",
        "type": "function",
        "z": "c8e7ecb5849edb9a",
        "name": "loadB",
        "func": "var file = 'update_auto'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\ndata = fs.readFileSync(filepath+file, 'utf8');\nif(data === '1' || data === 'True' || data === 'true'){\n    data = true;\n}\nelse{\n    data = false;\n}\n\nmsg.payload = data\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 220,
        "wires": [
            [
                "b0629875a30ae1d7"
            ]
        ]
    },
    {
        "id": "fe3a855fee9e28c6",
        "type": "link out",
        "z": "c8e7ecb5849edb9a",
        "name": "",
        "mode": "link",
        "links": [
            "9bb0adbd716ce347"
        ],
        "x": 915,
        "y": 260,
        "wires": []
    },
    {
        "id": "5e7d5e4335d37794",
        "type": "link in",
        "z": "c8e7ecb5849edb9a",
        "name": "",
        "links": [
            "960912e90ba5b5bc"
        ],
        "x": 75,
        "y": 380,
        "wires": [
            [
                "2bb5fe78e09fec8a"
            ]
        ]
    },
    {
        "id": "2bb5fe78e09fec8a",
        "type": "python3-function",
        "z": "c8e7ecb5849edb9a",
        "name": "msg",
        "func": "import subprocess\nmsg['raspbian'] = subprocess.getoutput(\"cat /etc/os-release | grep -i 'PRETTY_NAME'\")[13:-1]\nmsg['device'] = subprocess.getoutput(\"cat /proc/device-tree/model\")\nmsg['flask'] = subprocess.getoutput(\"systemctl status flask |grep -i 'Active:'\").split(' ')[6]\nreturn msg",
        "outputs": 1,
        "x": 170,
        "y": 380,
        "wires": [
            [
                "dbc77052ac950624",
                "d97c3068ef5fef96",
                "73a3b828f862312b"
            ]
        ]
    },
    {
        "id": "01f248ee52dab4f4",
        "type": "inject",
        "z": "c8e7ecb5849edb9a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 320,
        "wires": [
            [
                "2bb5fe78e09fec8a"
            ]
        ]
    },
    {
        "id": "2c635c11608b9a82",
        "type": "ui_toast",
        "z": "c8e7ecb5849edb9a",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 430,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "7efaef1ae14b3cbb",
        "type": "python3-function",
        "z": "c8e7ecb5849edb9a",
        "name": "msg",
        "func": "import subprocess\nmsg['payload'] = subprocess.getoutput(\"dmesg\").replace('\\n','<br>')\nreturn msg",
        "outputs": 1,
        "x": 270,
        "y": 500,
        "wires": [
            [
                "2c635c11608b9a82"
            ]
        ]
    },
    {
        "id": "fddb6b854fe949e3",
        "type": "ui_button",
        "z": "c8e7ecb5849edb9a",
        "name": "",
        "group": "3ce32450.e0cffc",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "LOG - start",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 500,
        "wires": [
            [
                "7efaef1ae14b3cbb"
            ]
        ]
    },
    {
        "id": "be0747adb448ea38",
        "type": "ui_button",
        "z": "c8e7ecb5849edb9a",
        "name": "",
        "group": "3ce32450.e0cffc",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "LOG - sys",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 540,
        "wires": [
            [
                "4189e16bfa666253"
            ]
        ]
    },
    {
        "id": "4189e16bfa666253",
        "type": "python3-function",
        "z": "c8e7ecb5849edb9a",
        "name": "msg",
        "func": "import subprocess\nmsg['payload'] = subprocess.getoutput(\"tail -1000 /var/log/syslog\").replace('\\n','<br>')\nreturn msg",
        "outputs": 1,
        "x": 270,
        "y": 540,
        "wires": [
            [
                "2c635c11608b9a82"
            ]
        ]
    },
    {
        "id": "d97c3068ef5fef96",
        "type": "ui_text",
        "z": "c8e7ecb5849edb9a",
        "group": "3ce32450.e0cffc",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "OS:",
        "format": "{{msg.raspbian}}",
        "layout": "row-spread",
        "className": "",
        "x": 310,
        "y": 420,
        "wires": []
    },
    {
        "id": "73a3b828f862312b",
        "type": "ui_text",
        "z": "c8e7ecb5849edb9a",
        "group": "3ce32450.e0cffc",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Flask:",
        "format": "{{msg.flask}}",
        "layout": "row-spread",
        "className": "",
        "x": 310,
        "y": 460,
        "wires": []
    },
    {
        "id": "dbc77052ac950624",
        "type": "ui_text",
        "z": "c8e7ecb5849edb9a",
        "group": "3ce32450.e0cffc",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Device:",
        "format": "{{msg.device}}",
        "layout": "row-spread",
        "className": "",
        "x": 320,
        "y": 380,
        "wires": []
    },
    {
        "id": "4c7fa5b5b27b83a5",
        "type": "python3-function",
        "z": "c8e7ecb5849edb9a",
        "name": "create beta new",
        "func": "import json\nimport requests\nimport shutil\n\n#scope = 'main'\nscope = 'beta'\n\nupdatepath = '/home/pi/OpenScan/tmp/'\nurl = 'https://raw.githubusercontent.com/OpenScanEu/OpenScan2/main/update/'\nupdatepath_temp = updatepath + 'update_temp.json'\nupdatepath_old = updatepath + 'update.json'\n\n\n## load update.json\nr = requests.get(url + 'update.json')\n\nif r.status_code != 200:\n    msg['status'] = 'download update.json failed'\n    return msg\n\nmsg = {}\nwith open(updatepath_temp, 'wb+') as file:\n    file.write(r.content)\nwith open(updatepath_temp, 'r') as file:\n    msg = json.load(file)\n\nmsg2 = msg.copy()\ndel msg[scope]\n\nmsg[scope]={}\nmsg[scope]['1'] = {}\nmsg[scope]['1']['src'] = scope + '/fla.py'\nmsg[scope]['1']['dst'] = '/home/pi/OpenScan/files/fla.py'\n\nmsg[scope]['2'] = {}\nmsg[scope]['2']['src'] = scope + '/Arducam.py'\nmsg[scope]['2']['dst'] = '/usr/lib/python3/dist-packages/Arducam.py'\n\nmsg[scope]['3'] = {}\nmsg[scope]['3']['src'] = scope + '/OpenScan.py'\nmsg[scope]['3']['dst'] = '/usr/lib/python3/dist-packages/OpenScan.py'\n\nmsg[scope]['4'] = {}\nmsg[scope]['4']['src'] = scope + '/config.txt'\nmsg[scope]['4']['dst'] = '/boot/config.txt'\n\nmsg[scope]['5'] = {}\nmsg[scope]['5']['src'] = scope + '/flows.json'\nmsg[scope]['5']['dst'] = '/home/pi/OpenScan/settings/.node-red/flows.json'\n\nmsg[scope]['6'] = {}\nmsg[scope]['6']['src'] = scope + '/settings.js'\nmsg[scope]['6']['dst'] = '/root/.node-red/settings.js'\n\nmsg[scope]['7'] = {}\nmsg[scope]['7']['src'] = 'files/logo.jpg'\nmsg[scope]['7']['dst'] = '/home/pi/OpenScan/files/logo.jpg'\n\nfor i in msg[scope]:\n    filepath = msg[scope][i]['dst']\n    filesize = os.path.getsize(filepath)\n    msg[scope][i]['filesize'] = filesize\n\nif os.path.isdir('/home/pi/OpenScan/tmp/update/'):\n    os.system('rm -r /home/pi/OpenScan/tmp/update')    \nos.makedirs('/home/pi/OpenScan/tmp/update/')\n\nwith open('/home/pi/OpenScan/tmp/update/update.json', 'w+') as f:\n    json.dump(msg, f, indent=4)\n\nfor i in msg[scope]:\n    if not os.path.isdir(os.path.dirname('/home/pi/OpenScan/tmp/update/' + msg[scope][i]['src'])):\n        os.makedirs(os.path.dirname('/home/pi/OpenScan/tmp/update/' + msg[scope][i]['src']))\n    shutil.copy(msg[scope][i]['dst'], '/home/pi/OpenScan/tmp/update/' + msg[scope][i]['src'])\n\nmsg['payload'] = 'created with scope: ' + scope\n\nreturn msg",
        "outputs": 1,
        "x": 1300,
        "y": 100,
        "wires": [
            [
                "a5a9f7f08d272914"
            ]
        ]
    },
    {
        "id": "a5a9f7f08d272914",
        "type": "debug",
        "z": "c8e7ecb5849edb9a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 100,
        "wires": []
    },
    {
        "id": "80175eb8dc6ad009",
        "type": "inject",
        "z": "c8e7ecb5849edb9a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1040,
        "y": 380,
        "wires": [
            [
                "4c7fa5b5b27b83a5"
            ]
        ]
    }
]
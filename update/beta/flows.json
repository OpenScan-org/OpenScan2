[
    {
        "id": "4dcd627bcd0e0455",
        "type": "tab",
        "label": "HOME",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7a0f044da59e2d1a",
        "type": "tab",
        "label": "SCAN",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "81e8a02fa43b7711",
        "type": "tab",
        "label": "Files&Cloud",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cf7a4625417bfc11",
        "type": "tab",
        "label": "SETTINGS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "76ceeb3aa3cdb4d7",
        "type": "tab",
        "label": "UPDATE",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b3150b13e34b1fe8",
        "type": "ui_tab",
        "name": "OpenScan",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b6e9c2df6b28ff66",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "OpenScan 3D Scanner",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 46,
                "sy": 46,
                "gx": 10,
                "gy": 10,
                "cx": 6,
                "cy": 6,
                "px": 6,
                "py": 6
            }
        }
    },
    {
        "id": "729f9ea6e3513c9b",
        "type": "ui_group",
        "name": "Home",
        "tab": "b3150b13e34b1fe8",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "65ae49b64fa0d83e",
        "type": "ui_tab",
        "name": "Settings",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4fe6b4c0ade0938a",
        "type": "ui_group",
        "name": "General",
        "tab": "65ae49b64fa0d83e",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "0fe66c9190b8a87c",
        "type": "ui_group",
        "name": "Network",
        "tab": "65ae49b64fa0d83e",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "93aadb71dee6d977",
        "type": "ui_group",
        "name": "Camera",
        "tab": "65ae49b64fa0d83e",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d49a6dfd7fb17096",
        "type": "ui_group",
        "name": "Motor",
        "tab": "65ae49b64fa0d83e",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "644b3bcc903d46ca",
        "type": "ui_group",
        "name": "Pinout",
        "tab": "65ae49b64fa0d83e",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e23b837a9f040895",
        "type": "ui_tab",
        "name": "Scan",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7aaf184330605300",
        "type": "ui_group",
        "name": "Settings",
        "tab": "e23b837a9f040895",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ce9cc9d915dc6eb6",
        "type": "ui_group",
        "name": "Picamera",
        "tab": "e23b837a9f040895",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "90223f7ddc082321",
        "type": "ui_group",
        "name": "Arducam",
        "tab": "e23b837a9f040895",
        "order": 3,
        "disp": false,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3b4bd36726be16d5",
        "type": "ui_group",
        "name": "OpenScanCloud",
        "tab": "65ae49b64fa0d83e",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b5fdd57b.15eda8",
        "type": "ui_group",
        "name": "Main",
        "tab": "15a222ed.d70a7d",
        "order": 1,
        "disp": false,
        "width": 13,
        "collapse": false
    },
    {
        "id": "db43d646.2074c8",
        "type": "ui_group",
        "name": "OpenScanCloud",
        "tab": "15a222ed.d70a7d",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "15a222ed.d70a7d",
        "type": "ui_tab",
        "name": "Files&Cloud",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ddbd496e.93a288",
        "type": "ui_group",
        "name": "Manage Updates",
        "tab": "d25e08b4.5b27e8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "3ce32450.e0cffc",
        "type": "ui_group",
        "name": "Changelog",
        "tab": "d25e08b4.5b27e8",
        "order": 2,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d25e08b4.5b27e8",
        "type": "ui_tab",
        "name": "Update & Info",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9e0540853d9b05e2",
        "type": "ui_spacer",
        "z": "cf7a4625417bfc11",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "ae76156613f8898f",
        "type": "ui_spacer",
        "z": "7a0f044da59e2d1a",
        "name": "spacer",
        "group": "7aaf184330605300",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "4f146abe8f3dd789",
        "type": "ui_spacer",
        "z": "7a0f044da59e2d1a",
        "name": "spacer",
        "group": "7aaf184330605300",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "2677ba0bed4658e8",
        "type": "ui_spacer",
        "z": "7a0f044da59e2d1a",
        "name": "spacer",
        "group": "7aaf184330605300",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "9f7c2f4f0d8ce14d",
        "type": "ui_spacer",
        "z": "7a0f044da59e2d1a",
        "name": "spacer",
        "group": "7aaf184330605300",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "12247c579c28ba89",
        "type": "ui_spacer",
        "z": "7a0f044da59e2d1a",
        "name": "spacer",
        "group": "90223f7ddc082321",
        "order": 14,
        "width": 2,
        "height": 1
    },
    {
        "id": "9a7a55b83dd52d57",
        "type": "ui_spacer",
        "z": "7a0f044da59e2d1a",
        "name": "spacer",
        "group": "90223f7ddc082321",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "79115a92dcf587ab",
        "type": "ui_spacer",
        "z": "7a0f044da59e2d1a",
        "name": "spacer",
        "group": "90223f7ddc082321",
        "order": 16,
        "width": 2,
        "height": 1
    },
    {
        "id": "90f0a7f5572d978a",
        "type": "ui_spacer",
        "z": "81e8a02fa43b7711",
        "name": "spacer",
        "group": "4fe6b4c0ade0938a",
        "order": 6,
        "width": 6,
        "height": 1
    },
    {
        "id": "5ac99043a3c91470",
        "type": "ui_spacer",
        "z": "81e8a02fa43b7711",
        "name": "spacer",
        "group": "4fe6b4c0ade0938a",
        "order": 11,
        "width": 6,
        "height": 1
    },
    {
        "id": "1acdaa77a6aebbdb",
        "type": "ui_spacer",
        "z": "81e8a02fa43b7711",
        "name": "spacer",
        "group": "4fe6b4c0ade0938a",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "f1f8c31cb4d9f090",
        "type": "ui_spacer",
        "z": "81e8a02fa43b7711",
        "name": "spacer",
        "group": "4fe6b4c0ade0938a",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "c71fac2672a6ddba",
        "type": "ui_spacer",
        "z": "81e8a02fa43b7711",
        "name": "spacer",
        "group": "3b4bd36726be16d5",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "523d56f5bc7c80ea",
        "type": "ui_spacer",
        "z": "81e8a02fa43b7711",
        "name": "spacer",
        "group": "3b4bd36726be16d5",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "1a73f48828974a91",
        "type": "ui_template",
        "z": "4dcd627bcd0e0455",
        "group": "729f9ea6e3513c9b",
        "name": "Background",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n    body {\n        background-image: url(\"/files/logo.jpg\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center;\n\n    }\n    #Home_Home {\n        background-color: #cccccc00 !important;\n        border-color: #cccccc00 !important;\n    }\n\n    \n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 110,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "8c68f0cfc31d432c",
        "type": "ui_button",
        "z": "4dcd627bcd0e0455",
        "name": "",
        "group": "729f9ea6e3513c9b",
        "order": 2,
        "width": 3,
        "height": 2,
        "passthru": false,
        "label": "SCAN",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 90,
        "y": 100,
        "wires": [
            [
                "287747e6fd012770"
            ]
        ]
    },
    {
        "id": "ea233fb3e659522e",
        "type": "ui_button",
        "z": "4dcd627bcd0e0455",
        "name": "",
        "group": "729f9ea6e3513c9b",
        "order": 4,
        "width": 3,
        "height": 2,
        "passthru": false,
        "label": "Settings",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "3",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 100,
        "y": 180,
        "wires": [
            [
                "287747e6fd012770"
            ]
        ]
    },
    {
        "id": "287747e6fd012770",
        "type": "ui_ui_control",
        "z": "4dcd627bcd0e0455",
        "name": "",
        "events": "all",
        "x": 280,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "48f7f691695a114d",
        "type": "ui_button",
        "z": "4dcd627bcd0e0455",
        "name": "",
        "group": "729f9ea6e3513c9b",
        "order": 3,
        "width": 3,
        "height": 2,
        "passthru": false,
        "label": "Files",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "2",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 90,
        "y": 140,
        "wires": [
            [
                "287747e6fd012770"
            ]
        ]
    },
    {
        "id": "d0b816f14d4a12ec",
        "type": "ui_button",
        "z": "4dcd627bcd0e0455",
        "name": "",
        "group": "729f9ea6e3513c9b",
        "order": 5,
        "width": 3,
        "height": 2,
        "passthru": false,
        "label": "Update&Info",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "4",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "287747e6fd012770"
            ]
        ]
    },
    {
        "id": "b1ba2f66ee50454f",
        "type": "inject",
        "z": "4dcd627bcd0e0455",
        "name": "1s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "4232407bc961d893",
                "a4fbee47cdb66eb7",
                "1546e1230324508a",
                "e73285d17d021369"
            ]
        ]
    },
    {
        "id": "6df7cee1aba1e4b2",
        "type": "link out",
        "z": "4dcd627bcd0e0455",
        "name": "enable",
        "mode": "link",
        "links": [
            "1ac7491049f8bd85"
        ],
        "x": 335,
        "y": 360,
        "wires": []
    },
    {
        "id": "4232407bc961d893",
        "type": "function",
        "z": "4dcd627bcd0e0455",
        "name": "enable",
        "func": "msg.enabled = true\nmsg.payload = 1\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 360,
        "wires": [
            [
                "6df7cee1aba1e4b2"
            ]
        ]
    },
    {
        "id": "a4fbee47cdb66eb7",
        "type": "function",
        "z": "4dcd627bcd0e0455",
        "name": "disable",
        "func": "msg.enabled = false\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 400,
        "wires": [
            [
                "9d1c848e36ad37c5"
            ]
        ]
    },
    {
        "id": "9d1c848e36ad37c5",
        "type": "link out",
        "z": "4dcd627bcd0e0455",
        "name": "disable",
        "mode": "link",
        "links": [
            "fd07587bac59ef9a"
        ],
        "x": 335,
        "y": 400,
        "wires": []
    },
    {
        "id": "1546e1230324508a",
        "type": "function",
        "z": "4dcd627bcd0e0455",
        "name": "write",
        "func": "var file = 'status_cloud'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\ncontent = 'ready'\n\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "d172fc8f3a0e34a1",
        "type": "link out",
        "z": "4dcd627bcd0e0455",
        "name": "started1s",
        "mode": "link",
        "links": [
            "49a14794d31390a4",
            "f4b7297e17d0d220",
            "46550c51727efa23",
            "84639c34c28a8826",
            "9fe1a03aa0afa40a",
            "ae849c01cfb0838f",
            "b5296efaeda79919",
            "58c405834963a4e7",
            "22ac236b9c639610",
            "5104df3fd053770e",
            "6282e5b44fe4d0c7",
            "f73a6fac3ba4cefd",
            "6f99e81d569bcce7",
            "6f628da6aeab7a82",
            "71e8a81927603df6",
            "0500f98e20f085f4",
            "44ca2614e8579031"
        ],
        "x": 615,
        "y": 720,
        "wires": []
    },
    {
        "id": "dfd85b9ed9d644d6",
        "type": "inject",
        "z": "4dcd627bcd0e0455",
        "name": "5/0.1s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 100,
        "y": 640,
        "wires": [
            [
                "0e9aa1140f088664"
            ]
        ]
    },
    {
        "id": "0e9aa1140f088664",
        "type": "link out",
        "z": "4dcd627bcd0e0455",
        "name": "repeat 5s/0.1s",
        "mode": "link",
        "links": [
            "3def2aa77ca84ce4",
            "811d465110ec2018",
            "7654a65c75515168"
        ],
        "x": 195,
        "y": 640,
        "wires": []
    },
    {
        "id": "e73285d17d021369",
        "type": "function",
        "z": "4dcd627bcd0e0455",
        "name": "global",
        "func": "global.set('flag_pw', true)\nglobal.set('flag', true)\nglobal.set('combine', false)\nglobal.set('focus', 2838)\nglobal.set('focus1', 0)\nglobal.set('focus2', 0)\n\nglobal.set('focuser', true)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "fb12bafddb026e4d",
        "type": "function",
        "z": "4dcd627bcd0e0455",
        "name": "CREATE FACTORY DEFAULT",
        "func": "msg = { \n'overwrite':msg.overwrite,\n'settings':\n    {\n    'advanced_settings':false,\n    'cameras':{\n        'imx519':[4656,3496],\n        'imx219':[3280,2464],\n        'imx477':[4056,3040],\n        'ov5647':[2592,1944],\n        'imx378':[3840,2880],\n        'ov9271':[1280,800],\n        'imx290a':[1920,1080],\n        'imx290b':[1920,1080],\n    },\n    'cam_AFmode':true,\n    'cam_STmode':true,\n    'cam_stacksize':2,\n    'cam_awbg_blue':0,\n    'cam_awbg_red':0,\n    'cam_contrast':1,\n    'cam_cropx':0,\n    'cam_cropy':0,\n    'cam_delay_after':0,\n    'cam_delay_before':0,\n    'camera':'',\n    'cam_gain':1,\n    'cam_jpeg_quality':95,\n    'cam_rotation':0,\n    'cam_saturation':1,\n    'cam_shutter':50000,\n    'cam_timeout':800,\n    'hostname':'',\n    'model':'',\n    'osc_credit':'',\n    'osc_limit_filesize':'',\n    'osc_limit_photos':'',\n    'osc_splitsize':200000000,\n    'pin_endstop1':24,\n    'pin_endstop2':25,\n    'pin_external':10,\n    'pin_ringlight1':17,\n    'pin_ringlight2':27,\n    'pin_rotor_dir':5,\n    'pin_rotor_enable':23,\n    'pin_rotor_step':6,\n    'pin_tt_dir':9,\n    'pin_tt_enable':22,\n    'pin_tt_step':11,\n    'rotor_acc':1,\n    'rotor_accramp':2000,\n    'rotor_angle':10,\n    'rotor_anglemax':60,\n    'rotor_anglemin':-40,\n    'rotor_anglestart':0,\n    'rotor_delay':0.0001,\n    'rotor_dir':1,\n    'rotor_stepsperrotation':48000,\n    'routine_photocount':50,\n    'routine_projectname':'default',\n    'smb':true,\n    'ssh':true,\n    'status_cloud':'ready',\n    'status_internal_cam':'--READY--',\n    'status_uploadprogress':'',\n    'terms':false,\n    'token':'',\n    'tt_acc':1,\n    'tt_accramp':200,\n    'tt_angle':10,\n    'tt_delay':0.0001,\n    'tt_dir':1,\n    'tt_stepsperrotation':3600,\n    'cam_focus':2838,\n    'cam_focus1':0,\n    'cam_focus2':0,\n    'uploadprogress':'',\n    'update_type':'main',\n    'update_auto':true,\n}}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 720,
        "wires": [
            [
                "e0fe0ade252a3815"
            ]
        ]
    },
    {
        "id": "f09f4f651c130f11",
        "type": "inject",
        "z": "4dcd627bcd0e0455",
        "name": "",
        "props": [
            {
                "p": "overwrite",
                "v": "false",
                "vt": "bool"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "x": 90,
        "y": 720,
        "wires": [
            [
                "fb12bafddb026e4d"
            ]
        ]
    },
    {
        "id": "e0fe0ade252a3815",
        "type": "python3-function",
        "z": "4dcd627bcd0e0455",
        "name": "chk files",
        "func": "from os import listdir\n\nbasedir = '/home/pi/OpenScan/settings/'\n\nmsg['payload'] = ''\n\nfiles = listdir(basedir)\n\nfor i in msg['settings']:\n    if msg['overwrite'] != True:\n        if i not in files:\n            with open(basedir + i, 'w+') as file:\n                file.write(str(msg['settings'][i]))        \n    else:\n        with open(basedir + i, 'w+') as file:\n            file.write(str(msg['settings'][i])) \n\nmsg['payload'] = True\n\nreturn msg",
        "outputs": 1,
        "x": 520,
        "y": 720,
        "wires": [
            [
                "d172fc8f3a0e34a1"
            ]
        ]
    },
    {
        "id": "4f6aaf1c10d1676d",
        "type": "link in",
        "z": "4dcd627bcd0e0455",
        "name": "factory reset",
        "links": [
            "d0683f1f7332675b"
        ],
        "x": 135,
        "y": 760,
        "wires": [
            [
                "fb12bafddb026e4d"
            ]
        ]
    },
    {
        "id": "0d6a021fc49d84fa",
        "type": "ui_button",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "group": "7aaf184330605300",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "⇐",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 90,
        "y": 400,
        "wires": [
            [
                "73d37dd7e7c6b1a0"
            ]
        ]
    },
    {
        "id": "262ce48614daf0c0",
        "type": "ui_button",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "group": "7aaf184330605300",
        "order": 10,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "⇒",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 90,
        "y": 440,
        "wires": [
            [
                "1636bd7a631cc6d9"
            ]
        ]
    },
    {
        "id": "5bac30164b4b3f79",
        "type": "ui_button",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "group": "7aaf184330605300",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": true,
        "label": "⇑",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 90,
        "y": 280,
        "wires": [
            [
                "9080f5435ae58fd8"
            ]
        ]
    },
    {
        "id": "d238213653d97adc",
        "type": "ui_button",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "group": "7aaf184330605300",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": true,
        "label": "⇓",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "21d21e27268e2ea9"
            ]
        ]
    },
    {
        "id": "b1a48025d8c95748",
        "type": "ui_text",
        "z": "7a0f044da59e2d1a",
        "group": "7aaf184330605300",
        "order": 8,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Turntable",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 100,
        "y": 360,
        "wires": []
    },
    {
        "id": "edf16fe758316b68",
        "type": "ui_text",
        "z": "7a0f044da59e2d1a",
        "group": "7aaf184330605300",
        "order": 5,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Rotor",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 90,
        "y": 240,
        "wires": []
    },
    {
        "id": "9080f5435ae58fd8",
        "type": "delay",
        "z": "7a0f044da59e2d1a",
        "name": "lmt 0.2/s",
        "pauseType": "rate",
        "timeout": "0.1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "0.2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 220,
        "y": 280,
        "wires": [
            [
                "f7ea25fed7694648"
            ]
        ]
    },
    {
        "id": "21d21e27268e2ea9",
        "type": "delay",
        "z": "7a0f044da59e2d1a",
        "name": "lmt 0.2/s",
        "pauseType": "rate",
        "timeout": "0.1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "0.2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 220,
        "y": 320,
        "wires": [
            [
                "aceb78334213dbaf"
            ]
        ]
    },
    {
        "id": "73d37dd7e7c6b1a0",
        "type": "delay",
        "z": "7a0f044da59e2d1a",
        "name": "lmt 0.2/s",
        "pauseType": "rate",
        "timeout": "0.1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "0.2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 220,
        "y": 400,
        "wires": [
            [
                "0ab14558dc56c198"
            ]
        ]
    },
    {
        "id": "1636bd7a631cc6d9",
        "type": "delay",
        "z": "7a0f044da59e2d1a",
        "name": "lmt 0.2/s",
        "pauseType": "rate",
        "timeout": "0.1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "0.2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 220,
        "y": 440,
        "wires": [
            [
                "6ab598611fcf42ab"
            ]
        ]
    },
    {
        "id": "f7ea25fed7694648",
        "type": "python3-function",
        "z": "7a0f044da59e2d1a",
        "name": "Rotor left",
        "func": "from OpenScan import motorrun, load_int\n\nmotorrun('rotor',load_int('rotor_angle'))",
        "outputs": 1,
        "x": 360,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "aceb78334213dbaf",
        "type": "python3-function",
        "z": "7a0f044da59e2d1a",
        "name": "Rotor right",
        "func": "from OpenScan import motorrun, load_int\n\nmotorrun('rotor',-load_int('rotor_angle'))",
        "outputs": 1,
        "x": 370,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "6ab598611fcf42ab",
        "type": "python3-function",
        "z": "7a0f044da59e2d1a",
        "name": "TT right",
        "func": "from OpenScan import motorrun, load_int\n\nmotorrun('tt',-load_int('tt_angle'))",
        "outputs": 1,
        "x": 360,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "0ab14558dc56c198",
        "type": "python3-function",
        "z": "7a0f044da59e2d1a",
        "name": "TT left",
        "func": "from OpenScan import motorrun, load_int\n\nmotorrun('tt',load_int('tt_angle'))",
        "outputs": 1,
        "x": 350,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "753d2df0d827b423",
        "type": "ui_slider",
        "z": "7a0f044da59e2d1a",
        "name": "routine_photocount",
        "label": "",
        "tooltip": "",
        "group": "7aaf184330605300",
        "order": 15,
        "width": 3,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "10",
        "max": "300",
        "step": "10",
        "className": "",
        "x": 350,
        "y": 540,
        "wires": [
            [
                "371dfdefbbaad82d"
            ]
        ]
    },
    {
        "id": "f8e45b20e288fa61",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "loadI",
        "func": "var file = 'routine_photocount'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 540,
        "wires": [
            [
                "753d2df0d827b423"
            ]
        ]
    },
    {
        "id": "371dfdefbbaad82d",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "write",
        "func": "var file = 'routine_photocount'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "46f2d50a5bbfd030",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "loadF",
        "func": "var file = 'cam_shutter'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data) / 1000;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 580,
        "wires": [
            [
                "5bba84a57f91751b"
            ]
        ]
    },
    {
        "id": "5bba84a57f91751b",
        "type": "ui_slider",
        "z": "7a0f044da59e2d1a",
        "name": "shutter ",
        "label": " ",
        "tooltip": "",
        "group": "7aaf184330605300",
        "order": 17,
        "width": 3,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "1",
        "max": "700",
        "step": "1",
        "className": "",
        "x": 310,
        "y": 580,
        "wires": [
            [
                "baca12255bfeac57"
            ]
        ]
    },
    {
        "id": "baca12255bfeac57",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "write",
        "func": "var file = 'cam_shutter'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload * 1000)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "92eb341acf791789",
        "type": "ui_text",
        "z": "7a0f044da59e2d1a",
        "group": "7aaf184330605300",
        "order": 14,
        "width": 3,
        "height": 1,
        "name": "photocount",
        "label": "Photos",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 670,
        "y": 540,
        "wires": []
    },
    {
        "id": "cd8271682a782bf2",
        "type": "ui_text",
        "z": "7a0f044da59e2d1a",
        "group": "7aaf184330605300",
        "order": 16,
        "width": 3,
        "height": 1,
        "name": "shutter",
        "label": "Shutter (ms)",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 650,
        "y": 580,
        "wires": []
    },
    {
        "id": "465c804a53d9a81e",
        "type": "ui_slider",
        "z": "7a0f044da59e2d1a",
        "name": "Crop X",
        "label": " ",
        "tooltip": "",
        "group": "7aaf184330605300",
        "order": 19,
        "width": 3,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0",
        "max": "99",
        "step": "1",
        "className": "",
        "x": 310,
        "y": 620,
        "wires": [
            [
                "b5987938fe8e30f3"
            ]
        ]
    },
    {
        "id": "9ae53dc01e959316",
        "type": "ui_slider",
        "z": "7a0f044da59e2d1a",
        "name": "Crop Y",
        "label": " ",
        "tooltip": "",
        "group": "7aaf184330605300",
        "order": 21,
        "width": 3,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0",
        "max": "99",
        "step": "1",
        "className": "",
        "x": 310,
        "y": 660,
        "wires": [
            [
                "8e7e13d58b6bc12a"
            ]
        ]
    },
    {
        "id": "9b6d8fadeb133222",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "loadI",
        "func": "var file = 'cam_cropx'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 620,
        "wires": [
            [
                "465c804a53d9a81e"
            ]
        ]
    },
    {
        "id": "afc57863ab1df8cb",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "loadI",
        "func": "var file = 'cam_cropy'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 660,
        "wires": [
            [
                "9ae53dc01e959316"
            ]
        ]
    },
    {
        "id": "b5987938fe8e30f3",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "write",
        "func": "var file = 'cam_cropx'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "8e7e13d58b6bc12a",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "write",
        "func": "var file = 'cam_cropy'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "0dbe84b726fca738",
        "type": "ui_text",
        "z": "7a0f044da59e2d1a",
        "group": "7aaf184330605300",
        "order": 18,
        "width": 3,
        "height": 1,
        "name": "cropx",
        "label": "Crop X (%)",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 650,
        "y": 620,
        "wires": []
    },
    {
        "id": "2843a748a395be9c",
        "type": "ui_text",
        "z": "7a0f044da59e2d1a",
        "group": "7aaf184330605300",
        "order": 20,
        "width": 3,
        "height": 1,
        "name": "cropy",
        "label": "Crop Y (%)",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 670,
        "y": 660,
        "wires": []
    },
    {
        "id": "427a64313443c59e",
        "type": "ui_text_input",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "7aaf184330605300",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 320,
        "y": 500,
        "wires": [
            [
                "aa76484b4250d1e0"
            ]
        ]
    },
    {
        "id": "7cc814b33e8c212a",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "msg",
        "func": "msg.payload=\"default\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 500,
        "wires": [
            [
                "427a64313443c59e"
            ]
        ]
    },
    {
        "id": "aa76484b4250d1e0",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "write",
        "func": "var file = 'routine_projectname'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload).replace(/ /g, '_')\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "31a50af93be21f74",
        "type": "ui_slider",
        "z": "7a0f044da59e2d1a",
        "name": "ringlight",
        "label": "",
        "tooltip": "",
        "group": "7aaf184330605300",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "topicType": "str",
        "min": 0,
        "max": "3",
        "step": 1,
        "className": "",
        "x": 320,
        "y": 700,
        "wires": [
            [
                "0a72dbebd0fa3914"
            ]
        ]
    },
    {
        "id": "29bf13593c740e88",
        "type": "python3-function",
        "z": "7a0f044da59e2d1a",
        "name": "LED",
        "func": "from OpenScan import ringlight\ntry:\n    val = msg['payload']\nexcept:\n    val = 0\n\nif val == 0:\n    ringlight(1,False)\n    ringlight(2,False)\nelif val == 1:\n    ringlight(1,False)\n    ringlight(2,True)\nelif val == 2:\n    ringlight(1,True)\n    ringlight(2,False)\nelif val == 3:\n    ringlight(1,True)\n    ringlight(2,True)\n",
        "outputs": 1,
        "x": 390,
        "y": 980,
        "wires": [
            [
                "153c791de5fb95b6"
            ]
        ]
    },
    {
        "id": "feea4d55db9e3d50",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "loadI",
        "func": "msg.payload = 0\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 700,
        "wires": [
            [
                "31a50af93be21f74"
            ]
        ]
    },
    {
        "id": "0350522b2f6c4a66",
        "type": "ui_button",
        "z": "7a0f044da59e2d1a",
        "name": "start ",
        "group": "7aaf184330605300",
        "order": 23,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-play",
        "payload": "",
        "payloadType": "date",
        "topic": "enabled",
        "topicType": "str",
        "x": 230,
        "y": 1100,
        "wires": [
            [
                "8d18fb4efc9681b0",
                "0100ec2201fb18c2",
                "e78ef27c19300a7b"
            ]
        ]
    },
    {
        "id": "d41146d367007a5e",
        "type": "ui_button",
        "z": "7a0f044da59e2d1a",
        "name": "stop",
        "group": "7aaf184330605300",
        "order": 24,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-stop",
        "payload": "numberofphotos",
        "payloadType": "global",
        "topic": "",
        "topicType": "str",
        "x": 570,
        "y": 1140,
        "wires": [
            [
                "aee1086f2d27c323",
                "5f4569e327313ff9"
            ]
        ]
    },
    {
        "id": "8d18fb4efc9681b0",
        "type": "python3-function",
        "z": "7a0f044da59e2d1a",
        "name": "Routine",
        "func": "from OpenScan import load_str, load_int, motorrun, create_coordinates, take_photo, save, load_bool, camera\nfrom time import sleep, strftime\nfrom zipfile import ZipFile, ZIP_DEFLATED\nfrom os import system\nfrom os.path import isfile\nfrom Arducam import Focuser\n\nif load_str(\"status_internal_cam\")==\"no camera found\" or load_str(\"status_internal_cam\")[:5]==\"Featu\":\n    return\n\nsave('status_internal_cam','Routine-preparing')\nsleep(2)\n\nprojectname=load_str(\"routine_projectname\")\nphotocount = load_int('routine_photocount') #vorher point_count\nangle_max = load_int('rotor_anglemax')\nangle_min = load_int('rotor_anglemin')\nangle_start = load_int('rotor_anglestart')\nprojectcode = strftime('20%y-%m-%d_%H.%M.%S-') + projectname\ncam = load_str('camera')\nSTmode = load_bool('cam_STmode')\n\nif cam == 'imx519' and STmode == True:\n    focuser = Focuser('/dev/v4l-subdev1')\n    stacksize = load_int('cam_stacksize')\n    focus1 = load_int('cam_focus1')\n    focus2 = load_int('cam_focus2')\n    if focus1 > focus2:\n        focus2 = focus1\n        focus1 = load_int('cam_focus2') \n    focusstep = int((focus2-focus1)/(stacksize - 1))\n\n\ncoordinates = create_coordinates(angle_min,angle_max,photocount)\nposition_last = (angle_start , 0)\ncounter = 0\nbasepath = '/home/pi/OpenScan/'\ntemppath = basepath + 'tmp/tmp.jpg'\nzippath = basepath + 'tmp/tmp.zip'\n\nif isfile(zippath):\n    system('rm ' + zippath)\n\nzip = ZipFile(zippath, \"w\",ZIP_DEFLATED, allowZip64=True)\n\nfor position in coordinates:\n    counter += 1\n    if load_str('status_internal_cam') == \"Routine-stopping\":\n        break\n\n    filepath = basepath + 'tmp/' + projectname + '_' + str(counter) + \".jpg\"\n\n    rotor_angle = position_last[0] - position[0]\n    if abs(rotor_angle) > 180:\n        rotor_angle = -360 * rotor_angle/abs(rotor_angle) + rotor_angle\n\n    tt_angle = position_last[1] - position[1]\n    if abs(tt_angle) > 180:\n        tt_angle = -360 * tt_angle/abs(tt_angle) + tt_angle\n            \n    motorrun('rotor', rotor_angle)\n    motorrun('tt', tt_angle)\n\n    msg['cropx'] = load_int('cam_cropx')\n    msg['cropy'] = load_int('cam_cropy')\n    msg['rotation'] = load_int('cam_rotation')\n    msg['filepath_in'] = 'tmp/tmp.jpg'\n    msg['filepath_out'] = 'tmp/tmp.jpg'\n    msg['filepath'] = 'tmp/tmp.jpg'\n\n    if STmode == True:\n        counter2 = 0\n        for focus in range (stacksize):\n            if load_str('status_internal_cam') == \"Routine-stopping\":\n                break\n            counter2 += 1\n            save('status_internal_cam','Routine-' + str(counter) + '/' + str(photocount) + ' F' + str(counter2))\n            focuser.write(focus1 + focus * focusstep)\n            take_photo('tmp/tmp.jpg')\n            camera('/crop',msg)\n            zip.write(temppath, projectname + '_' + str(counter) + '-' + str(focus) + \".jpg\")\n            system('cp ' + temppath + ' ' + basepath +'tmp/preview.jpg')\n    elif cam != 'external':\n        save('status_internal_cam','Routine-Photo ' + str(counter) + '/' + str(photocount))\n\n        if cam == 'gphoto':\n            camera('/gphoto_capture', msg)\n        if cam in ('imx219','ov5647','imx477','imx290a','imx290b','imx378','ov9281','imx519'):\n            take_photo('tmp/tmp.jpg')\n        camera('/crop',msg)\n        \n        zip.write(temppath, projectname + '_' + str(counter) + \".jpg\")\n        system('cp ' + temppath + ' ' + basepath +'tmp/preview.jpg')\n    elif cam == 'external':\n        camera('external_capture')\n\n    position_last = position\n\nzip.close()\n\nsystem('mv '+ zippath + ' ' + basepath + 'scans/' + projectcode + '.zip')\n\nsave('status_internal_cam','Routine-done')\n\nmotorrun('rotor',position_last[0] - angle_start)\nmotorrun('tt',position_last[1])\n\nsave('status_internal_cam','--READY--')\n\nmsg['enabled'] = False\nreturn msg\n\n",
        "outputs": 1,
        "x": 380,
        "y": 1100,
        "wires": [
            [
                "d41146d367007a5e",
                "8ca9290dc0dcd2a3"
            ]
        ]
    },
    {
        "id": "aee1086f2d27c323",
        "type": "python3-function",
        "z": "7a0f044da59e2d1a",
        "name": "stop",
        "func": "from OpenScan import load_str, save\n\nstatus = load_str('status_internal_cam')\n\nif status == 'no camera found' or status[:5]=='Featu' or status =='--READY--':\n    return\n\nsave('status_internal_cam', 'Routine-stopping')",
        "outputs": 1,
        "x": 690,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "45f5d95607277734",
        "type": "link out",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "mode": "link",
        "links": [
            "0d0b40c5749de2c2",
            "46711cf307088fa2"
        ],
        "x": 475,
        "y": 1060,
        "wires": []
    },
    {
        "id": "b51adf43fccb40e6",
        "type": "ui_button",
        "z": "7a0f044da59e2d1a",
        "name": "reboot",
        "group": "7aaf184330605300",
        "order": 27,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "reboot",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-repeat",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "topicType": "str",
        "x": 170,
        "y": 1220,
        "wires": [
            [
                "422449700d52a894"
            ]
        ]
    },
    {
        "id": "0ef9ce828677a657",
        "type": "ui_button",
        "z": "7a0f044da59e2d1a",
        "name": "shutdown",
        "group": "7aaf184330605300",
        "order": 28,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "shutdown",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-power-off",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "topicType": "str",
        "x": 180,
        "y": 1260,
        "wires": [
            [
                "662940a6a8f09348"
            ]
        ]
    },
    {
        "id": "422449700d52a894",
        "type": "link out",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "mode": "link",
        "links": [
            "5fc526416e8b9043"
        ],
        "x": 295,
        "y": 1220,
        "wires": []
    },
    {
        "id": "662940a6a8f09348",
        "type": "link out",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "mode": "link",
        "links": [
            "9fdee8bd1db81df8"
        ],
        "x": 295,
        "y": 1260,
        "wires": []
    },
    {
        "id": "ce11d733d94a293a",
        "type": "inject",
        "z": "7a0f044da59e2d1a",
        "name": "1s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 370,
        "y": 1180,
        "wires": [
            [
                "5f4569e327313ff9"
            ]
        ]
    },
    {
        "id": "0d0b40c5749de2c2",
        "type": "link in",
        "z": "7a0f044da59e2d1a",
        "name": "start routine",
        "links": [
            "2526dc3c05093f76",
            "9e5c2935fc2e454c",
            "a28a35861fd15e47",
            "f04f3808ca3fd404",
            "45f5d95607277734",
            "96bdb9417e38810f",
            "c975d32dd9fc2e8b"
        ],
        "x": 135,
        "y": 1100,
        "wires": [
            [
                "0350522b2f6c4a66"
            ]
        ]
    },
    {
        "id": "c975d32dd9fc2e8b",
        "type": "link out",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "mode": "link",
        "links": [
            "49a14794d31390a4",
            "0d0b40c5749de2c2",
            "46711cf307088fa2"
        ],
        "x": 655,
        "y": 1100,
        "wires": []
    },
    {
        "id": "f3f3a85980d96ea2",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "enable",
        "func": "msg.flag = global.get('flag')\nif (global.get('flag_pw')== true){\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1440,
        "wires": [
            [
                "3016355fa3a0a261",
                "05743219ec2caeb8"
            ]
        ]
    },
    {
        "id": "0bf85bd59cd4b516",
        "type": "change",
        "z": "7a0f044da59e2d1a",
        "name": "flag_pw true",
        "rules": [
            {
                "t": "set",
                "p": "flag_pw",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "3016355fa3a0a261",
        "type": "change",
        "z": "7a0f044da59e2d1a",
        "name": "flag_pw false",
        "rules": [
            {
                "t": "set",
                "p": "flag_pw",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "fb4aeef4f55c26b5",
        "type": "exec",
        "z": "7a0f044da59e2d1a",
        "command": " v4l2-ctl --list-formats-ext",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "check cam",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "f04e07e208246f7a"
            ],
            [
                "f04e07e208246f7a"
            ],
            []
        ]
    },
    {
        "id": "f04e07e208246f7a",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "write",
        "func": "var file = 'status_internal_cam'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\ncontent = '--READY--'\n\nif (msg.payload.includes('Cannot open device')){\n    content = 'no camera found'\n}\n\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return msg\n  }\n  });\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 100,
        "wires": [
            [
                "f8d0b3a02faeb9a2"
            ]
        ]
    },
    {
        "id": "f9d9693cc0491c7b",
        "type": "comment",
        "z": "7a0f044da59e2d1a",
        "name": "Settings internal cam",
        "info": "",
        "x": 120,
        "y": 40,
        "wires": []
    },
    {
        "id": "08dd18ec8282c60d",
        "type": "comment",
        "z": "7a0f044da59e2d1a",
        "name": "preview internal cam",
        "info": "",
        "x": 190,
        "y": 1340,
        "wires": []
    },
    {
        "id": "e5a4145b5cbcce2e",
        "type": "inject",
        "z": "7a0f044da59e2d1a",
        "name": "4s/0.5",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": "4",
        "topic": "Repeat",
        "payload": "0.2",
        "payloadType": "str",
        "x": 160,
        "y": 1440,
        "wires": [
            [
                "f3f3a85980d96ea2"
            ]
        ]
    },
    {
        "id": "05743219ec2caeb8",
        "type": "python3-function",
        "z": "7a0f044da59e2d1a",
        "name": "Take Preview Shot",
        "func": "from time import time, sleep\nfrom OpenScan import load_str, load_bool, take_photo, camera, load_int,save\nsleep(0.5)\n\n\nstatus = load_str('status_internal_cam')\ncam=load_str('camera')\n\n\nif msg['flag'] == False and not 'Routine' in status:\n    return\n\nif cam == 'external':\n    return\n\nmsg['payload']=\"/tmp/preview.jpg?ts=\"+str(int(time()*10))\n\nif cam == 'gphoto' and status == 'no camera found':\n    if camera('/gphoto_init') == 200:\n        save('status_internal_cam','--READY--')\n\nif status!=\"--READY--\":\n    return msg\n\nmsg['cropx'] = load_int('cam_cropx')\nmsg['cropy'] = load_int('cam_cropy')\nmsg['rotation'] = load_int('cam_rotation')\nmsg['filepath_in'] = 'tmp/tmp.jpg'\nmsg['filepath_out'] = 'tmp/preview.jpg'\nmsg['filepath'] = 'tmp/tmp.jpg'\n\nif cam == 'gphoto':\n    if camera('/gphoto_test', msg) != 200:\n        save('status_internal_cam','no camera found')\n        return msg\n    camera('/gphoto_preview', msg)\n\nif cam in ('imx219','ov5647','imx477','imx290a','imx290b','imx378','ov9281','imx519'):\n    take_photo('tmp/tmp.jpg')\n\ncamera('/crop',msg)\n\nreturn msg\n",
        "outputs": 1,
        "x": 490,
        "y": 1440,
        "wires": [
            [
                "0bf85bd59cd4b516",
                "9f635f097204998a",
                "dd7fc77ff2ed8b69"
            ]
        ]
    },
    {
        "id": "9f635f097204998a",
        "type": "ui_template",
        "z": "7a0f044da59e2d1a",
        "group": "ce9cc9d915dc6eb6",
        "name": "preview_internal",
        "order": 1,
        "width": 12,
        "height": 12,
        "format": "<div align=\"center\" >\n<img ng-src= {{msg.payload}} style=\"width: auto; height: auto;max-width: 606px;max-height: 606px\"/>\n\n</div>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 700,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "423e4e955611b98f",
        "type": "ui_text",
        "z": "7a0f044da59e2d1a",
        "group": "7aaf184330605300",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "projectname",
        "label": "Projectname",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 670,
        "y": 500,
        "wires": []
    },
    {
        "id": "153c791de5fb95b6",
        "type": "ui_text",
        "z": "7a0f044da59e2d1a",
        "group": "7aaf184330605300",
        "order": 11,
        "width": 3,
        "height": 1,
        "name": "ringlight",
        "label": "Ringlight",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 560,
        "y": 980,
        "wires": []
    },
    {
        "id": "0100ec2201fb18c2",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "enable",
        "func": "global.set('flag', false)\n\nvar file = 'status_internal_cam'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\ndata = fs.readFileSync(filepath+file, 'utf8');\n\n\nif (data === 'no camera found' || data.substring(0,5) === 'Featu'){\n    return\n}\n\nmsg.enabled = true\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1140,
        "wires": [
            [
                "d41146d367007a5e"
            ]
        ]
    },
    {
        "id": "5f4569e327313ff9",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "msg",
        "func": "msg.enabled = false\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1180,
        "wires": [
            [
                "d41146d367007a5e"
            ]
        ]
    },
    {
        "id": "ccf7169d7884deaf",
        "type": "comment",
        "z": "7a0f044da59e2d1a",
        "name": "preview arducam with focus",
        "info": "",
        "x": 220,
        "y": 1580,
        "wires": []
    },
    {
        "id": "dd7fc77ff2ed8b69",
        "type": "ui_template",
        "z": "7a0f044da59e2d1a",
        "group": "90223f7ddc082321",
        "name": "preview_arducam",
        "order": 2,
        "width": 10,
        "height": 12,
        "format": "<div align=\"center\" >\n<img ng-src= {{msg.payload}} style=\"width: auto; height: auto;max-width: 502px;max-height: 606px\"/>\n</div>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 730,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "1d34b33516cbcc9c",
        "type": "python3-function",
        "z": "7a0f044da59e2d1a",
        "name": "focus",
        "func": "from OpenScan import load_str\n\nif load_str('camera') != 'imx519':\n    return\n\nfrom Arducam import Focuser\n\n\nif msg['focuser'] == True:\n    focuser = Focuser('/dev/v4l-subdev1')\n    focuser.write(msg['focus'])\n    return msg",
        "outputs": 1,
        "x": 1190,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "147cb15c0bb84f34",
        "type": "ui_switch",
        "z": "7a0f044da59e2d1a",
        "name": "MF",
        "label": "",
        "tooltip": "",
        "group": "90223f7ddc082321",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "false",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "true",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 230,
        "y": 1620,
        "wires": [
            [
                "4a0e10fc5dcefc19"
            ]
        ]
    },
    {
        "id": "4a0e10fc5dcefc19",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "enable",
        "func": "let fs = global.get('fs');\nfilepath = '/home/pi/OpenScan/settings/';\n\nvar file = 'status_internal_cam'\ndata = fs.readFileSync(filepath+file, 'utf8');\nif(data != '--READY--'){\n    return\n}\n\nfile = 'cam_AFmode'\ncontent = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n});\n\nglobal.set('AF',msg.payload)\nmsg.enabled = false\nif (msg.payload == false){\n    msg.enabled = true\n}\nif (msg.payload == true){\n    file = 'cam_focus1'\n    content = String(0)\n    fs.writeFile(filepath + file, content, err => {\n      if (err) {\n        return\n      }\n    });\n    file = 'cam_focus2'\n    fs.writeFile(filepath + file, content, err => {\n      if (err) {\n        return\n      }\n    });\n    \n    file = 'cam_stacksize'\n    content = String(2)\n    fs.writeFile(filepath + file, content, err => {\n      if (err) {\n        return\n      }\n    });\n    global.set('focus1', 0)\n    global.set('focus2', 0)\n\n}\n\n\nmsg.focus = global.get('focus')\nmsg.payload = 'down'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1620,
        "wires": [
            [
                "7ac0e6cd7a309bf2",
                "724bbea76f487725",
                "32df6edd0b221002",
                "e90f4c2c8cdfb90b",
                "36951201db916323"
            ]
        ]
    },
    {
        "id": "46550c51727efa23",
        "type": "link in",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "links": [
            "d172fc8f3a0e34a1"
        ],
        "x": 135,
        "y": 1620,
        "wires": [
            [
                "147cb15c0bb84f34"
            ]
        ]
    },
    {
        "id": "f92dcc0c80b7eef9",
        "type": "trigger",
        "z": "7a0f044da59e2d1a",
        "name": "20ms",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-20",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 810,
        "y": 1660,
        "wires": [
            [
                "96f3b659181ca473"
            ]
        ]
    },
    {
        "id": "7ac0e6cd7a309bf2",
        "type": "ui_template",
        "z": "7a0f044da59e2d1a",
        "group": "90223f7ddc082321",
        "name": "F+",
        "order": 8,
        "width": 1,
        "height": 1,
        "format": "<md-button style=\"padding:0 0, margin:0 ; width:100%; height:100%;\" ng-mousedown=\"send({payload: -1})\" ng-mouseup=\"send({payload: 'up'})\"><i class=\"fa fa-plus\"></i> </md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 490,
        "y": 1620,
        "wires": [
            [
                "030d5d4f5090c62f"
            ]
        ]
    },
    {
        "id": "030d5d4f5090c62f",
        "type": "switch",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "-1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "up",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 630,
        "y": 1640,
        "wires": [
            [
                "f92dcc0c80b7eef9",
                "96f83a078d401e17"
            ],
            [
                "f92dcc0c80b7eef9",
                "96f83a078d401e17"
            ],
            [
                "a3dd06d3c9a8d2d8"
            ]
        ]
    },
    {
        "id": "a3dd06d3c9a8d2d8",
        "type": "change",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1700,
        "wires": [
            [
                "f92dcc0c80b7eef9",
                "3cbb8164bda9c423"
            ]
        ]
    },
    {
        "id": "724bbea76f487725",
        "type": "ui_template",
        "z": "7a0f044da59e2d1a",
        "group": "90223f7ddc082321",
        "name": "F-",
        "order": 9,
        "width": 1,
        "height": 1,
        "format": "<md-button style=\"padding:0 0, margin:0 ; width:100%; height:100%;\" ng-mousedown=\"send({payload: 1})\" ng-mouseup=\"send({payload: 'up'})\"><i class=\"fa fa-minus\"></i> </md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 490,
        "y": 1660,
        "wires": [
            [
                "030d5d4f5090c62f"
            ]
        ]
    },
    {
        "id": "a0eaccce4e46c94e",
        "type": "ui_text",
        "z": "7a0f044da59e2d1a",
        "group": "90223f7ddc082321",
        "order": 7,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 1190,
        "y": 1640,
        "wires": []
    },
    {
        "id": "32df6edd0b221002",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "global",
        "func": "if (msg.payload == 'down'){\n    msg.enabled = false\n    msg.payload = ' '\n    msg.focuser = global.get('focuser')\n    return msg\n}\n\n\nmsg.enabled = true\n\nsign = msg.payload\nfocus = global.get('focus')\nif (focus > 3000){\n    focusstep = 5\n}\nelse if (focus <=3000 && focus > 2000){\n    focusstep = 3\n}\nelse{\n    focusstep = 2\n}\n\n\nfocus = focus + sign * focusstep\n\nsign = msg.payload\nif (focus > 4000){\n    distance = 6\n    focus = 4000\n}\nelse if (focus > 1200 && focus <= 4000){\n    distance = 737086 * Math.pow(focus, -1.4096)\n}\nelse if (focus <= 1200){\n    distance = 999\n    if (focus <=0){\n       focus = 0\n    }\n}\n\n\nglobal.set('focus', focus)\nmsg.focus = focus\nmsg.distance = distance\ndistance = distance * 10\nmsg.focuser = global.get('focuser')\nmsg.payload = String(distance.toFixed(1)) + 'mm'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1660,
        "wires": [
            [
                "a0eaccce4e46c94e",
                "1d34b33516cbcc9c",
                "7b9a56d8743cb9b8"
            ]
        ]
    },
    {
        "id": "96f83a078d401e17",
        "type": "change",
        "z": "7a0f044da59e2d1a",
        "name": "focuser f",
        "rules": [
            {
                "t": "set",
                "p": "focuser",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "3cbb8164bda9c423",
        "type": "change",
        "z": "7a0f044da59e2d1a",
        "name": "focuser t",
        "rules": [
            {
                "t": "set",
                "p": "focuser",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "96f3b659181ca473",
        "type": "delay",
        "z": "7a0f044da59e2d1a",
        "name": "10ms",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 930,
        "y": 1660,
        "wires": [
            [
                "32df6edd0b221002"
            ]
        ]
    },
    {
        "id": "f4e3dd4e49cf9437",
        "type": "ui_template",
        "z": "7a0f044da59e2d1a",
        "group": "90223f7ddc082321",
        "name": "set",
        "order": 10,
        "width": 2,
        "height": 1,
        "format": "<md-button class=\"button save\" style=\"padding:0 0; margin:0 ;width:100%; height:100%;\"ng-click=\"send({payload:'1'})\">set</md-button></md-button>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 650,
        "y": 1760,
        "wires": [
            [
                "468da69d83bceb37"
            ]
        ]
    },
    {
        "id": "468da69d83bceb37",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "msg",
        "func": "focus = global.get('focus')\nfocus1 = global.get('focus1')\nfocus2 = global.get('focus2')\nlet fs = global.get('fs');\nfilepath = '/home/pi/OpenScan/settings/';\n    \nif (msg.payload == false){\n    return msg\n}\n\nif (focus1 != 0 && focus2 != 0){\n    global.set('focus1', 0)\n    global.set('focus2', 0)\n        file = 'cam_focus1'\n    content = String(0)\n    fs.writeFile(filepath + file, content, err => {\n      if (err) {\n        return\n      }\n    });\n    file = 'cam_focus2'\n    fs.writeFile(filepath + file, content, err => {\n      if (err) {\n        return\n      }\n    });\n    msg.distance1 = ' '\n    msg.distance2 = ' '\n    msg.enabled = false\n    return msg\n}\n\nif (focus > 4000){\n    distance = 6\n    focus = 4000\n}\nelse if (focus > 1200 && focus <= 4000){\n    distance = 737086 * Math.pow(focus, -1.4096)\n}\nelse if (focus <= 1200){\n    distance = 999.9\n    if (focus <=0){\n       focus = 0\n    }\n}\ndistance = distance * 10\n\nif (focus1 == 0){\n    global.set('focus1', focus)\n    file = 'cam_focus1'\n    content = String(focus)\n    fs.writeFile(filepath + file, content, err => {\n      if (err) {\n        return\n      }\n    });\n    global.set('distance1', distance)\n    msg.distance1 = distance.toFixed(1)\n    msg.distance2 = 'tbd'\n    msg.enabled = false\n    return msg\n}\nif (focus1 != 0 && focus2 ==0 && focus!= focus1){\n    global.set('focus2', focus)\n    file = 'cam_focus2'\n    content = String(focus)\n    fs.writeFile(filepath + file, content, err => {\n      if (err) {\n        return\n      }\n    });\n    global.set('distance2', distance)\n    msg.distance1 = global.get('distance1').toFixed(1)\n    msg.distance2 = distance.toFixed(1)\n    msg.enabled = true\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1780,
        "wires": [
            [
                "3d22fa469015b48b",
                "2526dc3c05093f76"
            ]
        ]
    },
    {
        "id": "3d22fa469015b48b",
        "type": "ui_text",
        "z": "7a0f044da59e2d1a",
        "group": "90223f7ddc082321",
        "order": 11,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "{{msg.distance1}}",
        "format": "{{msg.distance2}}",
        "layout": "col-center",
        "className": "",
        "x": 910,
        "y": 1820,
        "wires": []
    },
    {
        "id": "fd07587bac59ef9a",
        "type": "link in",
        "z": "7a0f044da59e2d1a",
        "name": "focusnumber",
        "links": [
            "2526dc3c05093f76",
            "dee45667d58ddcde",
            "9d1c848e36ad37c5"
        ],
        "x": 255,
        "y": 1980,
        "wires": [
            [
                "6230a0ee387c6e9e",
                "5ec9d2b6913c6028"
            ]
        ]
    },
    {
        "id": "2526dc3c05093f76",
        "type": "link out",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "mode": "link",
        "links": [
            "fd07587bac59ef9a",
            "0d0b40c5749de2c2",
            "149e2e46b9623a2d"
        ],
        "x": 915,
        "y": 1780,
        "wires": []
    },
    {
        "id": "b69f321c7f5910fc",
        "type": "ui_switch",
        "z": "7a0f044da59e2d1a",
        "name": "Stack",
        "label": "",
        "tooltip": "",
        "group": "90223f7ddc082321",
        "order": 6,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 370,
        "y": 1820,
        "wires": [
            [
                "1728d68587521efe"
            ]
        ]
    },
    {
        "id": "e90f4c2c8cdfb90b",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "enable",
        "func": "msg.payload = false\nif (msg.enabled == false){\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1780,
        "wires": [
            [
                "f4e3dd4e49cf9437",
                "3d22fa469015b48b",
                "2c778df57ad95032",
                "468da69d83bceb37"
            ]
        ]
    },
    {
        "id": "1728d68587521efe",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "enable",
        "func": "file = 'cam_STmode'\nlet fs = global.get('fs');\nfilepath = '/home/pi/OpenScan/settings/';\ncontent = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n});\n\nmsg.enabled = true\nglobal.set('ST',msg.payload)\nif (msg.payload == false){\n    global.set('focus1',0)\n    global.set('focus2',0)\n    file = 'cam_focus1'\n    content = String(0)\n    fs.writeFile(filepath + file, content, err => {\n      if (err) {\n        return\n      }\n    });\n    file = 'cam_focus2'\n    fs.writeFile(filepath + file, content, err => {\n      if (err) {\n        return\n      }\n    });\n        \n    \n    msg.enabled = false\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1820,
        "wires": [
            [
                "f4e3dd4e49cf9437",
                "3d22fa469015b48b",
                "dee45667d58ddcde",
                "2c778df57ad95032"
            ]
        ]
    },
    {
        "id": "36951201db916323",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "enable",
        "func": "msg.payload = false\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1780,
        "wires": [
            [
                "b69f321c7f5910fc",
                "5bab2b7770a88fa7"
            ]
        ]
    },
    {
        "id": "6230a0ee387c6e9e",
        "type": "ui_text",
        "z": "7a0f044da59e2d1a",
        "group": "90223f7ddc082321",
        "order": 12,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Stacksize:",
        "format": "{{msg.stacksize}}",
        "layout": "row-center",
        "className": "",
        "x": 790,
        "y": 1980,
        "wires": []
    },
    {
        "id": "dee45667d58ddcde",
        "type": "link out",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "mode": "link",
        "links": [
            "fd07587bac59ef9a"
        ],
        "x": 615,
        "y": 1840,
        "wires": []
    },
    {
        "id": "cd5b97b73d2e2385",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "msg",
        "func": "msg.stacksize = msg.payload\nmsg.enabled = true\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1940,
        "wires": [
            [
                "6230a0ee387c6e9e",
                "b699c8cd0111b106",
                "9e5c2935fc2e454c"
            ]
        ]
    },
    {
        "id": "8ae159aed684dfc6",
        "type": "ui_slider",
        "z": "7a0f044da59e2d1a",
        "name": "stacksize",
        "label": " ",
        "tooltip": "",
        "group": "90223f7ddc082321",
        "order": 13,
        "width": 2,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "2",
        "max": "20",
        "step": "1",
        "className": "",
        "x": 480,
        "y": 1940,
        "wires": [
            [
                "cd5b97b73d2e2385"
            ]
        ]
    },
    {
        "id": "5bab2b7770a88fa7",
        "type": "ui_text",
        "z": "7a0f044da59e2d1a",
        "group": "90223f7ddc082321",
        "order": 5,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "St",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 370,
        "y": 1780,
        "wires": []
    },
    {
        "id": "02fcc48598d68866",
        "type": "ui_text",
        "z": "7a0f044da59e2d1a",
        "group": "90223f7ddc082321",
        "order": 3,
        "width": 1,
        "height": 1,
        "name": "MF",
        "label": "MF",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 230,
        "y": 1660,
        "wires": []
    },
    {
        "id": "b699c8cd0111b106",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "save",
        "func": "var file = 'cam_stacksize'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.stacksize)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "7b9a56d8743cb9b8",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "save",
        "func": "var file = 'cam_focus'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.focus)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "5ec9d2b6913c6028",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "loadI",
        "func": "var file = 'cam_stacksize'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1940,
        "wires": [
            [
                "8ae159aed684dfc6"
            ]
        ]
    },
    {
        "id": "2c778df57ad95032",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "enable",
        "func": "if (msg.enabled == true){\n    msg.enabled = false\n}\nelse{\n    msg.enabled = true\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1880,
        "wires": [
            [
                "9e5c2935fc2e454c"
            ]
        ]
    },
    {
        "id": "9e5c2935fc2e454c",
        "type": "link out",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "mode": "link",
        "links": [
            "0d0b40c5749de2c2",
            "149e2e46b9623a2d"
        ],
        "x": 755,
        "y": 1880,
        "wires": []
    },
    {
        "id": "f8d0b3a02faeb9a2",
        "type": "python3-function",
        "z": "7a0f044da59e2d1a",
        "name": "gphoto",
        "func": "\nfrom OpenScan import camera, save, load_str\n\nif load_str('camera') == 'gphoto':\n    if camera('/gphoto_init') == 200:\n        if camera('/gphoto_test') == 200:\n            save('status_internal_cam','--READY--')\n            return msg\n",
        "outputs": 1,
        "x": 490,
        "y": 100,
        "wires": [
            [
                "bec387c69a43b437"
            ]
        ]
    },
    {
        "id": "bec387c69a43b437",
        "type": "debug",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "1a4505e0b90bb552",
        "type": "link in",
        "z": "7a0f044da59e2d1a",
        "name": "enable projectname",
        "links": [
            "e669d0dcdba82672",
            "0b2c9cabd27fc211"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "7cc814b33e8c212a"
            ]
        ]
    },
    {
        "id": "7e7cc46daa2272f3",
        "type": "link in",
        "z": "7a0f044da59e2d1a",
        "name": "enable shutter",
        "links": [
            "753fe45ab2bb680a",
            "e669d0dcdba82672",
            "0b2c9cabd27fc211"
        ],
        "x": 55,
        "y": 580,
        "wires": [
            [
                "46f2d50a5bbfd030"
            ]
        ]
    },
    {
        "id": "687324fa9f880247",
        "type": "link in",
        "z": "7a0f044da59e2d1a",
        "name": "enable cropx",
        "links": [
            "e669d0dcdba82672",
            "0b2c9cabd27fc211"
        ],
        "x": 55,
        "y": 620,
        "wires": [
            [
                "9b6d8fadeb133222"
            ]
        ]
    },
    {
        "id": "e5f855e1e37c8b8f",
        "type": "link in",
        "z": "7a0f044da59e2d1a",
        "name": "enable cropy",
        "links": [
            "e669d0dcdba82672",
            "0b2c9cabd27fc211"
        ],
        "x": 55,
        "y": 660,
        "wires": [
            [
                "afc57863ab1df8cb"
            ]
        ]
    },
    {
        "id": "9fe1a03aa0afa40a",
        "type": "link in",
        "z": "7a0f044da59e2d1a",
        "name": "start camchk",
        "links": [
            "d172fc8f3a0e34a1"
        ],
        "x": 55,
        "y": 100,
        "wires": [
            [
                "fb4aeef4f55c26b5"
            ]
        ]
    },
    {
        "id": "2335052eee830ed4",
        "type": "ui_text",
        "z": "7a0f044da59e2d1a",
        "group": "7aaf184330605300",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Current Status:",
        "format": "<font color= {{msg.color}} > {{msg.payload}} </font>",
        "layout": "row-spread",
        "className": "",
        "x": 320,
        "y": 160,
        "wires": []
    },
    {
        "id": "5fb9731ad6c7967e",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "loadS",
        "func": "var file = 'status_internal_cam'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = String(data);\n\nif (data === 'no camera found'){\n    msg.color = 'red'\n}\n\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 160,
        "wires": [
            [
                "2335052eee830ed4",
                "e42f9ba8081b992f"
            ]
        ]
    },
    {
        "id": "811d465110ec2018",
        "type": "link in",
        "z": "7a0f044da59e2d1a",
        "name": "start status",
        "links": [
            "0e9aa1140f088664"
        ],
        "x": 55,
        "y": 160,
        "wires": [
            [
                "5fb9731ad6c7967e"
            ]
        ]
    },
    {
        "id": "58c405834963a4e7",
        "type": "link in",
        "z": "7a0f044da59e2d1a",
        "name": "start routine settings",
        "links": [
            "d172fc8f3a0e34a1"
        ],
        "x": 55,
        "y": 500,
        "wires": [
            [
                "7cc814b33e8c212a",
                "f8e45b20e288fa61",
                "46f2d50a5bbfd030",
                "9b6d8fadeb133222",
                "afc57863ab1df8cb",
                "feea4d55db9e3d50"
            ]
        ]
    },
    {
        "id": "8ca9290dc0dcd2a3",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "msg",
        "func": "global.set('flag_pw', true)\nglobal.set('flag', true)\nmsg.enabled = true\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1100,
        "wires": [
            [
                "c975d32dd9fc2e8b"
            ]
        ]
    },
    {
        "id": "e78ef27c19300a7b",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "disable",
        "func": "msg.enabled = false\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1060,
        "wires": [
            [
                "45f5d95607277734"
            ]
        ]
    },
    {
        "id": "4fdaf024a3f284d1",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "msg",
        "func": "msg.enabled = true\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "49b815f01ea2f75d",
        "type": "ui_switch",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "label": "Ringlight test",
        "tooltip": "",
        "group": "7aaf184330605300",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 770,
        "y": 260,
        "wires": [
            [
                "9bc3b9039a13a4db"
            ]
        ]
    },
    {
        "id": "e42f9ba8081b992f",
        "type": "switch",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "--READY--",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "--READY--",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 290,
        "y": 200,
        "wires": [
            [
                "cd49dbe0ef47d533"
            ],
            [
                "d8dde19f1e0ee0c0",
                "109415bd20f994b4"
            ]
        ]
    },
    {
        "id": "d8dde19f1e0ee0c0",
        "type": "change",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ringlight",
                "pt": "flow",
                "to": "ringlightSlider",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "b51d569f7f1c5e22",
        "type": "change",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ringlight",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 980,
        "wires": [
            [
                "29bf13593c740e88"
            ]
        ]
    },
    {
        "id": "0a72dbebd0fa3914",
        "type": "change",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ringlightSlider",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "7654a65c75515168",
        "type": "link in",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "links": [
            "0e9aa1140f088664"
        ],
        "x": 55,
        "y": 860,
        "wires": [
            [
                "b51d569f7f1c5e22",
                "062fe11ebf0c59ea"
            ]
        ]
    },
    {
        "id": "cd49dbe0ef47d533",
        "type": "change",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ringlight",
                "pt": "flow",
                "to": "ringlightSliderTest",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "9bc3b9039a13a4db",
        "type": "change",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ringlightSwitch",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "062fe11ebf0c59ea",
        "type": "switch",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "property": "ringlightSwitch",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 190,
        "y": 900,
        "wires": [
            [
                "198a59751aaecaf0"
            ],
            [
                "c6fa92b866a0c6e8"
            ]
        ]
    },
    {
        "id": "198a59751aaecaf0",
        "type": "change",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ringlightSliderTest",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "c6fa92b866a0c6e8",
        "type": "change",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ringlightSliderTest",
                "pt": "flow",
                "to": "ringlightSlider",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "109415bd20f994b4",
        "type": "function",
        "z": "7a0f044da59e2d1a",
        "name": "",
        "func": "msg.payload = 0\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 260,
        "wires": [
            [
                "49b815f01ea2f75d"
            ]
        ]
    },
    {
        "id": "2eac406991180d8f",
        "type": "python3-function",
        "z": "81e8a02fa43b7711",
        "name": "get dirs",
        "func": "from glob import glob\nimport os\nfrom zipfile import ZipFile\n\ndef set_stats(stat):\n    try:\n        with open(directory+set[:-4]+\"/\"+stat,\"r\") as file:\n            stat=file.read()\n    except:\n        stat=\"\"\n    return stat\n\ntable=[]\ndirectory=\"/home/pi/OpenScan/scans/\"\n\nfor d in glob(directory+\"*.zip\"):\n    set=os.path.basename(d)\n\n    try:\n        with ZipFile(d, 'r') as f:\n            photos = len(f.namelist())\n\n        size = float(int(float(os.path.getsize(d))/100000))/10\n        size_full= os.path.getsize(d)\n        status=set_stats(\"status\")\n        expiration=set_stats(\"expiration\")\n        download=set_stats(\"download\")\n    \n        if len(download)!=0:\n            table.append({\n                \"Set\":set,\n                \"Photos\":photos,\n                \"Size\":str(size)+\"MB\",\n                \"Date\":set[:16],\n                \"Name\":(set[20:-4]),\n                \"Status\":status,\n                \"Download\":\"<a href=\"+download+\">RESULT</a>\",\n                \"Size_full\":size_full,\n    \n                })\n        else:\n            table.append({\n                \"Set\":set,\n                \"Photos\":photos,\n                \"Size\":str(size)+\"MB\",\n                \"Date\":set[:16],\n                \"Name\":(set[20:-4]),\n                \"Status\":status,\n                \"Size_full\":size_full,\n    \n                })\n    except:\n        pass\n\nmsg['payload']=table\nmsg['topic']=\"\"\nreturn msg",
        "outputs": 1,
        "x": 480,
        "y": 180,
        "wires": [
            [
                "db169ace875c48a2"
            ]
        ]
    },
    {
        "id": "49a14794d31390a4",
        "type": "link in",
        "z": "81e8a02fa43b7711",
        "name": "filelist",
        "links": [
            "d172fc8f3a0e34a1",
            "7c992fe0309f9693",
            "6ba1a88ce1ee7633",
            "c975d32dd9fc2e8b"
        ],
        "x": 355,
        "y": 140,
        "wires": [
            [
                "2eac406991180d8f"
            ]
        ]
    },
    {
        "id": "db169ace875c48a2",
        "type": "ui_table",
        "z": "81e8a02fa43b7711",
        "group": "b5fdd57b.15eda8",
        "name": "",
        "order": 1,
        "width": 13,
        "height": 7,
        "columns": [
            {
                "field": "Date",
                "title": "Date",
                "width": "150",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Name",
                "title": "Name",
                "width": "210",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Photos",
                "title": "Photos",
                "width": "80",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Size",
                "title": "Size",
                "width": "80",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Status",
                "title": "Status",
                "width": "140",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 610,
        "y": 180,
        "wires": [
            [
                "afb241bebcb6ef7c",
                "361918fb0d2b2403",
                "8a1073ba758f2eba",
                "7fc2476725a0cc9a"
            ]
        ]
    },
    {
        "id": "504d4c1e428b6f9f",
        "type": "ui_text",
        "z": "81e8a02fa43b7711",
        "group": "db43d646.2074c8",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "Status",
        "label": "Status",
        "format": "{{msg.status}}",
        "layout": "row-spread",
        "className": "",
        "x": 250,
        "y": 60,
        "wires": []
    },
    {
        "id": "a57969efaf551570",
        "type": "python3-function",
        "z": "81e8a02fa43b7711",
        "name": "upload",
        "func": "import os\nfrom OpenScan import OpenScanCloud, load_str, load_int, save\n\nbasedir = '/home/pi/OpenScan/'\n\nif load_str(\"feedback_terms\")==\"False\":\n    msg['payload']=\"Please read and agree to the Terms of Use (See Settings Menu) before you can use the OpenScanCloud\"\n    msg['topic'] = 'OpenScanCloud - Terms of Use'\n    return None,msg\n\nmsg = msg['payload']\n\ndef upload(filelist, ulinks):\n    i = 0\n    for file in filelist:\n        link = ulinks[i]\n        save('status_cloud', 'uploading ' + str(i+1) + '/' + str(len(filelist)))\n        cmd = 'curl -# -X POST ' + link + ' --header Content-Type:application/octet-stream --data-binary @\"' + file + '\" 2>&1 | tee /home/pi/OpenScan/settings/status_uploadprogress'\n        i = i+1\n        os.system(cmd)\n\n########\nif not os.path.isfile(basedir + 'settings/token'):\n    msg['flag'] = True\n    save('status_cloud', 'please enter token first')\n    return msg\nwith open(basedir + 'settings/token', 'r') as file:\n    token = file.read().strip('\\n')\n\n########\nr = OpenScanCloud('getTokenInfo', {'token':token})\n\nif r.status_code == 400:\n    msg['topic'] = 'Invalid Token'\n    msg['payload'] = 'Please enter a valid token (settings --> OpenScanCloud)'\n    save('status_cloud', 'invalid/missing token')\n    return None,msg\nelif r.status_code == 200:\n    pass\nelse:\n    msg['topic'] = 'Connection Error'\n    msg['payload'] = 'Not able to establish a connection to OpenScanCloud.'\n    return None,msg\n\nmsg1 = r.json()\n\n########\nif msg['Photos'] > msg1['limit_photos'] or msg['Size_full'] > msg1['limit_filesize']:\n    msg['flag'] = True\n    save('status_cloud', 'limit(s) exceeded')\n    return msg\n\n########\ntemp =  OpenScanCloud('getProjectInfo', {'token':token, 'project':msg['Set']})\nif temp.status_code not in (200,401):\n    msg['topic'] = 'Connection to OpenScanCloud failed'\n    msg['payload'] = 'Please check your internet connection'\n    return None,msg\n\nif temp.status_code != 401:\n    temp = temp.json()\n    if 'status' in temp:\n        if temp['status'] != 'created':\n            save('status_cloud','already exists')\n            with open(basedir + 'scans/' + msg['Set'][:-4] + '/status', 'w') as file:\n                file.write(temp['status'])\n            return msg\n#####\n\nmsg2={}\nmsg2['token'] = token\nmsg2['parts'] = 1\nmsg['partslist']=[]\n\n#######\nsize_to_split = load_int('osc_splitsize')\n\nif msg['Size_full'] > size_to_split:\n    tempdir = basedir + 'tmp/split/'\n    if os.path.isdir(tempdir):\n        os.system('rm -r ' + tempdir)\n    os.mkdir(tempdir)\n    save('status_cloud', 'zipping files, please wait ...')\n    cmd = 'split -b ' + str(size_to_split) + ' ' + basedir + 'scans/' + msg['Set'] + ' ' + tempdir + msg['Set']\n    os.system(cmd)\n    save('status_cloud', 'zip done')\n    list = os.listdir(tempdir)\n    for l in list:\n        msg['partslist'].append(tempdir + l)\n        msg['partslist'].sort()\n    msg2['parts']=len(msg['partslist'])\nelse:\n    msg['partslist'] = [basedir + 'scans/' +msg['Set']]\n\n#######\nmsg2['photos'] = msg['Photos']\nmsg2['filesize'] = msg['Size_full']\nmsg2['project'] = msg['Set']\n\nr = OpenScanCloud('createProject', msg2)\nif r.status_code != 200:\n    msg['topic'] = 'Connection to OpenScanCloud failed'\n    msg['payload'] = 'Please check your internet connection'\n    return None,msg\n\nmsg1 = r.json()\n\nif not os.path.isdir(basedir+ 'scans/' + msg['Set'][:-4]):\n    os.mkdir(basedir+ 'scans/' + msg['Set'][:-4])\nwith open(basedir+ 'scans/' + msg['Set'][:-4]+'/status', 'w+') as file:\n    file.write('prepared')\n\nsave('status_cloud', 'uploading')\nupload(msg['partslist'], msg1['ulink'])\n\nr = OpenScanCloud('startProject', msg2)\nif r.status_code != 200:\n    msg['topic'] = 'Upload failed'\n    msg['payload'] = 'please try again'\n    save('status_cloud', 'upload failed')\n    return None,msg\n\nsave('status_cloud', 'uploaded')\n\nsave('status_cloud', 'project started')\n\ntry:\n    os.system('rm -r ' + tempdir)\nexcept:\n    pass\n\nreturn msg",
        "outputs": 2,
        "x": 530,
        "y": 420,
        "wires": [
            [
                "95b7d47b1cb41f9d"
            ],
            [
                "12a05bd008b23664",
                "95b7d47b1cb41f9d"
            ]
        ]
    },
    {
        "id": "afb241bebcb6ef7c",
        "type": "change",
        "z": "81e8a02fa43b7711",
        "name": "set",
        "rules": [
            {
                "t": "set",
                "p": "set",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 180,
        "wires": [
            [
                "e72934e66d3271ec"
            ]
        ]
    },
    {
        "id": "8a1073ba758f2eba",
        "type": "ui_text",
        "z": "81e8a02fa43b7711",
        "group": "db43d646.2074c8",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "Set",
        "label": "Set:",
        "format": "{{msg.payload.Name}}",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 220,
        "wires": []
    },
    {
        "id": "95b7d47b1cb41f9d",
        "type": "change",
        "z": "81e8a02fa43b7711",
        "name": "flag.true",
        "rules": [
            {
                "t": "set",
                "p": "flag",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 420,
        "wires": [
            [
                "a28a35861fd15e47"
            ]
        ]
    },
    {
        "id": "a6d452a8aabe998e",
        "type": "function",
        "z": "81e8a02fa43b7711",
        "name": "enable",
        "func": "if (global.get('flag') === false){\n    msg.enabled = false\n    msg.color=\"white\"\n}\nelse{\n    msg.enabled = true\n    msg.color=\"red\"\n    \n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 340,
        "wires": [
            [
                "c22073eb524f0606",
                "5d9934b2458a0320",
                "2a72f899e5b31882",
                "d9deb3aa4266c8cd",
                "ec1ac82b8453231d"
            ]
        ]
    },
    {
        "id": "3f1e249eb22ee587",
        "type": "change",
        "z": "81e8a02fa43b7711",
        "name": "flag.false",
        "rules": [
            {
                "t": "set",
                "p": "flag",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 460,
        "wires": [
            [
                "f04f3808ca3fd404"
            ]
        ]
    },
    {
        "id": "46711cf307088fa2",
        "type": "link in",
        "z": "81e8a02fa43b7711",
        "name": "enable cloud",
        "links": [
            "361918fb0d2b2403",
            "a28a35861fd15e47",
            "45f5d95607277734",
            "f04f3808ca3fd404",
            "c975d32dd9fc2e8b"
        ],
        "x": 35,
        "y": 340,
        "wires": [
            [
                "a6d452a8aabe998e"
            ]
        ]
    },
    {
        "id": "9af384bc8eec39a8",
        "type": "change",
        "z": "81e8a02fa43b7711",
        "name": "set",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "set",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 420,
        "wires": [
            [
                "a57969efaf551570"
            ]
        ]
    },
    {
        "id": "361918fb0d2b2403",
        "type": "link out",
        "z": "81e8a02fa43b7711",
        "name": "",
        "links": [
            "46711cf307088fa2",
            "87574a42938afec4"
        ],
        "x": 715,
        "y": 140,
        "wires": []
    },
    {
        "id": "f04f3808ca3fd404",
        "type": "link out",
        "z": "81e8a02fa43b7711",
        "name": "",
        "mode": "link",
        "links": [
            "0d0b40c5749de2c2",
            "46711cf307088fa2",
            "149e2e46b9623a2d"
        ],
        "x": 515,
        "y": 460,
        "wires": []
    },
    {
        "id": "a28a35861fd15e47",
        "type": "link out",
        "z": "81e8a02fa43b7711",
        "name": "",
        "mode": "link",
        "links": [
            "0d0b40c5749de2c2",
            "46711cf307088fa2",
            "149e2e46b9623a2d"
        ],
        "x": 875,
        "y": 420,
        "wires": []
    },
    {
        "id": "fbe461f6693feef0",
        "type": "ui_toast",
        "z": "81e8a02fa43b7711",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "No",
        "cancel": "Yes",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 550,
        "y": 380,
        "wires": [
            [
                "6c615634fa0514cb"
            ]
        ]
    },
    {
        "id": "6c615634fa0514cb",
        "type": "python3-function",
        "z": "81e8a02fa43b7711",
        "name": "del",
        "func": "import os\nimport shutil\n\ndir=\"/home/pi/OpenScan/scans/\"\n\nif msg['payload']==\"No\":\n    return\n\"\"\"\ntry:\n    node.warn('\"'+dir+msg['Date']+\"-\"+msg['Set']+'.zip\"')\n    os.remove('\"'+dir+msg['Date']+\"-\"+msg['Set']+'.zip\"')\n    node.warn(\"os.remove done\")\n    node.warn(dir+msg['Date']+\"-\"+msg['Set'])\n    shutil.rmtree(dir+msg['Date']+\"-\"+msg['Set'])\nexcept:\n    node.warn(\"failed\")\n    pass\n    \"\"\"\n\nfor i in os.listdir(dir):\n    if msg['Date'] in i and msg['Set'] in i:\n        if os.path.isdir(dir + i):\n            shutil.rmtree(dir + i)\n        else:\n            os.remove(dir + i)\nreturn msg",
        "outputs": 1,
        "x": 690,
        "y": 380,
        "wires": [
            [
                "7c992fe0309f9693"
            ]
        ]
    },
    {
        "id": "7c992fe0309f9693",
        "type": "link out",
        "z": "81e8a02fa43b7711",
        "name": "",
        "links": [
            "49a14794d31390a4",
            "c20357dd.374108",
            "e9aab326.a6896",
            "edd22cc7.befe1",
            "19b81967.49db87",
            "8ee1b3bb.7b0b3",
            "d5246b3cc796afc6"
        ],
        "x": 775,
        "y": 360,
        "wires": []
    },
    {
        "id": "c22073eb524f0606",
        "type": "link out",
        "z": "81e8a02fa43b7711",
        "name": "",
        "mode": "link",
        "links": [
            "809c9427e14e2448",
            "1ac7491049f8bd85"
        ],
        "x": 235,
        "y": 460,
        "wires": []
    },
    {
        "id": "8f987e9177f471ae",
        "type": "python3-function",
        "z": "81e8a02fa43b7711",
        "name": "refresh",
        "func": "from time import sleep\nimport os\nfrom OpenScan import load_str, OpenScanCloud, save, load_bool\n\nbasepath = '/home/pi/OpenScan/scans/'\n\nif load_bool(\"terms\")==False:\n    msg['payload']=\"Please read and agree to the Terms of Use (See Settings Menu) before you can use the OpenScanCloud\"\n    msg['topic']='OpenScanCloud - Terms of Use'\n    return None,msg\n\nsave('status_cloud','refreshing')\ntoken = load_str('token')\n\ntest = OpenScanCloud('getTokenInfo',{'token':token})\nif test.status_code == 400:\n    msg['topic'] = 'Invalid Token'\n    msg['payload'] = 'Please enter a valid token (settings --> OpenScanCloud)'\n    return None,msg\nelif test.status_code == 200:\n    pass\nelse:\n    msg['topic'] = 'Connection Error'\n    msg['payload'] = 'Not able to establish a connection to OpenScanCloud.'\n    return None,msg\n\nstats = test.json()\nfor i in stats:\n    save('osc_'+i, stats[i])\n    pass\n\nmsg={}\nprojects = []\nfor i in os.listdir(basepath):\n    if os.path.isdir(basepath + i):\n        if os.path.isfile(basepath + i + '/status'):\n            with open(basepath + i + '/status', 'r') as file:\n                status = file.read().strip('\\n')\n                if status in ['expired', 'processing done', 'processing failed']:\n                    continue\n        projects.append(i)\nnode.warn(projects)\n\nfor p in projects:\n    r = OpenScanCloud('getProjectInfo',{'token':token, 'project':p+'.zip'})\n    if r.status_code == 200:\n        answer = r.json()\n        if answer == {}:\n            os.system('sudo rm -r ' + basepath + p)\n        else:\n            with open(basepath + p + '/status', 'w+') as file:\n                file.write(answer['status'])\n            with open(basepath + p + '/download', 'w+') as file:\n                file.write(answer['dlink'])\n\nmsg['list'] = projects\nsleep(0.5)\nsave('status_cloud','ready')\nreturn msg, None\n",
        "outputs": 2,
        "x": 320,
        "y": 180,
        "wires": [
            [
                "2eac406991180d8f",
                "099cec67edd5de45"
            ],
            [
                "526693aa09fcd211"
            ]
        ]
    },
    {
        "id": "5116672638221bb3",
        "type": "python3-function",
        "z": "81e8a02fa43b7711",
        "name": "limit :)",
        "func": "from time import sleep\n\nmsg2={}\nmsg2['enabled'] = True\n\nmsg['enabled'] = False\nnode.send(msg)\n\nwait = 15\n\nfor i in range (wait):\n    msg['text'] = ' ('+ str(wait - i)+')'\n    node.send(msg)\n\nmsg['enabled'] = True\nmsg['text']=\"\"\n\n\nreturn msg",
        "outputs": 1,
        "x": 90,
        "y": 220,
        "wires": [
            [
                "f4151926578b7316"
            ]
        ]
    },
    {
        "id": "f4151926578b7316",
        "type": "delay",
        "z": "81e8a02fa43b7711",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 230,
        "y": 220,
        "wires": [
            [
                "49c48943babf3549"
            ]
        ]
    },
    {
        "id": "3442948f236c8ed4",
        "type": "ui_toast",
        "z": "81e8a02fa43b7711",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "No",
        "cancel": "Yes",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 550,
        "y": 340,
        "wires": [
            [
                "ad4a13d8bf642dbf"
            ]
        ]
    },
    {
        "id": "1ac7491049f8bd85",
        "type": "link in",
        "z": "81e8a02fa43b7711",
        "name": "",
        "links": [
            "c22073eb524f0606",
            "6df7cee1aba1e4b2"
        ],
        "x": 35,
        "y": 180,
        "wires": [
            [
                "49c48943babf3549"
            ]
        ]
    },
    {
        "id": "12a05bd008b23664",
        "type": "ui_toast",
        "z": "81e8a02fa43b7711",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Terms",
        "x": 770,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "526693aa09fcd211",
        "type": "ui_toast",
        "z": "81e8a02fa43b7711",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Terms",
        "x": 470,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "ad4a13d8bf642dbf",
        "type": "python3-function",
        "z": "81e8a02fa43b7711",
        "name": "del",
        "func": "import os\nimport shutil\n\ndir=\"/home/pi/OpenScan/scans/\"\n\nif msg['payload']==\"No\":\n    return\n\nfor i in os.listdir(dir):\n    if os.path.isdir(dir + i):\n        shutil.rmtree(dir + i)\n    else:\n        os.remove(dir + i)\n\nreturn msg",
        "outputs": 1,
        "x": 690,
        "y": 340,
        "wires": [
            [
                "7c992fe0309f9693"
            ]
        ]
    },
    {
        "id": "7ca1ca34cde425e0",
        "type": "function",
        "z": "81e8a02fa43b7711",
        "name": "read",
        "func": "var file = 'status_cloud'\nvar file2 = 'status_uploadprogress'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\ndata = fs.readFileSync(filepath+file, 'utf8');\nstatus = String(data);\n\nif (status.substr(0,9) === 'uploading'){\n    data = fs.readFileSync(filepath+file2, 'utf8');\n    progress = data.substr(data.length - 6)\n        if (progress.substr(progress.length -1) === '%'){\n            status = status + ' (' + progress + ')'\n        }\n}\nmsg.status = status\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 60,
        "wires": [
            [
                "504d4c1e428b6f9f"
            ]
        ]
    },
    {
        "id": "3d45b2263119556b",
        "type": "function",
        "z": "81e8a02fa43b7711",
        "name": "msg",
        "func": "msg.payload = 'Are you sure to delete ALL saved image sets? This can not be undone!'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 340,
        "wires": [
            [
                "3442948f236c8ed4"
            ]
        ]
    },
    {
        "id": "efc382dacc7723fc",
        "type": "function",
        "z": "81e8a02fa43b7711",
        "name": "msg",
        "func": "msg.Set=global.get('set').Name\nmsg.Date=global.get('set').Date\nmsg.payload = 'Are you sure to delete and ALL associated files: ' + msg.Set + '?'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 380,
        "wires": [
            [
                "fbe461f6693feef0"
            ]
        ]
    },
    {
        "id": "3def2aa77ca84ce4",
        "type": "link in",
        "z": "81e8a02fa43b7711",
        "name": "",
        "links": [
            "0e9aa1140f088664"
        ],
        "x": 35,
        "y": 60,
        "wires": [
            [
                "7ca1ca34cde425e0"
            ]
        ]
    },
    {
        "id": "5a5afbfb2b6310b2",
        "type": "ui_template",
        "z": "81e8a02fa43b7711",
        "group": "db43d646.2074c8",
        "name": "Download",
        "order": 5,
        "width": 3,
        "height": 1,
        "format": "<md-button style=\"background-color:default ; color:default;width:100%; height:100%;\"   target=\"_blank\" ng-href={{msg.download}}>\n <div class=\"center\" style=\"position: relative; top: 30%;\">Download\n</div></md-button>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 900,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "7fc2476725a0cc9a",
        "type": "function",
        "z": "81e8a02fa43b7711",
        "name": "msg",
        "func": "msg.download = '/scans/' + String(msg.payload.Set)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 260,
        "wires": [
            [
                "5a5afbfb2b6310b2"
            ]
        ]
    },
    {
        "id": "6f628da6aeab7a82",
        "type": "link in",
        "z": "81e8a02fa43b7711",
        "name": "",
        "links": [
            "d172fc8f3a0e34a1"
        ],
        "x": 655,
        "y": 220,
        "wires": [
            [
                "8a1073ba758f2eba"
            ]
        ]
    },
    {
        "id": "5d9934b2458a0320",
        "type": "ui_template",
        "z": "81e8a02fa43b7711",
        "group": "db43d646.2074c8",
        "name": "upload2",
        "order": 6,
        "width": 3,
        "height": 1,
        "format": "<md-button class=\"button save\" style=\"padding:0 0, margin:0 ;width:100%; height:100%;\"ng-click=\"send({payload:'1'})\">upload</md-button></md-button>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 280,
        "y": 420,
        "wires": [
            [
                "9af384bc8eec39a8",
                "3f1e249eb22ee587"
            ]
        ]
    },
    {
        "id": "49c48943babf3549",
        "type": "ui_template",
        "z": "81e8a02fa43b7711",
        "group": "db43d646.2074c8",
        "name": "refresh",
        "order": 1,
        "width": 3,
        "height": 1,
        "format": "<md-button class=\"button save\" style=\"padding:0 0, margin:0 ;width:100%; height:100%;\"ng-click=\"send({payload:'1'})\">refresh{{msg.text}}</md-button></md-button>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "5116672638221bb3",
                "8f987e9177f471ae"
            ]
        ]
    },
    {
        "id": "2a72f899e5b31882",
        "type": "ui_template",
        "z": "81e8a02fa43b7711",
        "group": "db43d646.2074c8",
        "name": "del set",
        "order": 8,
        "width": 2,
        "height": 1,
        "format": "<md-button class=\"button save\" style=\"padding:0 0, margin:0 ;color:red; width:100%; height:100%;\"ng-click=\"send({payload:'1'})\">delete set</md-button></md-button>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 270,
        "y": 380,
        "wires": [
            [
                "efc382dacc7723fc"
            ]
        ]
    },
    {
        "id": "d9deb3aa4266c8cd",
        "type": "ui_template",
        "z": "81e8a02fa43b7711",
        "group": "db43d646.2074c8",
        "name": "del ",
        "order": 9,
        "width": 2,
        "height": 1,
        "format": "<md-button class=\"button save\" style=\"color:red; padding:0 0; margin:0 ;width:100%; height:100%;\"ng-click=\"send({payload:'1'})\">delete all</md-button></md-button>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 270,
        "y": 340,
        "wires": [
            [
                "3d45b2263119556b"
            ]
        ]
    },
    {
        "id": "ec1ac82b8453231d",
        "type": "ui_template",
        "z": "81e8a02fa43b7711",
        "group": "db43d646.2074c8",
        "name": "combine",
        "order": 7,
        "width": 2,
        "height": 1,
        "format": "<md-button class=\"button save\" style=\"color:red; padding:0 0; margin:0 ;width:100%; height:100%;\"ng-click=\"send({payload:'1'})\">combine</md-button></md-button>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 280,
        "y": 500,
        "wires": [
            [
                "c6439cf791ce6f4d"
            ]
        ]
    },
    {
        "id": "c2caf1c53a49456a",
        "type": "function",
        "z": "81e8a02fa43b7711",
        "name": "combine",
        "func": "combine = global.get('combine')\ncombine_set = global.get('set').Set\n\nif (combine === true && global.get('combine_set') !== combine_set){\n    msg.set1 = global.get('combine_set')\n    msg.set2 = combine_set\n    global.set('combine', false)\n    msg.topic = 'Combine the following two sets:'\n    msg.payload = msg.set1 + '<br>' + msg.set2 + '<br>FILES WILL BE MERGED INTO ON FILE!'\n    return msg\n}\nglobal.set('combine_set' , combine_set)\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 540,
        "wires": [
            [
                "c32e8520487df899"
            ]
        ]
    },
    {
        "id": "c6439cf791ce6f4d",
        "type": "function",
        "z": "81e8a02fa43b7711",
        "name": "combine",
        "func": "global.set('combine', true)\ncombine_set = global.get('set').Set\nmsg.topic = 'Merge two sets into one (can not be undone)!'\nmsg.payload = combine_set\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "479bc118c681b8f6",
        "type": "python3-function",
        "z": "81e8a02fa43b7711",
        "name": "combine",
        "func": "from os.path import getsize\nfrom shutil import copy\nfrom os import rename, remove\nimport zipfile as z\nfrom OpenScan import save\n\nfrom time import sleep\n\nif msg['payload'] != 'OK':\n    return\n\nbasepath = '/home/pi/OpenScan/scans/'\ntmp1 = basepath + msg['set1']\ntmp2 = basepath + msg['set2']\n\nif getsize(tmp1) > getsize(tmp2):\n    set1 = tmp1\n    set2 = tmp2\nelse:\n    set1 = tmp2\n    set2 = tmp1\n\n#set 1 is larger and to be merged into\n\nzips = [set1, set2]\n\nwith z.ZipFile(set1, 'a') as z1:\n    z2 = z.ZipFile(set2, 'r')\n    i = 0\n    for n in z2.namelist():\n        i += 1\n        n2 = n\n        save('status_cloud','writing ' + str(i) + '/' + str(len(z2.namelist())))\n        while 'X'+n in z1.namelist():\n            n = 'X' + n\n        z1.writestr('X'+n, z2.open(n2).read())\nsave('status_cloud','ready')\n\nos.rename(set1, set1[:-4] + 'X.zip')\n\nreturn msg",
        "outputs": 1,
        "x": 560,
        "y": 540,
        "wires": [
            [
                "6ba1a88ce1ee7633"
            ]
        ]
    },
    {
        "id": "6ba1a88ce1ee7633",
        "type": "link out",
        "z": "81e8a02fa43b7711",
        "name": "",
        "mode": "link",
        "links": [
            "809c9427e14e2448",
            "49a14794d31390a4"
        ],
        "x": 655,
        "y": 540,
        "wires": []
    },
    {
        "id": "c32e8520487df899",
        "type": "ui_toast",
        "z": "81e8a02fa43b7711",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "Combine",
        "x": 420,
        "y": 540,
        "wires": [
            [
                "479bc118c681b8f6"
            ]
        ]
    },
    {
        "id": "e72934e66d3271ec",
        "type": "link out",
        "z": "81e8a02fa43b7711",
        "name": "combine",
        "mode": "link",
        "links": [
            "42c96356f9bd4c2f"
        ],
        "x": 835,
        "y": 180,
        "wires": []
    },
    {
        "id": "42c96356f9bd4c2f",
        "type": "link in",
        "z": "81e8a02fa43b7711",
        "name": "combine",
        "links": [
            "e72934e66d3271ec"
        ],
        "x": 175,
        "y": 540,
        "wires": [
            [
                "c2caf1c53a49456a"
            ]
        ]
    },
    {
        "id": "099cec67edd5de45",
        "type": "link out",
        "z": "81e8a02fa43b7711",
        "name": "",
        "mode": "link",
        "links": [
            "f4b7297e17d0d220"
        ],
        "x": 435,
        "y": 140,
        "wires": []
    },
    {
        "id": "e9b4a07c9064e912",
        "type": "ui_switch",
        "z": "cf7a4625417bfc11",
        "name": "",
        "label": "SSH",
        "tooltip": "",
        "group": "4fe6b4c0ade0938a",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 340,
        "wires": [
            [
                "dedd32ca0ce94593"
            ]
        ]
    },
    {
        "id": "96880be90c95c772",
        "type": "ui_switch",
        "z": "cf7a4625417bfc11",
        "name": "",
        "label": "Samba",
        "tooltip": "",
        "group": "4fe6b4c0ade0938a",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "test2",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 400,
        "y": 380,
        "wires": [
            [
                "4c07ea875868bf45"
            ]
        ]
    },
    {
        "id": "dedd32ca0ce94593",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "ssh",
        "func": "from OpenScan import load_bool, save\n\nstate = msg['payload']\n\nif state != load_bool('ssh'):\n    save('ssh', state)\n\nif state == True:\n    os.system('sudo /etc/init.d/ssh start')\nelse:\n    os.system('sudo /etc/init.d/ssh stop')",
        "outputs": 1,
        "x": 530,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "9d7211b138d2d8e2",
        "type": "ui_button",
        "z": "cf7a4625417bfc11",
        "name": "",
        "group": "4fe6b4c0ade0938a",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Terms Of Use",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 300,
        "wires": [
            [
                "c236b1cea41ee98e"
            ]
        ]
    },
    {
        "id": "3af8b842055b3a20",
        "type": "ui_button",
        "z": "cf7a4625417bfc11",
        "name": "Network&Cloud",
        "group": "0fe66c9190b8a87c",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "transparent",
        "className": "",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 280,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "94191b467820dcc3",
        "type": "ui_toast",
        "z": "cf7a4625417bfc11",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Agree",
        "cancel": "Disagree",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 410,
        "y": 300,
        "wires": [
            [
                "e8b5f5515c034bad"
            ]
        ]
    },
    {
        "id": "63cda9febab11a88",
        "type": "ui_button",
        "z": "cf7a4625417bfc11",
        "name": "General",
        "group": "4fe6b4c0ade0938a",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "transparent",
        "className": "",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 260,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "3525ca618aec7f84",
        "type": "ui_button",
        "z": "cf7a4625417bfc11",
        "name": "Pinout",
        "group": "644b3bcc903d46ca",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "transparent",
        "className": "",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "4c07ea875868bf45",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "smb",
        "func": "from OpenScan import load_bool, save\n\nstate = msg['payload']\n\nif state != load_bool('smb'):\n    save('smb', state)\nif state == True:\n    os.system('sudo /etc/init.d/smbd start')\nelse:\n    os.system('sudo /etc/init.d/smbd stop')\n\n\n",
        "outputs": 1,
        "x": 530,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "062e12bab00938ed",
        "type": "ui_button",
        "z": "cf7a4625417bfc11",
        "name": "reboot",
        "group": "4fe6b4c0ade0938a",
        "order": 13,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "restart",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-repeat",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 720,
        "wires": [
            [
                "102729ca174de821",
                "f9282909f67def49"
            ]
        ]
    },
    {
        "id": "7949a3927819c709",
        "type": "ui_button",
        "z": "cf7a4625417bfc11",
        "name": "shutdown",
        "group": "4fe6b4c0ade0938a",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "shutdown",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-power-off",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 800,
        "wires": [
            [
                "102729ca174de821",
                "a2747f12e5af77f4"
            ]
        ]
    },
    {
        "id": "102729ca174de821",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "blink Light1",
        "func": "import RPi.GPIO as GPIO\nGPIO.setwarnings(False)\nGPIO.cleanup()\nfrom OpenScan import ringlight\nfrom time import sleep\n\ndelay = 0.1\nringlight(2,False)\n\nfor i in range (5):\n    ringlight(1,True)\n    sleep(delay)\n    ringlight(1,False)\n    sleep(delay)",
        "outputs": 1,
        "x": 290,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "f9282909f67def49",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "reboot",
        "func": "import os\nfrom time import sleep\nsleep(1.5)\nimport RPi.GPIO as GPIO\nGPIO.setwarnings(False)\nGPIO.cleanup()\nos.system('sudo reboot')\n",
        "outputs": 1,
        "x": 270,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "a2747f12e5af77f4",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "shutdown",
        "func": "import os\nfrom time import sleep\nsleep(1.5)\nimport RPi.GPIO as GPIO\nGPIO.setwarnings(False)\nGPIO.cleanup()\nos.system('sudo shutdown -h now')",
        "outputs": 1,
        "x": 280,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "2db873e583f85557",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "4fe6b4c0ade0938a",
        "order": 8,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Model",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 670,
        "y": 600,
        "wires": []
    },
    {
        "id": "94b5b73389566b80",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "4fe6b4c0ade0938a",
        "order": 10,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Camera",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 840,
        "y": 420,
        "wires": []
    },
    {
        "id": "9b557f82cccc17b7",
        "type": "ui_dropdown",
        "z": "cf7a4625417bfc11",
        "name": "model",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "4fe6b4c0ade0938a",
        "order": 7,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Please Select",
                "value": "None",
                "type": "str"
            },
            {
                "label": "OpenScan Mini",
                "value": "OSMini",
                "type": "str"
            },
            {
                "label": "OpenScan Classic",
                "value": "OSClassic",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 390,
        "y": 600,
        "wires": [
            [
                "fede9d0f4eb8d816"
            ]
        ]
    },
    {
        "id": "e3efa884c5bf7dc6",
        "type": "ui_dropdown",
        "z": "cf7a4625417bfc11",
        "name": "Camera",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "4fe6b4c0ade0938a",
        "order": 9,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Pi Cam v1 - 5mp",
                "value": "ov5647",
                "type": "str"
            },
            {
                "label": "Pi Cam v2 - 8mp",
                "value": "imx219",
                "type": "str"
            },
            {
                "label": "Pi Cam HQ - 12.3mp",
                "value": "imx477",
                "type": "str"
            },
            {
                "label": "Arducam IMX519 - 16mp",
                "value": "imx519",
                "type": "str"
            },
            {
                "label": "IMX290 a",
                "value": "imx290a",
                "type": "str"
            },
            {
                "label": "IMX290 b",
                "value": "imx290b",
                "type": "str"
            },
            {
                "label": "IMX378",
                "value": "imx378",
                "type": "str"
            },
            {
                "label": "OV9281",
                "value": "ov9281",
                "type": "str"
            },
            {
                "label": "DSLR (gphoto)",
                "value": "gphoto",
                "type": "str"
            },
            {
                "label": "External Camera",
                "value": "external",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 400,
        "y": 420,
        "wires": [
            [
                "8014314ec25c0ec5",
                "c6a95e385f50ef43"
            ]
        ]
    },
    {
        "id": "685784f1a9f71259",
        "type": "ui_button",
        "z": "cf7a4625417bfc11",
        "name": "Motor",
        "group": "d49a6dfd7fb17096",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "transparent",
        "className": "",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 930,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "b37e5315aef0706c",
        "type": "ui_button",
        "z": "cf7a4625417bfc11",
        "name": "camera",
        "group": "93aadb71dee6d977",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "transparent",
        "className": "",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 940,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "acf7bbb1215902be",
        "type": "comment",
        "z": "cf7a4625417bfc11",
        "name": "General Settings",
        "info": "",
        "x": 120,
        "y": 260,
        "wires": []
    },
    {
        "id": "3813bea081c931fb",
        "type": "comment",
        "z": "cf7a4625417bfc11",
        "name": "Network",
        "info": "",
        "x": 100,
        "y": 880,
        "wires": []
    },
    {
        "id": "fede9d0f4eb8d816",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "model",
        "func": "from OpenScan import load_str, save\n\nstate = msg['payload']\nmsg['state'] = state\n\nif state != load_str('model'):\n    save('model', state)\n    if state == 'OSMini':\n        save('rotor_stepsperrotation',48000)\n        save('cam_rotation',90)\n\n    if state == 'OSClassic':\n        save('rotor_stepsperrotation',17067)\n        save('cam_rotation',0)",
        "outputs": 1,
        "x": 530,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "8014314ec25c0ec5",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "camera",
        "func": "from OpenScan import load_str, save\nfrom json import load\nstate = msg['payload']\nstate_old = load_str('camera')\n\nif state_old != state:\n    save('camera',state)\n    return msg",
        "outputs": 1,
        "x": 540,
        "y": 500,
        "wires": [
            [
                "0189d1eb358581a5"
            ]
        ]
    },
    {
        "id": "9e64bba843cb6bea",
        "type": "ui_switch",
        "z": "cf7a4625417bfc11",
        "name": "more sets",
        "label": "Advanced Settings",
        "tooltip": "",
        "group": "4fe6b4c0ade0938a",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 400,
        "y": 640,
        "wires": [
            [
                "590cb58f5db52d57"
            ]
        ]
    },
    {
        "id": "2fd65ce47a2b5ed0",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "more sets",
        "func": "from OpenScan import save\n\nif msg['payload'] != 'OK':\n    msg['payload'] = False\n    return None,msg\n    \nsave('advanced_settings', True)\n\nreturn msg",
        "outputs": 2,
        "x": 820,
        "y": 640,
        "wires": [
            [
                "663eeca93d6f17a3"
            ],
            [
                "9e64bba843cb6bea"
            ]
        ]
    },
    {
        "id": "c7b6499cd12f42cc",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "load camera&model",
        "func": "from OpenScan import load_str\n\nmodel = load_str('model')\ncamera = load_str('camera')\nmsg['model'] = model\nmsg['camera'] = camera\n\n\nif camera in ('imx219','ov5647','imx477','imx290a','imx290b','imx378','ov9281','gphoto'):\n    msg['payload'] = {\"group\":{\"hide\":[\"Scan_Arducam\"],\"show\":[\"Scan_Settings\",\"Scan_Picamera\"]}}\nelif camera in ('imx519'):\n    msg['payload'] = {\"group\":{\"hide\":[\"Scan_Picamera\"],\"show\":[\"Scan_Settings\",\"Scan_Arducam\"]}}\nelif camera in ('external'):\n    msg['payload'] = {\"group\":{\"hide\":[\"Scan_Arducam\",\"Scan_Picamera\"],\"show\":[\"Scan_Settings\"]}}\nif model == 'None' or model == '' or camera == 'None' or camera == '':\n    msg['payload'] = {\"group\":{\"hide\":[\"Scan_Picamera\",\"Scan_Arducam\",\"Scan_Settings\"],\"show\":[]}}\n\n\nreturn msg",
        "outputs": 1,
        "x": 340,
        "y": 40,
        "wires": [
            [
                "aa0b60196fddaeed"
            ]
        ]
    },
    {
        "id": "aa0b60196fddaeed",
        "type": "ui_ui_control",
        "z": "cf7a4625417bfc11",
        "name": "change visibility",
        "events": "all",
        "x": 560,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "55db3bd093dbfab0",
        "type": "inject",
        "z": "cf7a4625417bfc11",
        "name": "1s_repeater",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 40,
        "wires": [
            [
                "c7b6499cd12f42cc",
                "bc5a45b322a58fbb"
            ]
        ]
    },
    {
        "id": "bc5a45b322a58fbb",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "load advanced",
        "func": "from OpenScan import load_bool\n\nif load_bool('advanced_settings') == False:\n    msg['payload']={\"group\":{\"hide\":[\"Settings_Camera\",\"Settings_Motor\",\"Settings_Pinout\",],\"show\":[\"Settings_General\",\"Settings_Network\",\"Settings_OpenScanCloud\"]}}\nelse:\n    msg['payload']={\"group\":{\"hide\":[],\"show\":[\"Settings_General\",\"Settings_Network\",\"Settings_OpenScanCloud\",\"Settings_Camera\",\"Settings_Motor\",\"Settings_Pinout\",]}}\nreturn msg",
        "outputs": 1,
        "x": 320,
        "y": 80,
        "wires": [
            [
                "aa0b60196fddaeed"
            ]
        ]
    },
    {
        "id": "8dedb60c7e7f40eb",
        "type": "comment",
        "z": "cf7a4625417bfc11",
        "name": "Info Texts",
        "info": "",
        "x": 100,
        "y": 120,
        "wires": []
    },
    {
        "id": "b36466984d200115",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "check ip address",
        "func": "import socket\nimport subprocess\n\ntestIP = \"8.8.8.8\"\ns = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\ns.connect((testIP, 0))\nipaddr = s.getsockname()[0]\nhost = socket.gethostname()\n\nmsg['ip']=ipaddr\n\nreturn msg",
        "outputs": 1,
        "x": 410,
        "y": 1060,
        "wires": [
            [
                "b7cc1ef327e373a6"
            ]
        ]
    },
    {
        "id": "b7cc1ef327e373a6",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "0fe66c9190b8a87c",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Your local IP:",
        "format": "{{msg.ip}}",
        "layout": "row-spread",
        "className": "",
        "x": 590,
        "y": 1060,
        "wires": []
    },
    {
        "id": "58ddb8d5f0fbf870",
        "type": "comment",
        "z": "cf7a4625417bfc11",
        "name": "OpenScanCloud",
        "info": "",
        "x": 120,
        "y": 1240,
        "wires": []
    },
    {
        "id": "2267a98f71d4e15e",
        "type": "exec",
        "z": "cf7a4625417bfc11",
        "command": "sudo iwlist wlan0 scan | grep ESSID | sed 's/ESSID://g;s/\"//g;s/^ *//;s/ *$//'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "scan",
        "x": 250,
        "y": 1040,
        "wires": [
            [
                "c971f2607cfe699c",
                "b36466984d200115"
            ],
            [
                "50a2fd56be1377f0"
            ],
            []
        ]
    },
    {
        "id": "c971f2607cfe699c",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "WIFI",
        "func": "msg['options']=[]\n\nfor i in msg['payload'].split('\\n'):\n    if i not in msg['options'] and i!=\"\":\n        msg['options'].append(i)\n        \nif len(msg['options']) != 0:\n    msg['enabled']=True\n\nreturn msg",
        "outputs": 1,
        "x": 370,
        "y": 1020,
        "wires": [
            [
                "7e5bceaf8971ed98"
            ]
        ]
    },
    {
        "id": "90a1ab3a5c015a54",
        "type": "ui_button",
        "z": "cf7a4625417bfc11",
        "name": "search",
        "group": "0fe66c9190b8a87c",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Search Wifi",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 90,
        "y": 980,
        "wires": [
            [
                "2267a98f71d4e15e",
                "f59f1363641515dd"
            ]
        ]
    },
    {
        "id": "7e5bceaf8971ed98",
        "type": "ui_dropdown",
        "z": "cf7a4625417bfc11",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select Wifi",
        "group": "0fe66c9190b8a87c",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 520,
        "y": 980,
        "wires": [
            [
                "56539934f98e5483"
            ]
        ]
    },
    {
        "id": "7cec3b2a4b5484b6",
        "type": "ui_button",
        "z": "cf7a4625417bfc11",
        "name": "Reset Wifi",
        "group": "0fe66c9190b8a87c",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Reset Wifi",
        "tooltip": "",
        "color": "red",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Delete all prior wifi connections? (You will need to reconnect to the OpenScan device by Ethernet or manually modify the wpa_supplicant.conf)",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 110,
        "y": 1140,
        "wires": [
            [
                "f023db74128613e7"
            ]
        ]
    },
    {
        "id": "144d925f6d0c8643",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "Reset Wifi",
        "func": "from time import sleep\n\nif msg['payload']!=\"Yes\":\n    return\n\ntemp_dir = '/home/pi/OpenScan/tmp/wpa_empty.log'\nwpa_dir = '/etc/wpa_supplicant/wpa_supplicant.conf'\n\nwith open(temp_dir, 'w+') as file:\n    file.write('update_config=1\\nctrl_interface=DIR=/var/run/wpa_supplicant\\ncountry=de\\n\\n')\nos.system('sudo mv '+ temp_dir + ' ' + wpa_dir)\nos.system('sudo wpa_cli -i wlan0 reconfigure')\nsleep(3)\nos.system('sudo systemctl restart nodered')\nreturn msg",
        "outputs": 1,
        "x": 440,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "f023db74128613e7",
        "type": "ui_toast",
        "z": "cf7a4625417bfc11",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "No",
        "cancel": "Yes",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 270,
        "y": 1140,
        "wires": [
            [
                "144d925f6d0c8643"
            ]
        ]
    },
    {
        "id": "be3faf83f5c76fe2",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "add Wifi",
        "func": "from time import sleep\nsleep(0.1)\n\nos.system('sudo wpa_cli -i wlan0 reconfigure')\n\nreturn msg",
        "outputs": 1,
        "x": 1320,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "0c93091ae3646f50",
        "type": "ui_toast",
        "z": "cf7a4625417bfc11",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "password",
        "x": 780,
        "y": 980,
        "wires": [
            [
                "10e1b817882656e6"
            ]
        ]
    },
    {
        "id": "10e1b817882656e6",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "msg",
        "func": "if msg['payload'] == 'Cancel':\n    return\n\nmsg['password'] = msg['payload']\nmsg['payload']='Enter country code (ISO 3166-1 alpha-2, see: <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">Wikipedia</a>)'\n\n\nreturn msg",
        "outputs": 1,
        "x": 910,
        "y": 980,
        "wires": [
            [
                "5061cfd410e3098a"
            ]
        ]
    },
    {
        "id": "5061cfd410e3098a",
        "type": "ui_toast",
        "z": "cf7a4625417bfc11",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Save",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "country",
        "x": 1040,
        "y": 980,
        "wires": [
            [
                "671653f808bb10e6"
            ]
        ]
    },
    {
        "id": "671653f808bb10e6",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "modWPA",
        "func": "if msg['payload'] == 'Cancel':\n    return\n\nif len(msg['payload'])!=2:\n    msg['payload'] = 'invalid country code'\n    return msg,None\n\nwpa_dir = '/etc/wpa_supplicant/wpa_supplicant.conf'\n\ntemp_dir = '/home/pi/OpenScan/tmp/wpa'\n\ncode = msg['payload'].upper()\nssid = msg['ssid']\npassword = msg['password']\n\nif len(code) != 2:\n    msg['topic'] = 'ERROR'\n    msg['payload'] = 'invalid country code (see  ISO 3166-1 alpha-2)'\n    return msg\n\nwith open(wpa_dir, 'r') as file:\n    for i in file.readlines():\n        if 'country=' in i:\n            code_old=i.split('country=')[1][0:2]\n            break\n\nwith open(wpa_dir, 'r') as file:\n    wpa = file.read()\n    if ssid in wpa:\n        msg['topic'] = 'ERROR'\n        msg['payload'] = 'Network already exists! If you have trouble connecting, please consider resetting the saved Wifi connections.'\n        return msg\n    wpa=wpa.replace('country=' + code_old, 'country=' + code)\n    wpa=wpa + '\\nnetwork={\\n priority=10\\n ssid=\"'+ssid+'\"\\n psk=\"'+password+'\"\\n}\\n'\n\nwith open(temp_dir,'w+') as file:\n    file.write(wpa)\nos.system('sudo mv '+temp_dir + ' ' + wpa_dir)\n\nmsg['topic'] = 'Updating Wifi'\nmsg['payload'] = 'reconnecting might take a moment'\nreturn msg,msg\n",
        "outputs": 2,
        "x": 1180,
        "y": 980,
        "wires": [
            [
                "2473d2ee06695ad8"
            ],
            [
                "be3faf83f5c76fe2"
            ]
        ]
    },
    {
        "id": "2473d2ee06695ad8",
        "type": "ui_toast",
        "z": "cf7a4625417bfc11",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1330,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "82f6a674dd98099b",
        "type": "ui_button",
        "z": "cf7a4625417bfc11",
        "name": "Cloud",
        "group": "3b4bd36726be16d5",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "transparent",
        "className": "",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 930,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "564e06fa8578d5fa",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "3b4bd36726be16d5",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Max. Number of Photos:",
        "format": "{{msg.limit_photos}}",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 1380,
        "wires": []
    },
    {
        "id": "88840ec0cd630d7d",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "3b4bd36726be16d5",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Max. Filesize (GB):",
        "format": "{{msg.limit_filesize}}",
        "layout": "row-spread",
        "className": "",
        "x": 390,
        "y": 1420,
        "wires": []
    },
    {
        "id": "77f9ca7732b87a50",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "3b4bd36726be16d5",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Credit (GB):",
        "format": "{{msg.credit}}",
        "layout": "row-spread",
        "className": "",
        "x": 370,
        "y": 1460,
        "wires": []
    },
    {
        "id": "c5f1b43e1a67d386",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "save",
        "func": "import requests\nimport os\nfrom OpenScan import save, OpenScanCloud\n\nif msg['payload']!=\"Yes\":\n    return None,msg\n\ntry:\n    r = OpenScanCloud('getTokenInfo', {'token':msg['token']})\n    if r.status_code != 200:\n        msg['payload'] = 'Could not verify token'\n        return msg \n    \n    msg1 = r.json()\n    \n    save('osc_credit',msg1['credit'])\n    save('osc_limit_filesize',msg1['limit_filesize'])\n    save('osc_limit_photos',msg1['limit_photos'])\n    msg1['enabled'] = True\nexcept:\n    pass\n\nsave('token',msg['token'])\n    \nmsg['payload'] = 'Token verified and saved'\nreturn msg, msg1",
        "outputs": 2,
        "x": 750,
        "y": 1320,
        "wires": [
            [
                "dc2adc108a4a8ae0",
                "42dffad76a3602e9"
            ],
            [
                "9590e4dce2e256ac"
            ]
        ]
    },
    {
        "id": "dc2adc108a4a8ae0",
        "type": "ui_toast",
        "z": "cf7a4625417bfc11",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 890,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "5408975d4c091dcd",
        "type": "ui_text_input",
        "z": "cf7a4625417bfc11",
        "name": "",
        "label": "Token",
        "tooltip": "",
        "group": "3b4bd36726be16d5",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 350,
        "y": 1340,
        "wires": [
            [
                "989bfb5878dd5902"
            ]
        ]
    },
    {
        "id": "989bfb5878dd5902",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "Save?",
        "func": "msg['token'] = msg['payload']\n\nif len(msg['payload'])>=14:\n    \n    msg[\"payload\"]='Save and verify token: ' + msg['payload']\n    return msg\nelse:\n    return None,msg",
        "outputs": 2,
        "x": 470,
        "y": 1340,
        "wires": [
            [
                "ebf8d439a68b71f7"
            ],
            [
                "996e458e45e7eade"
            ]
        ]
    },
    {
        "id": "a6c3cdd59ac7bf46",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "text",
        "func": "from OpenScan import load_str\n\ntoken = load_str('token')[0:8]\nmsg['payload']= token + '...'\nif len(token)==0:\n    msg['payload']=\"enter token\"\nreturn msg",
        "outputs": 1,
        "x": 230,
        "y": 1340,
        "wires": [
            [
                "5408975d4c091dcd"
            ]
        ]
    },
    {
        "id": "ae849c01cfb0838f",
        "type": "link in",
        "z": "cf7a4625417bfc11",
        "name": "token",
        "links": [
            "d172fc8f3a0e34a1",
            "42dffad76a3602e9",
            "996e458e45e7eade"
        ],
        "x": 75,
        "y": 1340,
        "wires": [
            [
                "a6c3cdd59ac7bf46"
            ]
        ]
    },
    {
        "id": "ebf8d439a68b71f7",
        "type": "ui_toast",
        "z": "cf7a4625417bfc11",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "No",
        "cancel": "Yes",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 610,
        "y": 1320,
        "wires": [
            [
                "c5f1b43e1a67d386"
            ]
        ]
    },
    {
        "id": "996e458e45e7eade",
        "type": "link out",
        "z": "cf7a4625417bfc11",
        "name": "",
        "mode": "link",
        "links": [
            "ae849c01cfb0838f"
        ],
        "x": 555,
        "y": 1360,
        "wires": []
    },
    {
        "id": "9590e4dce2e256ac",
        "type": "link out",
        "z": "cf7a4625417bfc11",
        "name": "",
        "links": [
            "5d267acc10020091",
            "f4b7297e17d0d220"
        ],
        "x": 835,
        "y": 1360,
        "wires": []
    },
    {
        "id": "f4b7297e17d0d220",
        "type": "link in",
        "z": "cf7a4625417bfc11",
        "name": "OSCparameters",
        "links": [
            "d172fc8f3a0e34a1",
            "9590e4dce2e256ac",
            "099cec67edd5de45"
        ],
        "x": 75,
        "y": 1380,
        "wires": [
            [
                "69df4f7ab1244c03"
            ]
        ]
    },
    {
        "id": "42dffad76a3602e9",
        "type": "link out",
        "z": "cf7a4625417bfc11",
        "name": "",
        "links": [
            "ae849c01cfb0838f",
            "5d267acc10020091"
        ],
        "x": 835,
        "y": 1320,
        "wires": []
    },
    {
        "id": "ee8b4a2872590a68",
        "type": "ui_toast",
        "z": "cf7a4625417bfc11",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 250,
        "y": 1520,
        "wires": [
            [
                "41a414731129b859"
            ]
        ]
    },
    {
        "id": "41a414731129b859",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "msg",
        "func": "import re\n\nif msg['payload'] == 'Cancel':\n    return\n\nmail = msg['payload']\nemail_regex = re.compile(r\"[^@]+@[^@]+\\.[^@]+\")\n\nif email_regex.match(mail) != None:\n    msg['mail'] = mail\n    msg['topic'] = 'OpenScanCloud Registration (2/3)'\n    msg['payload'] = 'Enter your first name'\n    return msg\nmsg['payload'] = 'invalid input'\nreturn None,msg\n",
        "outputs": 2,
        "x": 390,
        "y": 1520,
        "wires": [
            [
                "1ab7255b48da7e93"
            ],
            [
                "99eb3498eb8e6564"
            ]
        ]
    },
    {
        "id": "99eb3498eb8e6564",
        "type": "ui_toast",
        "z": "cf7a4625417bfc11",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 530,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "1ab7255b48da7e93",
        "type": "ui_toast",
        "z": "cf7a4625417bfc11",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 530,
        "y": 1520,
        "wires": [
            [
                "78e46658c166d48e"
            ]
        ]
    },
    {
        "id": "d5ce5edcd84940fd",
        "type": "ui_toast",
        "z": "cf7a4625417bfc11",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "SUBMIT",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 810,
        "y": 1520,
        "wires": [
            [
                "c8ba1859038e40f7"
            ]
        ]
    },
    {
        "id": "c8ba1859038e40f7",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "msg",
        "func": "import requests\nimport os\nfrom OpenScan import OpenScanCloud\n\nif msg['payload'] == 'Cancel':\n    return\n\nmsg['lastname'] = msg['payload']\n\nmsg2 = {}\n\nfor i in ['forename','lastname','mail']:\n    msg2[i] = msg[i]\n\nr = OpenScanCloud('requestToken',msg2)\n\nstatus = r.status_code\n\nmsg['topic'] = 'OpenScanCloud Registration - Success'\nmsg['payload'] = 'registration done, you will get an email with your token within the next one or two days :)'\n\nif status != 200:\n    msg['topic'] = 'OpenScanCloud Registration - Failed'\n    msg['payload'] = 'Registration failed, please try again.'\n\nmsg['status'] = status\n\nreturn msg",
        "outputs": 1,
        "x": 950,
        "y": 1520,
        "wires": [
            [
                "19d902984d73154b",
                "3506a9b9141bc022"
            ]
        ]
    },
    {
        "id": "6f144e17caf6e9b0",
        "type": "ui_button",
        "z": "cf7a4625417bfc11",
        "name": "Register",
        "group": "3b4bd36726be16d5",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Register",
        "tooltip": "testtesttest",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Please enter your email address:",
        "payloadType": "str",
        "topic": "Requesting an OpenScanCloud Token",
        "topicType": "str",
        "x": 100,
        "y": 1520,
        "wires": [
            [
                "ee8b4a2872590a68"
            ]
        ]
    },
    {
        "id": "19d902984d73154b",
        "type": "ui_toast",
        "z": "cf7a4625417bfc11",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1090,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "69df4f7ab1244c03",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "msg",
        "func": "from OpenScan import load_int\n\nmsg = {}\n\ntry:\n    msg['credit'] = float(int(load_int('osc_credit')/10000000))/100\n    msg['limit_filesize'] = float(int(load_int('osc_limit_filesize')/10000000))/100\n    msg['limit_photos'] = load_int('osc_limit_photos')\n    return msg\nexcept:\n    pass",
        "outputs": 1,
        "x": 230,
        "y": 1380,
        "wires": [
            [
                "564e06fa8578d5fa",
                "88840ec0cd630d7d",
                "77f9ca7732b87a50"
            ]
        ]
    },
    {
        "id": "180b01898eac6191",
        "type": "comment",
        "z": "cf7a4625417bfc11",
        "name": "Motor",
        "info": "",
        "x": 90,
        "y": 1620,
        "wires": []
    },
    {
        "id": "a1f7779b39717869",
        "type": "comment",
        "z": "cf7a4625417bfc11",
        "name": "Camera",
        "info": "",
        "x": 90,
        "y": 2280,
        "wires": []
    },
    {
        "id": "8441d9a21a63c938",
        "type": "comment",
        "z": "cf7a4625417bfc11",
        "name": "Pinout",
        "info": "",
        "x": 110,
        "y": 2780,
        "wires": []
    },
    {
        "id": "27c4170fd84c7a38",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "Rotor_delay (ms)",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0.01",
        "max": "0.2",
        "step": "0.005",
        "className": "",
        "x": 450,
        "y": 1820,
        "wires": [
            [
                "714c4fc2d7269f52"
            ]
        ]
    },
    {
        "id": "b32bdbb8b59421f6",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "tt delay",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 25,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0.01",
        "max": "0.2",
        "step": "0.005",
        "className": "",
        "x": 420,
        "y": 2060,
        "wires": [
            [
                "cc88a11c7714cfa1"
            ]
        ]
    },
    {
        "id": "72c8acd83f62d1ec",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "rotor_acc",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 14,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0.1",
        "max": "2",
        "step": "0.1",
        "className": "",
        "x": 420,
        "y": 1860,
        "wires": [
            [
                "98f27b6c99bd7c5d"
            ]
        ]
    },
    {
        "id": "fa883830156b38f8",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "rotor_accramp",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 16,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "100",
        "max": "5000",
        "step": "100",
        "className": "",
        "x": 440,
        "y": 1900,
        "wires": [
            [
                "74e21bcf38f41577"
            ]
        ]
    },
    {
        "id": "28b1a5daf35dce93",
        "type": "ui_text_input",
        "z": "cf7a4625417bfc11",
        "name": "rotor_stepsperrotation",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 10,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 460,
        "y": 1780,
        "wires": [
            [
                "e9900e753cf751f3"
            ]
        ]
    },
    {
        "id": "ec4ff4bb3cc0ef69",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "d49a6dfd7fb17096",
        "order": 15,
        "width": 3,
        "height": 1,
        "name": "rotor Accramp",
        "label": "Acceleration ramp",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 780,
        "y": 1860,
        "wires": []
    },
    {
        "id": "77142933b5203d2e",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "d49a6dfd7fb17096",
        "order": 9,
        "width": 3,
        "height": 1,
        "name": "rotor_Steps per Rotation",
        "label": "Steps per Rotation",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 810,
        "y": 1900,
        "wires": []
    },
    {
        "id": "34f1fb8c53e7c87f",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "d49a6dfd7fb17096",
        "order": 13,
        "width": 3,
        "height": 1,
        "name": "rotor Acc",
        "label": "Acceleration",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 760,
        "y": 1820,
        "wires": []
    },
    {
        "id": "a2efe6a3499766c4",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "d49a6dfd7fb17096",
        "order": 11,
        "width": 3,
        "height": 1,
        "name": "rotor_delay",
        "label": "Delay",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 770,
        "y": 1780,
        "wires": []
    },
    {
        "id": "f4c00034adf0b147",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "d49a6dfd7fb17096",
        "order": 21,
        "width": 6,
        "height": 1,
        "name": "tt",
        "label": "TURNTABLE",
        "format": "",
        "layout": "row-center",
        "className": "",
        "x": 90,
        "y": 2020,
        "wires": []
    },
    {
        "id": "5725e3bc7aeaa7a2",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "tt_acc",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 27,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0.1",
        "max": "2",
        "step": "0.1",
        "className": "",
        "x": 410,
        "y": 2100,
        "wires": [
            [
                "5393089df201b3d9"
            ]
        ]
    },
    {
        "id": "b4308967fb6ebf3e",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "tt_accramp",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 29,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "1",
        "max": "500",
        "step": "1",
        "className": "",
        "x": 430,
        "y": 2140,
        "wires": [
            [
                "b480489c48b03339"
            ]
        ]
    },
    {
        "id": "be75c29b2767d714",
        "type": "ui_text_input",
        "z": "cf7a4625417bfc11",
        "name": "tt_stepsperrotation",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 23,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 450,
        "y": 2020,
        "wires": [
            [
                "b2bdb452d82ac775"
            ]
        ]
    },
    {
        "id": "33154ec9e0adbc0b",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "d49a6dfd7fb17096",
        "order": 28,
        "width": 3,
        "height": 1,
        "name": "ttAccramp",
        "label": "Acceleration ramp",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 760,
        "y": 2140,
        "wires": []
    },
    {
        "id": "f0a68e3be932e18c",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "d49a6dfd7fb17096",
        "order": 22,
        "width": 3,
        "height": 1,
        "name": "tt_steps per Rotation",
        "label": "Steps per Rotation",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 800,
        "y": 2020,
        "wires": []
    },
    {
        "id": "5d5d767b72623141",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "d49a6dfd7fb17096",
        "order": 26,
        "width": 3,
        "height": 1,
        "name": "tt Acc",
        "label": "Acceleration",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 750,
        "y": 2100,
        "wires": []
    },
    {
        "id": "93dc46afbfdfcb03",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "d49a6dfd7fb17096",
        "order": 24,
        "width": 3,
        "height": 1,
        "name": "tt_delay",
        "label": "Delay",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 760,
        "y": 2060,
        "wires": []
    },
    {
        "id": "7e309ca656e7d8b8",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "rotor_angle",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 18,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "1",
        "max": "180",
        "step": "1",
        "className": "",
        "x": 430,
        "y": 1940,
        "wires": [
            [
                "1fe11b6c3ecaf7a0"
            ]
        ]
    },
    {
        "id": "35a4d19a69b809d4",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "d49a6dfd7fb17096",
        "order": 17,
        "width": 3,
        "height": 1,
        "name": "rotor_angle",
        "label": "Manual angle",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 770,
        "y": 1940,
        "wires": []
    },
    {
        "id": "7e018fb368dde0f4",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "tt_angle",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 31,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "1",
        "max": "180",
        "step": "1",
        "className": "",
        "x": 420,
        "y": 2180,
        "wires": [
            [
                "65941d4d19736bf3"
            ]
        ]
    },
    {
        "id": "6c9ada8d564bca30",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "d49a6dfd7fb17096",
        "order": 30,
        "width": 3,
        "height": 1,
        "name": "tt_angle",
        "label": "Manual angle",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 2180,
        "wires": []
    },
    {
        "id": "f428f97b7cdb2347",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "d49a6dfd7fb17096",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "rotor",
        "label": "ROTOR",
        "format": "",
        "layout": "row-center",
        "className": "",
        "x": 90,
        "y": 1680,
        "wires": []
    },
    {
        "id": "9905ecf6c5abb1e8",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "tt_dir",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 33,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0",
        "max": "1",
        "step": "1",
        "className": "",
        "x": 410,
        "y": 2220,
        "wires": [
            [
                "97157c0fe7cd21e6"
            ]
        ]
    },
    {
        "id": "de5b8eb42c1ab757",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "rotor_dir",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 20,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0",
        "max": "1",
        "step": "1",
        "className": "",
        "x": 420,
        "y": 1980,
        "wires": [
            [
                "691e99af15b1f892"
            ]
        ]
    },
    {
        "id": "e489c521b3c58823",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "d49a6dfd7fb17096",
        "order": 32,
        "width": 3,
        "height": 1,
        "name": "tt_dir",
        "label": "Direction",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 2220,
        "wires": []
    },
    {
        "id": "dd072b975bb01131",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "d49a6dfd7fb17096",
        "order": 19,
        "width": 3,
        "height": 1,
        "name": "rotor_dir",
        "label": "Direction",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 1980,
        "wires": []
    },
    {
        "id": "90bf1d66fcb72963",
        "type": "link in",
        "z": "cf7a4625417bfc11",
        "name": "advanced settings",
        "links": [
            "663eeca93d6f17a3"
        ],
        "x": 95,
        "y": 80,
        "wires": [
            [
                "bc5a45b322a58fbb"
            ]
        ]
    },
    {
        "id": "663eeca93d6f17a3",
        "type": "link out",
        "z": "cf7a4625417bfc11",
        "name": "",
        "mode": "link",
        "links": [
            "90bf1d66fcb72963"
        ],
        "x": 955,
        "y": 640,
        "wires": []
    },
    {
        "id": "5ce9ce3adfe2dc23",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "cam_delay_after",
        "label": "",
        "tooltip": "",
        "group": "93aadb71dee6d977",
        "order": 11,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0",
        "max": "5",
        "step": "0.1",
        "className": "",
        "x": 440,
        "y": 2420,
        "wires": [
            [
                "eff2588f2c05a653"
            ]
        ]
    },
    {
        "id": "29f2cf97c487ab21",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "cam_delay_before",
        "label": "",
        "tooltip": "",
        "group": "93aadb71dee6d977",
        "order": 9,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0",
        "max": "5",
        "step": "0.1",
        "className": "",
        "x": 450,
        "y": 2460,
        "wires": [
            [
                "3755b93f8124bce7"
            ]
        ]
    },
    {
        "id": "195214c68d68e79b",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "cam_timeout",
        "label": "",
        "tooltip": "",
        "group": "93aadb71dee6d977",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0.01",
        "max": "1",
        "step": "0.01",
        "className": "",
        "x": 430,
        "y": 2380,
        "wires": [
            [
                "9a0afd5334618680"
            ]
        ]
    },
    {
        "id": "a7f1877bf7fdf2c2",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "cam_gain",
        "label": "",
        "tooltip": "",
        "group": "93aadb71dee6d977",
        "order": 17,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0",
        "max": "10",
        "step": "0.1",
        "className": "",
        "x": 420,
        "y": 2500,
        "wires": [
            [
                "52050a2d0730e385"
            ]
        ]
    },
    {
        "id": "e4aacdaa0b6d6a0b",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "cam_awbg_red",
        "label": "",
        "tooltip": "",
        "group": "93aadb71dee6d977",
        "order": 13,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "-10",
        "max": "10",
        "step": "0.1",
        "className": "",
        "x": 440,
        "y": 2540,
        "wires": [
            [
                "9c986e4584732989"
            ]
        ]
    },
    {
        "id": "349cb3530fb0b90e",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "cam_awbg_blue",
        "label": "",
        "tooltip": "",
        "group": "93aadb71dee6d977",
        "order": 15,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "-10",
        "max": "10",
        "step": "0.1",
        "className": "",
        "x": 440,
        "y": 2580,
        "wires": [
            [
                "97292323f826d7c1"
            ]
        ]
    },
    {
        "id": "f7e3209330699100",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "cam_contrast",
        "label": "",
        "tooltip": "",
        "group": "93aadb71dee6d977",
        "order": 19,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0",
        "max": "5",
        "step": "0.1",
        "className": "",
        "x": 440,
        "y": 2620,
        "wires": [
            [
                "6a94732d4adad7ad"
            ]
        ]
    },
    {
        "id": "51e9c4095c98111f",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "cam_saturation",
        "label": "",
        "tooltip": "",
        "group": "93aadb71dee6d977",
        "order": 21,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0",
        "max": "5",
        "step": "0.1",
        "className": "",
        "x": 440,
        "y": 2660,
        "wires": [
            [
                "acc2741fa7f43e25"
            ]
        ]
    },
    {
        "id": "85da6bfe6d95ef20",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "cam_jpeg_q",
        "label": "",
        "tooltip": "",
        "group": "93aadb71dee6d977",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "1",
        "max": "100",
        "step": "1",
        "className": "",
        "x": 430,
        "y": 2700,
        "wires": [
            [
                "f7c4380cd4924225"
            ]
        ]
    },
    {
        "id": "046c2778a151f35c",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "93aadb71dee6d977",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "timeout",
        "label": "Timeout",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 2380,
        "wires": []
    },
    {
        "id": "38786777ec142a6f",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "93aadb71dee6d977",
        "order": 10,
        "width": 3,
        "height": 1,
        "name": "delay_after",
        "label": "Delay after",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 770,
        "y": 2420,
        "wires": []
    },
    {
        "id": "46b5794396a7306d",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "93aadb71dee6d977",
        "order": 8,
        "width": 3,
        "height": 1,
        "name": "delay_before",
        "label": "Delay before",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 770,
        "y": 2460,
        "wires": []
    },
    {
        "id": "0d2ace35d03a46ee",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "93aadb71dee6d977",
        "order": 16,
        "width": 3,
        "height": 1,
        "name": "gain",
        "label": "Gain",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 2500,
        "wires": []
    },
    {
        "id": "e615bd93f6f90d40",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "93aadb71dee6d977",
        "order": 12,
        "width": 3,
        "height": 1,
        "name": "awbg red",
        "label": "AWBG red",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 2540,
        "wires": []
    },
    {
        "id": "8ee39968b3048e5d",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "93aadb71dee6d977",
        "order": 14,
        "width": 3,
        "height": 1,
        "name": "awbg blue",
        "label": "AWBG blue",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 770,
        "y": 2580,
        "wires": []
    },
    {
        "id": "8fd016e55662a89b",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "93aadb71dee6d977",
        "order": 18,
        "width": 3,
        "height": 1,
        "name": "contrast",
        "label": "Contrast",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 2620,
        "wires": []
    },
    {
        "id": "f0023675c7d1d30d",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "93aadb71dee6d977",
        "order": 20,
        "width": 3,
        "height": 1,
        "name": "saturation",
        "label": "Saturation",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 2660,
        "wires": []
    },
    {
        "id": "7cf1b9b56ddbb07a",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "93aadb71dee6d977",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "jpegQ",
        "label": "Jpeg Quality",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 2700,
        "wires": []
    },
    {
        "id": "a1937da00f96f224",
        "type": "ui_text_input",
        "z": "cf7a4625417bfc11",
        "name": "ext",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 410,
        "y": 2820,
        "wires": [
            [
                "7eb18a966fa420aa"
            ]
        ]
    },
    {
        "id": "4c499b7a9eccad91",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "644b3bcc903d46ca",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "ext",
        "label": "External Camera",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 2820,
        "wires": []
    },
    {
        "id": "30d8829dbde43eab",
        "type": "ui_text_input",
        "z": "cf7a4625417bfc11",
        "name": "light1",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 410,
        "y": 2860,
        "wires": [
            [
                "d40c85c7dc1c4945"
            ]
        ]
    },
    {
        "id": "e3677fe4b5d0b06b",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "644b3bcc903d46ca",
        "order": 4,
        "width": 4,
        "height": 1,
        "name": "light1",
        "label": "Light 1",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 2860,
        "wires": []
    },
    {
        "id": "4a29a36a28bcd625",
        "type": "ui_text_input",
        "z": "cf7a4625417bfc11",
        "name": "light2",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 410,
        "y": 2900,
        "wires": [
            [
                "717e03c1f2c07027"
            ]
        ]
    },
    {
        "id": "97b2fcbd77e49105",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "644b3bcc903d46ca",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "light2",
        "label": "Light 2",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 2900,
        "wires": []
    },
    {
        "id": "00cd8bede22df3a3",
        "type": "ui_text_input",
        "z": "cf7a4625417bfc11",
        "name": "rotordir",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 420,
        "y": 2940,
        "wires": [
            [
                "5d7bf305b00eb365"
            ]
        ]
    },
    {
        "id": "aca5618ebd65b106",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "644b3bcc903d46ca",
        "order": 8,
        "width": 4,
        "height": 1,
        "name": "rotordir",
        "label": "Rotor direction",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 2940,
        "wires": []
    },
    {
        "id": "7c681c9d744221f0",
        "type": "ui_text_input",
        "z": "cf7a4625417bfc11",
        "name": "rotorstep",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 420,
        "y": 2980,
        "wires": [
            [
                "f4b23aced5d925fe"
            ]
        ]
    },
    {
        "id": "46fbb44b13d33b72",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "644b3bcc903d46ca",
        "order": 10,
        "width": 4,
        "height": 1,
        "name": "rotorstep",
        "label": "Rotor step",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 2980,
        "wires": []
    },
    {
        "id": "381cc9de1f5d7fe7",
        "type": "ui_text_input",
        "z": "cf7a4625417bfc11",
        "name": "rotoren",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 13,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 420,
        "y": 3020,
        "wires": [
            [
                "cd05ff664b0d8dee"
            ]
        ]
    },
    {
        "id": "546ef5fd0c10ae8f",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "644b3bcc903d46ca",
        "order": 12,
        "width": 4,
        "height": 1,
        "name": "rotoren",
        "label": "Rotor enable",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 3020,
        "wires": []
    },
    {
        "id": "5daf4c39eeb5e794",
        "type": "ui_text_input",
        "z": "cf7a4625417bfc11",
        "name": "ttdir",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 15,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 410,
        "y": 3060,
        "wires": [
            [
                "df9a96a635d1db73"
            ]
        ]
    },
    {
        "id": "70785ba4a4ac281d",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "644b3bcc903d46ca",
        "order": 14,
        "width": 4,
        "height": 1,
        "name": "ttdir",
        "label": "Turntable direction",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 3060,
        "wires": []
    },
    {
        "id": "70ca0ac28a6af15e",
        "type": "ui_text_input",
        "z": "cf7a4625417bfc11",
        "name": "ttstep",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 17,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 410,
        "y": 3100,
        "wires": [
            [
                "ce38c4ef33c50ace"
            ]
        ]
    },
    {
        "id": "f231099fd33ea6d5",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "644b3bcc903d46ca",
        "order": 16,
        "width": 4,
        "height": 1,
        "name": "ttstep",
        "label": "Turntable step",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 3100,
        "wires": []
    },
    {
        "id": "6718e4d877c09748",
        "type": "ui_text_input",
        "z": "cf7a4625417bfc11",
        "name": "tten",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 19,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 410,
        "y": 3140,
        "wires": [
            [
                "5fd3189c24daf9f6"
            ]
        ]
    },
    {
        "id": "a01bdfe33f3bb97a",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "644b3bcc903d46ca",
        "order": 18,
        "width": 4,
        "height": 1,
        "name": "tten",
        "label": "Turntable enable",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 3140,
        "wires": []
    },
    {
        "id": "e749b00bd24b2b49",
        "type": "ui_text_input",
        "z": "cf7a4625417bfc11",
        "name": "endstop1",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 21,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 420,
        "y": 3180,
        "wires": [
            [
                "6e97ecfebdd5c624"
            ]
        ]
    },
    {
        "id": "4de563f81a174b5e",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "644b3bcc903d46ca",
        "order": 20,
        "width": 4,
        "height": 1,
        "name": "endstop1",
        "label": "Endstop 1",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 3180,
        "wires": []
    },
    {
        "id": "5ab846dd86676bd9",
        "type": "ui_text_input",
        "z": "cf7a4625417bfc11",
        "name": "endstop2",
        "label": "",
        "tooltip": "",
        "group": "644b3bcc903d46ca",
        "order": 23,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 420,
        "y": 3220,
        "wires": [
            [
                "bd6e4fdddbba6fc1"
            ]
        ]
    },
    {
        "id": "3d2e6b51b43753d3",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "644b3bcc903d46ca",
        "order": 22,
        "width": 4,
        "height": 1,
        "name": "endstop1",
        "label": "Endstop 2",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 3220,
        "wires": []
    },
    {
        "id": "8fddc868ea12a6e2",
        "type": "ui_toast",
        "z": "cf7a4625417bfc11",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "confirm",
        "x": 680,
        "y": 640,
        "wires": [
            [
                "2fd65ce47a2b5ed0"
            ]
        ]
    },
    {
        "id": "590cb58f5db52d57",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "msg",
        "func": "from OpenScan import save, load_bool\n\nif msg['payload'] == True and not load_bool('advanced_settings'):\n    msg['payload'] = '''<p style=\"text-align: center;\"><span style=\"font-size: 22px;\"><strong><u>PLEASE READ :)</u></strong></span></p>\n<p style=\"margin-left: 20px; text-align: center;\"><strong>Modifying the advanced settings can potentially damage your device and/or the connected peripherals.</strong></p>\n<p style=\"margin-left: 20px; text-align: center;\"><strong>Please read the given information texts carefully and only change settings, when you are sure about the consequences!</strong></p>\n'''\n    return msg\nelif not msg['payload']: \n    save('advanced_settings', False)\n",
        "outputs": 1,
        "x": 530,
        "y": 640,
        "wires": [
            [
                "8fddc868ea12a6e2"
            ]
        ]
    },
    {
        "id": "9a2596606eed2bc7",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "cam_rotation",
        "label": "",
        "tooltip": "",
        "group": "93aadb71dee6d977",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "0",
        "max": "270",
        "step": "90",
        "className": "",
        "x": 430,
        "y": 2740,
        "wires": [
            [
                "0b96afeb0e31aff3"
            ]
        ]
    },
    {
        "id": "0111a2df77e702e8",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "93aadb71dee6d977",
        "order": 4,
        "width": 3,
        "height": 1,
        "name": "cam_rot",
        "label": "Image Rotation",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 2740,
        "wires": []
    },
    {
        "id": "8f844920ab469963",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'rotor_stepsperrotation'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1780,
        "wires": [
            [
                "28b1a5daf35dce93"
            ]
        ]
    },
    {
        "id": "e9900e753cf751f3",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'rotor_stepsperrotation'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "0fcc2354f5ab1ff3",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'rotor_accramp'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1900,
        "wires": [
            [
                "fa883830156b38f8"
            ]
        ]
    },
    {
        "id": "74e21bcf38f41577",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'rotor_accramp'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "f1b83f06095fd913",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'rotor_angle'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1940,
        "wires": [
            [
                "7e309ca656e7d8b8"
            ]
        ]
    },
    {
        "id": "1fe11b6c3ecaf7a0",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'rotor_angle'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "e553d816203f9f7e",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'rotor_dir'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1980,
        "wires": [
            [
                "de5b8eb42c1ab757"
            ]
        ]
    },
    {
        "id": "691e99af15b1f892",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'rotor_dir'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nif (msg.payload === 1){\n    content = '1'\n}\nelse{\n    content = '-1'\n}\n\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "1081863999a3f9af",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadF",
        "func": "var file = 'rotor_delay'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data) * 1000;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1820,
        "wires": [
            [
                "27c4170fd84c7a38"
            ]
        ]
    },
    {
        "id": "714c4fc2d7269f52",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'rotor_delay'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload / 1000)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "fdf195ea7352e84b",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadF",
        "func": "var file = 'rotor_acc'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1860,
        "wires": [
            [
                "72c8acd83f62d1ec"
            ]
        ]
    },
    {
        "id": "98f27b6c99bd7c5d",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'rotor_acc'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "9e187219a99f7c7c",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'tt_stepsperrotation'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2020,
        "wires": [
            [
                "be75c29b2767d714"
            ]
        ]
    },
    {
        "id": "172d595502027aa3",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'tt_accramp'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2140,
        "wires": [
            [
                "b4308967fb6ebf3e"
            ]
        ]
    },
    {
        "id": "d8d4db157496aa13",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'tt_angle'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2180,
        "wires": [
            [
                "7e018fb368dde0f4"
            ]
        ]
    },
    {
        "id": "ebe2d0d8397696c9",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'tt_dir'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2220,
        "wires": [
            [
                "9905ecf6c5abb1e8"
            ]
        ]
    },
    {
        "id": "53246db035c2e32f",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadF",
        "func": "var file = 'tt_delay'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data) * 1000;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2060,
        "wires": [
            [
                "b32bdbb8b59421f6"
            ]
        ]
    },
    {
        "id": "01dd54e2e4757cdc",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadF",
        "func": "var file = 'tt_acc'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2100,
        "wires": [
            [
                "5725e3bc7aeaa7a2"
            ]
        ]
    },
    {
        "id": "b2bdb452d82ac775",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'tt_stepsperrotation'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "b480489c48b03339",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'tt_accramp'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "65941d4d19736bf3",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'tt_angle'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "97157c0fe7cd21e6",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'tt_dir'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nif (msg.payload === 1){\n    content = '1'\n}\nelse{\n    content = '-1'\n}\n\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "cc88a11c7714cfa1",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'tt_delay'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload / 1000)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "5393089df201b3d9",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'tt_acc'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "69812ca722917f35",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadF",
        "func": "var file = 'cam_timeout'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data) / 1000;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2380,
        "wires": [
            [
                "195214c68d68e79b"
            ]
        ]
    },
    {
        "id": "9a0afd5334618680",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'cam_timeout'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload * 1000)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "e9c7990eb61d4376",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadF",
        "func": "var file = 'cam_delay_after'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2420,
        "wires": [
            [
                "5ce9ce3adfe2dc23"
            ]
        ]
    },
    {
        "id": "b9e114b6eaa91810",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadF",
        "func": "var file = 'cam_delay_before'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2460,
        "wires": [
            [
                "29f2cf97c487ab21"
            ]
        ]
    },
    {
        "id": "eff2588f2c05a653",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'cam_delay_after'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "3755b93f8124bce7",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'cam_delay_before'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "ddb9114cffca8992",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadF",
        "func": "var file = 'cam_gain'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2500,
        "wires": [
            [
                "a7f1877bf7fdf2c2"
            ]
        ]
    },
    {
        "id": "52050a2d0730e385",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'cam_gain'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2500,
        "wires": [
            []
        ]
    },
    {
        "id": "63a41c60446017c4",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadF",
        "func": "var file = 'cam_awbg_red'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2540,
        "wires": [
            [
                "e4aacdaa0b6d6a0b"
            ]
        ]
    },
    {
        "id": "9c986e4584732989",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'cam_awbg_red'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2540,
        "wires": [
            []
        ]
    },
    {
        "id": "43ea4a0a0aa6253f",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadF",
        "func": "var file = 'cam_awbg_blue'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2580,
        "wires": [
            [
                "349cb3530fb0b90e"
            ]
        ]
    },
    {
        "id": "97292323f826d7c1",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'cam_awbg_blue'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2580,
        "wires": [
            []
        ]
    },
    {
        "id": "7fa3a127afc9af95",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadF",
        "func": "var file = 'cam_contrast'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2620,
        "wires": [
            [
                "f7e3209330699100"
            ]
        ]
    },
    {
        "id": "6a94732d4adad7ad",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'cam_contrast'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2620,
        "wires": [
            []
        ]
    },
    {
        "id": "4c913be220246a5d",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadF",
        "func": "var file = 'cam_saturation'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseFloat(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2660,
        "wires": [
            [
                "51e9c4095c98111f"
            ]
        ]
    },
    {
        "id": "acc2741fa7f43e25",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'cam_saturation'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2660,
        "wires": [
            []
        ]
    },
    {
        "id": "76a82df9af1471d6",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'cam_jpeg_quality'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2700,
        "wires": [
            [
                "85da6bfe6d95ef20"
            ]
        ]
    },
    {
        "id": "f7c4380cd4924225",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'cam_jpeg_quality'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2700,
        "wires": [
            []
        ]
    },
    {
        "id": "648d6fa814940536",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'cam_rotation'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2740,
        "wires": [
            [
                "9a2596606eed2bc7"
            ]
        ]
    },
    {
        "id": "0b96afeb0e31aff3",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'cam_rotation'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2740,
        "wires": [
            []
        ]
    },
    {
        "id": "a04bbb4b8c958df5",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'pin_external'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2820,
        "wires": [
            [
                "a1937da00f96f224"
            ]
        ]
    },
    {
        "id": "7eb18a966fa420aa",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'pin_external'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2820,
        "wires": [
            []
        ]
    },
    {
        "id": "332f9e5bdab22f49",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'pin_endstop1'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 3180,
        "wires": [
            [
                "e749b00bd24b2b49"
            ]
        ]
    },
    {
        "id": "6e97ecfebdd5c624",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'pin_endstop1'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 3180,
        "wires": [
            []
        ]
    },
    {
        "id": "a1a4c29d69c89b25",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'pin_ringlight1'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2860,
        "wires": [
            [
                "30d8829dbde43eab"
            ]
        ]
    },
    {
        "id": "d40c85c7dc1c4945",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'pin_ringlight1'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2860,
        "wires": [
            []
        ]
    },
    {
        "id": "50cf4e2bfe5d03c0",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'pin_ringlight2'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2900,
        "wires": [
            [
                "4a29a36a28bcd625"
            ]
        ]
    },
    {
        "id": "717e03c1f2c07027",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'pin_ringlight2'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2900,
        "wires": [
            []
        ]
    },
    {
        "id": "93202e9e54943a21",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'pin_rotor_dir'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2940,
        "wires": [
            [
                "00cd8bede22df3a3"
            ]
        ]
    },
    {
        "id": "5d7bf305b00eb365",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'pin_rotor_dir'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2940,
        "wires": [
            []
        ]
    },
    {
        "id": "1901850af273e744",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'pin_rotor_step'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2980,
        "wires": [
            [
                "7c681c9d744221f0"
            ]
        ]
    },
    {
        "id": "f4b23aced5d925fe",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'pin_rotor_step'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2980,
        "wires": [
            []
        ]
    },
    {
        "id": "234318d37e620ed4",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'pin_rotor_enable'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 3020,
        "wires": [
            [
                "381cc9de1f5d7fe7"
            ]
        ]
    },
    {
        "id": "cd05ff664b0d8dee",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'pin_rotor_enable'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 3020,
        "wires": [
            []
        ]
    },
    {
        "id": "78328853ae97a339",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'pin_tt_dir'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 3060,
        "wires": [
            [
                "5daf4c39eeb5e794"
            ]
        ]
    },
    {
        "id": "3cab18cb91c15e72",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'pin_tt_step'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 3100,
        "wires": [
            [
                "70ca0ac28a6af15e"
            ]
        ]
    },
    {
        "id": "9fa1ceb54b01e65b",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'pin_tt_enable'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 3140,
        "wires": [
            [
                "6718e4d877c09748"
            ]
        ]
    },
    {
        "id": "df9a96a635d1db73",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'pin_tt_dir'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 3060,
        "wires": [
            []
        ]
    },
    {
        "id": "ce38c4ef33c50ace",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'pin_tt_step'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 3100,
        "wires": [
            []
        ]
    },
    {
        "id": "5fd3189c24daf9f6",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'pin_tt_enable'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 3140,
        "wires": [
            []
        ]
    },
    {
        "id": "7b7f4e7745df62eb",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'pin_endstop2'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 3220,
        "wires": [
            [
                "5ab846dd86676bd9"
            ]
        ]
    },
    {
        "id": "bd6e4fdddbba6fc1",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'pin_endstop2'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\n\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 3220,
        "wires": [
            []
        ]
    },
    {
        "id": "6c5ac99225af3153",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadB",
        "func": "var file = 'ssh'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\ndata = fs.readFileSync(filepath+file, 'utf8');\nif(data === '1' || data === 'True' || data === 'true'){\n    data = true;\n}\nelse{\n    data = false;\n}\nmsg.payload = data;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 340,
        "wires": [
            [
                "e9b4a07c9064e912"
            ]
        ]
    },
    {
        "id": "0405a76c4679834b",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadB",
        "func": "var file = 'smb'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\ndata = fs.readFileSync(filepath+file, 'utf8');\nif(data === '1' || data === 'True' || data === 'true'){\n    data = true;\n}\nelse{\n    data = false;\n}\nmsg.payload = data;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 380,
        "wires": [
            [
                "96880be90c95c772"
            ]
        ]
    },
    {
        "id": "1fce6a2d05974b5d",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadB",
        "func": "var file = 'advanced_settings'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\ndata = fs.readFileSync(filepath+file, 'utf8');\nif(data === '1' || data === 'True' || data === 'true'){\n    data = true;\n}\nelse{\n    data = false;\n}\nmsg.payload = data;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 640,
        "wires": [
            [
                "9e64bba843cb6bea"
            ]
        ]
    },
    {
        "id": "78798fe4c8f157f2",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadS",
        "func": "var file = 'camera'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = String(data.replace(/(\\r\\n|\\n|\\r)/gm,\"\"));\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 420,
        "wires": [
            [
                "e3efa884c5bf7dc6"
            ]
        ]
    },
    {
        "id": "18e1a20a1f1e1fa2",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadS",
        "func": "var file = 'model'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = String(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 600,
        "wires": [
            [
                "9b557f82cccc17b7"
            ]
        ]
    },
    {
        "id": "c236b1cea41ee98e",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "msg",
        "func": "msg.payload = 'This is a free piece of software and it is provided as is, without any warranty. <br>There might be functions that need a connection to the internet: '+\n    '<br><br>By pressing GET FEATURES you agree that the shown preview image will be transfered, stored and processed via SFTP  to my servers '+\n    '(Thomas Megel, OpenScan, Halle, Germany). The IP address will be saved for 14 days  The images might be used for further experiments (e.g. machine learning, automation ...). '+\n    '<br><br>By entering a token and/or pressing UPLOAD, the device will create a connection to my servers, where the associated user information is stored (token, email, name, credit, limit_photos, limit_filesize)'+\n    'The selected image set will be uploaded to Dropbox Inc via one-time temporary upload link. The files will be saved on Dropbox Inc. for a maximum of 7 days. (+the time Dropbox Inc. will need to delete the files permanently)'+\n    'Processing will be done on my local servers, where the images get downloaded from Dropbox and processed on my workstations. The resulting 3D model will be uploaded to Dropbox and a link will be created and send to your email address from my google mail account.'+\n    '<br><br>By uploading data to my servers, you agree, that I can use those images and derived 3d models for further research and to improve my services.'+\n    'The raw images and resulting 3d models will never be published without your explicit consent.'+  \n    '<br><br>If you have any questions you can contact me at info@openscan.eu.'+ \n    '<br><br>THE SOFTWARE IS PROVIDED AS IS WITHOUT '+\n    'WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE'+ \n    'AND NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY,'+ \n    'WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE';\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 300,
        "wires": [
            [
                "94191b467820dcc3"
            ]
        ]
    },
    {
        "id": "e8b5f5515c034bad",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "if(msg.payload === 'Agree'){\n    data = true;\n}\nelse{\n    data = false;\n}\nvar file = 'terms'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nfs.writeFile(filepath+file, String(data), err => {\n  if (err) {\n    return msg\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "8e8e9213fa60c699",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadS",
        "func": "var file = 'hostname'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = String(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 940,
        "wires": [
            [
                "35fcdea3db803ff3"
            ]
        ]
    },
    {
        "id": "35fcdea3db803ff3",
        "type": "ui_text_input",
        "z": "cf7a4625417bfc11",
        "name": "",
        "label": "Hostname",
        "tooltip": "",
        "group": "0fe66c9190b8a87c",
        "order": 6,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "Change hostname to:",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 530,
        "y": 940,
        "wires": [
            [
                "10db27fa22ae5eac"
            ]
        ]
    },
    {
        "id": "f59f1363641515dd",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "msg",
        "func": "msg.enabled = false\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 980,
        "wires": [
            [
                "7e5bceaf8971ed98"
            ]
        ]
    },
    {
        "id": "56539934f98e5483",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "msg",
        "func": "ssid = msg.payload\nmsg.topic = 'Add wifi network (' + ssid + ')'\nmsg.payload = 'Enter Wifi password:'\nmsg.ssid = ssid\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 980,
        "wires": [
            [
                "0c93091ae3646f50"
            ]
        ]
    },
    {
        "id": "ec97ed3aeb19327d",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "chk/change hostname",
        "func": "from OpenScan import save\n\nif msg['payload'] != 'OK':\n    pass\n\nwith open('/etc/hostname', 'r') as file:\n    old_hostname = file.read().replace('\\n','')\n\nhostname = msg['hostname']\nif len(hostname) < 4 :\n    msg['payload'] = ' '\n    msg['topic'] = 'ERROR - Hostname NOT changed'\n    return msg\n    \n\nwith open('/etc/hostname', 'w+') as file:\n    file.write(hostname)\nos.system('echo ' + hostname + ' | sudo tee /etc/hostname')\nwith open('/etc/hosts', 'r') as file:\n    temp = file.read()\ntemp = temp.replace(old_hostname,hostname)\nwith open('/etc/hosts', 'w') as file:\n    file.write(temp)\nos.system('sudo hostnamectl set-hostname ' + hostname)\nos.system('sudo systemctl restart avahi-daemon')\nsave('hostname',hostname)\nmsg['payload'] = hostname\nmsg['topic'] = 'Success - Hostname changed'\nreturn msg\n",
        "outputs": 1,
        "x": 1140,
        "y": 940,
        "wires": [
            [
                "2473d2ee06695ad8"
            ]
        ]
    },
    {
        "id": "b9f7861671638a92",
        "type": "ui_toast",
        "z": "cf7a4625417bfc11",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Confirm",
        "x": 920,
        "y": 940,
        "wires": [
            [
                "ec97ed3aeb19327d"
            ]
        ]
    },
    {
        "id": "10db27fa22ae5eac",
        "type": "change",
        "z": "cf7a4625417bfc11",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hostname",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 940,
        "wires": [
            [
                "b9f7861671638a92"
            ]
        ]
    },
    {
        "id": "5fc526416e8b9043",
        "type": "link in",
        "z": "cf7a4625417bfc11",
        "name": "reboot",
        "links": [
            "422449700d52a894",
            "72bef1509f4f49d2"
        ],
        "x": 155,
        "y": 680,
        "wires": [
            [
                "f9282909f67def49",
                "102729ca174de821"
            ]
        ]
    },
    {
        "id": "9fdee8bd1db81df8",
        "type": "link in",
        "z": "cf7a4625417bfc11",
        "name": "shutdown",
        "links": [
            "662940a6a8f09348"
        ],
        "x": 155,
        "y": 840,
        "wires": [
            [
                "102729ca174de821",
                "a2747f12e5af77f4"
            ]
        ]
    },
    {
        "id": "78e46658c166d48e",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "msg",
        "func": "if (msg.payload === 'Cancel'){\n    return\n}\nmsg.forename = msg.payload\nmsg.topic = 'OpenScanCloud Registration (3/3)'\nmsg.payload = 'Enter your last name'\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1520,
        "wires": [
            [
                "d5ce5edcd84940fd"
            ]
        ]
    },
    {
        "id": "adc06da0b1a2c77c",
        "type": "ui_button",
        "z": "cf7a4625417bfc11",
        "name": "OSC",
        "group": "db43d646.2074c8",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "transparent",
        "className": "",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 610,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "27bf2c9bc0035a3b",
        "type": "ui_button",
        "z": "cf7a4625417bfc11",
        "name": "Scan_settings",
        "group": "7aaf184330605300",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "transparent",
        "className": "",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 640,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "50a2fd56be1377f0",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "Reset rfkill",
        "func": "from os import system\nif \"Interface doesn't support scanning\" in msg['payload']:\n    system('rfkill unblock all')\n    system('sudo ifconfig wlan0 up')\n    return msg",
        "outputs": 1,
        "x": 390,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "5c470fa241276db1",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'rotor_anglemin'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1660,
        "wires": [
            [
                "86f93d3fe3b4ae9f"
            ]
        ]
    },
    {
        "id": "7f50a7b130580fed",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "d49a6dfd7fb17096",
        "order": 5,
        "width": 3,
        "height": 1,
        "name": "rotor_anglemin",
        "label": "Min Angle",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 780,
        "y": 1660,
        "wires": []
    },
    {
        "id": "49266370cc71d7a5",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'rotor_anglemin'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "86f93d3fe3b4ae9f",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "rotor_anglemin",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "-90",
        "max": "90",
        "step": "5",
        "className": "",
        "x": 440,
        "y": 1660,
        "wires": [
            [
                "49266370cc71d7a5"
            ]
        ]
    },
    {
        "id": "1355f80c11335547",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "rotor_anglemax",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 8,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "-90",
        "max": "90",
        "step": "5",
        "className": "",
        "x": 440,
        "y": 1700,
        "wires": [
            [
                "0aab074cb517d6cb"
            ]
        ]
    },
    {
        "id": "159d1f8dced596b6",
        "type": "ui_slider",
        "z": "cf7a4625417bfc11",
        "name": "rotor_anglestart",
        "label": "",
        "tooltip": "",
        "group": "d49a6dfd7fb17096",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "-90",
        "max": "90",
        "step": "5",
        "className": "",
        "x": 440,
        "y": 1740,
        "wires": [
            [
                "47f73d9cae2a248e"
            ]
        ]
    },
    {
        "id": "949bc6d03c0575fd",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'rotor_anglemax'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1700,
        "wires": [
            [
                "1355f80c11335547"
            ]
        ]
    },
    {
        "id": "0aab074cb517d6cb",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'rotor_anglemax'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "f0e2a6ea09a659b7",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "loadI",
        "func": "var file = 'rotor_anglestart'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = parseInt(data);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1740,
        "wires": [
            [
                "159d1f8dced596b6"
            ]
        ]
    },
    {
        "id": "47f73d9cae2a248e",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "write",
        "func": "var file = 'rotor_anglestart'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "7276d14735908023",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "d49a6dfd7fb17096",
        "order": 7,
        "width": 3,
        "height": 1,
        "name": "rotor_anglemax",
        "label": "Max Angle",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 780,
        "y": 1700,
        "wires": []
    },
    {
        "id": "90f421749191e1e1",
        "type": "ui_text",
        "z": "cf7a4625417bfc11",
        "group": "d49a6dfd7fb17096",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "rotor_anglestart",
        "label": "Start Angle",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 780,
        "y": 1740,
        "wires": []
    },
    {
        "id": "b5296efaeda79919",
        "type": "link in",
        "z": "cf7a4625417bfc11",
        "name": "changeHostname",
        "links": [
            "ec2db55a99bbe3ee",
            "d5175561293ef490",
            "d172fc8f3a0e34a1"
        ],
        "x": 835,
        "y": 900,
        "wires": [
            [
                "8bb9d34ad43d84e4"
            ]
        ]
    },
    {
        "id": "8bb9d34ad43d84e4",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "chk",
        "func": "with open('/etc/hostname', 'r') as file:\n    old_hostname = file.read().replace('\\n','')\nif old_hostname == 'raspberrypi':\n    msg['hostname'] = 'openscan'\n    msg['payload'] = 'OK'\n    return msg",
        "outputs": 1,
        "x": 930,
        "y": 900,
        "wires": [
            [
                "ec97ed3aeb19327d"
            ]
        ]
    },
    {
        "id": "81f507a72e0c3a91",
        "type": "ui_button",
        "z": "cf7a4625417bfc11",
        "name": "scan_arducam",
        "group": "90223f7ddc082321",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "transparent",
        "className": "",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 640,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "c6a95e385f50ef43",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "enable routine",
        "func": "msg_enable = {}\nmsg_disable = {}\n\nmsg_enable['enabled'] = True\nmsg_disable['enabled'] = False\n\nif msg['payload'] == 'external':\n    return msg_enable, msg_disable\nif msg['payload'] == 'gphoto':\n    return msg_enable, msg_enable, msg_disable\n\nreturn msg_enable",
        "outputs": 3,
        "x": 560,
        "y": 440,
        "wires": [
            [
                "e669d0dcdba82672"
            ],
            [
                "0b2c9cabd27fc211"
            ],
            [
                "753fe45ab2bb680a"
            ]
        ]
    },
    {
        "id": "e669d0dcdba82672",
        "type": "link out",
        "z": "cf7a4625417bfc11",
        "name": "",
        "mode": "link",
        "links": [
            "687324fa9f880247",
            "e5f855e1e37c8b8f",
            "7e7cc46daa2272f3",
            "1a4505e0b90bb552"
        ],
        "x": 675,
        "y": 420,
        "wires": []
    },
    {
        "id": "0b2c9cabd27fc211",
        "type": "link out",
        "z": "cf7a4625417bfc11",
        "name": "",
        "mode": "link",
        "links": [
            "687324fa9f880247",
            "e5f855e1e37c8b8f",
            "7e7cc46daa2272f3",
            "1a4505e0b90bb552"
        ],
        "x": 715,
        "y": 440,
        "wires": []
    },
    {
        "id": "753fe45ab2bb680a",
        "type": "link out",
        "z": "cf7a4625417bfc11",
        "name": "",
        "mode": "link",
        "links": [
            "7e7cc46daa2272f3"
        ],
        "x": 675,
        "y": 460,
        "wires": []
    },
    {
        "id": "5104df3fd053770e",
        "type": "link in",
        "z": "cf7a4625417bfc11",
        "name": "enable projectname",
        "links": [
            "d172fc8f3a0e34a1"
        ],
        "x": 135,
        "y": 340,
        "wires": [
            [
                "6c5ac99225af3153",
                "0405a76c4679834b",
                "78798fe4c8f157f2",
                "18e1a20a1f1e1fa2",
                "1fce6a2d05974b5d"
            ]
        ]
    },
    {
        "id": "84639c34c28a8826",
        "type": "link in",
        "z": "cf7a4625417bfc11",
        "name": "enable projectname",
        "links": [
            "d172fc8f3a0e34a1"
        ],
        "x": 155,
        "y": 760,
        "wires": [
            [
                "102729ca174de821"
            ]
        ]
    },
    {
        "id": "f73a6fac3ba4cefd",
        "type": "link in",
        "z": "cf7a4625417bfc11",
        "name": "enable projectname",
        "links": [
            "d172fc8f3a0e34a1"
        ],
        "x": 135,
        "y": 940,
        "wires": [
            [
                "8e8e9213fa60c699"
            ]
        ]
    },
    {
        "id": "6282e5b44fe4d0c7",
        "type": "link in",
        "z": "cf7a4625417bfc11",
        "name": "enable projectname",
        "links": [
            "d172fc8f3a0e34a1"
        ],
        "x": 135,
        "y": 1020,
        "wires": [
            [
                "2267a98f71d4e15e",
                "b36466984d200115"
            ]
        ]
    },
    {
        "id": "71e8a81927603df6",
        "type": "link in",
        "z": "cf7a4625417bfc11",
        "name": "enable projectname",
        "links": [
            "d172fc8f3a0e34a1"
        ],
        "x": 175,
        "y": 1660,
        "wires": [
            [
                "5c470fa241276db1",
                "949bc6d03c0575fd",
                "f0e2a6ea09a659b7",
                "8f844920ab469963",
                "1081863999a3f9af",
                "fdf195ea7352e84b",
                "0fcc2354f5ab1ff3",
                "f1b83f06095fd913",
                "e553d816203f9f7e",
                "9e187219a99f7c7c",
                "53246db035c2e32f",
                "01dd54e2e4757cdc",
                "172d595502027aa3",
                "d8d4db157496aa13",
                "ebe2d0d8397696c9"
            ]
        ]
    },
    {
        "id": "6f99e81d569bcce7",
        "type": "link in",
        "z": "cf7a4625417bfc11",
        "name": "enable projectname",
        "links": [
            "d172fc8f3a0e34a1"
        ],
        "x": 155,
        "y": 2380,
        "wires": [
            [
                "69812ca722917f35",
                "e9c7990eb61d4376",
                "b9e114b6eaa91810",
                "ddb9114cffca8992",
                "63a41c60446017c4",
                "43ea4a0a0aa6253f",
                "7fa3a127afc9af95",
                "4c913be220246a5d",
                "76a82df9af1471d6",
                "648d6fa814940536"
            ]
        ]
    },
    {
        "id": "22ac236b9c639610",
        "type": "link in",
        "z": "cf7a4625417bfc11",
        "name": "enable projectname",
        "links": [
            "d172fc8f3a0e34a1"
        ],
        "x": 155,
        "y": 2820,
        "wires": [
            [
                "a04bbb4b8c958df5",
                "a1a4c29d69c89b25",
                "50cf4e2bfe5d03c0",
                "93202e9e54943a21",
                "1901850af273e744",
                "234318d37e620ed4",
                "78328853ae97a339",
                "3cab18cb91c15e72",
                "9fa1ceb54b01e65b",
                "332f9e5bdab22f49",
                "7b7f4e7745df62eb"
            ]
        ]
    },
    {
        "id": "a038a9df0fca96de",
        "type": "ui_button",
        "z": "cf7a4625417bfc11",
        "name": "Reset default",
        "group": "4fe6b4c0ade0938a",
        "order": 15,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Restore default settings",
        "tooltip": "",
        "color": "red",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "This can not be undone!",
        "payloadType": "str",
        "topic": "Restore default settings?",
        "topicType": "str",
        "x": 1050,
        "y": 300,
        "wires": [
            [
                "c148f21664a08eef"
            ]
        ]
    },
    {
        "id": "c148f21664a08eef",
        "type": "ui_toast",
        "z": "cf7a4625417bfc11",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "No",
        "cancel": "Yes",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1210,
        "y": 300,
        "wires": [
            [
                "22e35e3ab666f335"
            ]
        ]
    },
    {
        "id": "22e35e3ab666f335",
        "type": "function",
        "z": "cf7a4625417bfc11",
        "name": "msg",
        "func": "msg.overwrite = true\nif(msg.payload == \"Yes\"){\n    return msg}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 300,
        "wires": [
            [
                "d0683f1f7332675b"
            ]
        ]
    },
    {
        "id": "d0683f1f7332675b",
        "type": "link out",
        "z": "cf7a4625417bfc11",
        "name": "",
        "mode": "link",
        "links": [
            "4f6aaf1c10d1676d"
        ],
        "x": 1435,
        "y": 300,
        "wires": []
    },
    {
        "id": "0189d1eb358581a5",
        "type": "python3-function",
        "z": "cf7a4625417bfc11",
        "name": "boot-cam",
        "func": "import subprocess\nfrom OpenScan import load_str\n\ncamera_modules = ('imx519', 'imx219', 'ov5647', 'imx477', 'imx378', 'ov9281', 'imx290a', 'imx290b')\n\npt1 = \"[all]\\n\\ncamera_auto_detect=0\\ngpu_mem=256\\ndtoverlay=vc4-fkms-v3d\\ndtoverlay=\"\npt3 = \",media-controller=0\\n\"\n\nwith open('/boot/config.txt', 'r') as file:\n    config = file.read()\n\ncamera = load_str('camera')\nif camera not in camera_modules:\n    msg['payload'] = 'no changes'\n    return\n\nif camera == 'imx290a':\n    camera = 'imx290,clock-frequency=37125000'\nelif camera == 'imx290b':\n    camera = 'imx290,clock-frequency=74250000'\n\nconfig_keep = config.split('[all]\\n')[0]\nconfig_new = config_keep + pt1 + camera + pt3\n\nwith open('/boot/config.txt', 'w') as file:\n    file.write(config_new)\n\nmsg['topic'] = 'Camera configuration changed'\nmsg['payload'] = 'Please restart the device'\n\nreturn msg",
        "outputs": 1,
        "x": 680,
        "y": 500,
        "wires": [
            [
                "71457ac63e853269"
            ]
        ]
    },
    {
        "id": "71457ac63e853269",
        "type": "ui_toast",
        "z": "cf7a4625417bfc11",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 830,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "3506a9b9141bc022",
        "type": "debug",
        "z": "cf7a4625417bfc11",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 1440,
        "wires": []
    },
    {
        "id": "192a1636d6695656",
        "type": "python3-function",
        "z": "76ceeb3aa3cdb4d7",
        "name": "create beta/main update",
        "func": "import json\nimport shutil\n\nscope = 'beta'\n#scope = 'main'\n\nmsg= {}\nmsg[scope]={}\nmsg[scope]['1'] = {}\nmsg[scope]['1']['src'] = scope + '/fla.py'\nmsg[scope]['1']['dst'] = '/home/pi/OpenScan/files/fla.py'\n\nmsg[scope]['2'] = {}\nmsg[scope]['2']['src'] = scope + '/Arducam.py'\nmsg[scope]['2']['dst'] = '/usr/lib/python3/dist-packages/Arducam.py'\n\nmsg[scope]['3'] = {}\nmsg[scope]['3']['src'] = scope + '/OpenScan.py'\nmsg[scope]['3']['dst'] = '/usr/lib/python3/dist-packages/OpenScan.py'\n\nmsg[scope]['4'] = {}\nmsg[scope]['4']['src'] = scope + '/config.txt'\nmsg[scope]['4']['dst'] = '/boot/config.txt'\n\nmsg[scope]['5'] = {}\nmsg[scope]['5']['src'] = scope + '/flows.json'\nmsg[scope]['5']['dst'] = '/home/pi/OpenScan/settings/.node-red/flows.json'\n\nmsg[scope]['6'] = {}\nmsg[scope]['6']['src'] = scope + '/settings.js'\nmsg[scope]['6']['dst'] = '/root/.node-red/settings.js'\n\nmsg[scope]['7'] = {}\nmsg[scope]['7']['src'] = 'files/logo.jpg'\nmsg[scope]['7']['dst'] = '/home/pi/OpenScan/files/logo.jpg'\n\nfor i in msg[scope]:\n    filepath = msg[scope][i]['dst']\n    filesize = os.path.getsize(filepath)\n    msg[scope][i]['filesize'] = filesize\n\nif os.path.isdir('/home/pi/OpenScan/tmp/update/'):\n    os.system('rm -r /home/pi/OpenScan/tmp/update')    \nos.makedirs('/home/pi/OpenScan/tmp/update/')\n\nwith open('/home/pi/OpenScan/tmp/update/update_' + scope + '.json', 'w+') as f:\n    json.dump(msg, f, indent=4)\n\nfor i in msg[scope]:\n    if not os.path.isdir(os.path.dirname('/home/pi/OpenScan/tmp/update/' + msg[scope][i]['src'])):\n        os.makedirs(os.path.dirname('/home/pi/OpenScan/tmp/update/' + msg[scope][i]['src']))\n    shutil.copy(msg[scope][i]['dst'], '/home/pi/OpenScan/tmp/update/' + msg[scope][i]['src'])\n\nreturn msg\n\nma",
        "outputs": 1,
        "x": 1290,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "f0ad1def1331b26c",
        "type": "python3-function",
        "z": "76ceeb3aa3cdb4d7",
        "name": "get update",
        "func": "import json\nimport requests\nfrom OpenScan import load_str\n\nif not msg['payload']:\n    msg['status'] = '--READY--'\n    return msg\n\nupdatepath = '/home/pi/OpenScan/updates/'\nurl = 'https://raw.githubusercontent.com/OpenScanEu/OpenScan2/main/update/'\nupdatepath_temp = updatepath + 'update_temp.json'\nupdatepath_old = updatepath + 'update.json'\n\nr = requests.get(url + 'update.json')\n\nif r.status_code != 200:\n    msg['status'] = 'no internet connection'\n    return msg\n\nwith open(updatepath_temp, 'wb+') as file:\n    file.write(r.content)\nwith open(updatepath_temp, 'r') as file:\n    msg = json.load(file)\n\nmsg['status'] = 'checking updates'\n\nreturn msg, msg",
        "outputs": 2,
        "x": 310,
        "y": 240,
        "wires": [
            [
                "da5e1139366aad49"
            ],
            [
                "719c89492dfb24f4"
            ]
        ]
    },
    {
        "id": "92ece2f354342080",
        "type": "ui_text",
        "z": "76ceeb3aa3cdb4d7",
        "group": "ddbd496e.93a288",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status:",
        "format": "{{msg.status}}",
        "layout": "row-spread",
        "className": "",
        "x": 170,
        "y": 100,
        "wires": []
    },
    {
        "id": "719c89492dfb24f4",
        "type": "python3-function",
        "z": "76ceeb3aa3cdb4d7",
        "name": "check files",
        "func": "import json\nimport requests\nimport shutil\nfrom OpenScan import load_str\n\nscope = load_str('update_type')\nmsg['scope'] = scope\n\nupdatepath = '/home/pi/OpenScan/updates/'\nurl = 'https://raw.githubusercontent.com/OpenScanEu/OpenScan2/main/update/'\nupdatepath_old = updatepath + 'update.json'\n\ncounter = 0\nfor i in msg[scope]:\n    filepath = msg[scope][i]['dst']\n    temp = updatepath + os.path.basename(filepath)\n    if os.path.isfile(temp):\n        filesize = os.path.getsize(temp)\n        msg[scope][i]['filesize2'] = filesize\n        if filesize == msg[scope][i]['filesize']:\n            msg[scope][i]['update'] = False\n            continue\n    msg[scope][i]['update'] = True\n\n    counter += 1\n\nif counter == 0:\n    msg['status'] = 'No new update available'\nelse:\n    msg['status'] = 'New update available'\n    msg['topic'] = msg['status']\n    msg['payload'] = 'Install & reboot now?'\n\nmsg['counter'] = counter # new file counter\n\nreturn msg\n",
        "outputs": 1,
        "x": 470,
        "y": 260,
        "wires": [
            [
                "da5e1139366aad49",
                "e106247128f06430"
            ]
        ]
    },
    {
        "id": "0500f98e20f085f4",
        "type": "link in",
        "z": "76ceeb3aa3cdb4d7",
        "name": "",
        "links": [
            "d172fc8f3a0e34a1"
        ],
        "x": 75,
        "y": 140,
        "wires": [
            [
                "5e11f04504524df2",
                "0fe81b18c75519e8",
                "2322cc5af05010c2"
            ]
        ]
    },
    {
        "id": "5e11f04504524df2",
        "type": "function",
        "z": "76ceeb3aa3cdb4d7",
        "name": "loadS",
        "func": "var file = 'update_type'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst data = fs.readFileSync(filepath+file, 'utf8');\nmsg.payload = String(data.replace(/(\\r\\n|\\n|\\r)/gm,\"\"));\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 180,
        "wires": [
            [
                "8f656f5ebc96ceff"
            ]
        ]
    },
    {
        "id": "8f656f5ebc96ceff",
        "type": "ui_dropdown",
        "z": "76ceeb3aa3cdb4d7",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "ddbd496e.93a288",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "stable",
                "value": "main",
                "type": "str"
            },
            {
                "label": "beta",
                "value": "beta",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 300,
        "y": 180,
        "wires": [
            [
                "e16a58e7c591dc50"
            ]
        ]
    },
    {
        "id": "e16a58e7c591dc50",
        "type": "function",
        "z": "76ceeb3aa3cdb4d7",
        "name": "write",
        "func": "var file = 'update_type'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "65a48d682a1ee228",
        "type": "ui_text",
        "z": "76ceeb3aa3cdb4d7",
        "group": "ddbd496e.93a288",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Updatetype: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 570,
        "y": 180,
        "wires": []
    },
    {
        "id": "76921174b4bf3316",
        "type": "ui_switch",
        "z": "76ceeb3aa3cdb4d7",
        "name": "",
        "label": "Auto-check update availability",
        "tooltip": "",
        "group": "ddbd496e.93a288",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 370,
        "y": 140,
        "wires": [
            [
                "84488e9a6b022ec8"
            ]
        ]
    },
    {
        "id": "0fe81b18c75519e8",
        "type": "function",
        "z": "76ceeb3aa3cdb4d7",
        "name": "loadB",
        "func": "var file = 'update_auto'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\ndata = fs.readFileSync(filepath+file, 'utf8');\nif(data === '1' || data === 'True' || data === 'true'){\n    data = true;\n}\nelse{\n    data = false;\n}\nmsg.payload = data;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 140,
        "wires": [
            [
                "76921174b4bf3316"
            ]
        ]
    },
    {
        "id": "84488e9a6b022ec8",
        "type": "function",
        "z": "76ceeb3aa3cdb4d7",
        "name": "write",
        "func": "var file = 'update_auto'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\nconst content = String(msg.payload)\nfs.writeFile(filepath + file, content, err => {\n  if (err) {\n    return\n  }\n  });",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e106247128f06430",
        "type": "ui_toast",
        "z": "76ceeb3aa3cdb4d7",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "NO",
        "cancel": "YES",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 630,
        "y": 260,
        "wires": [
            [
                "d0223f03240b034c",
                "362b02292cf3151c"
            ]
        ]
    },
    {
        "id": "e6bd35fb6b071dab",
        "type": "link in",
        "z": "76ceeb3aa3cdb4d7",
        "name": "update status",
        "links": [
            "da5e1139366aad49",
            "24d9fd12916d447b"
        ],
        "x": 75,
        "y": 100,
        "wires": [
            [
                "92ece2f354342080"
            ]
        ]
    },
    {
        "id": "da5e1139366aad49",
        "type": "link out",
        "z": "76ceeb3aa3cdb4d7",
        "name": "",
        "mode": "link",
        "links": [
            "e6bd35fb6b071dab"
        ],
        "x": 575,
        "y": 220,
        "wires": []
    },
    {
        "id": "3e0d5f959127f673",
        "type": "ui_button",
        "z": "76ceeb3aa3cdb4d7",
        "name": "",
        "group": "ddbd496e.93a288",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Check Updates",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 260,
        "wires": [
            [
                "f0ad1def1331b26c"
            ]
        ]
    },
    {
        "id": "d0223f03240b034c",
        "type": "python3-function",
        "z": "76ceeb3aa3cdb4d7",
        "name": "download files",
        "func": "import json\nimport requests\nimport shutil\nfrom OpenScan import load_str\n\n\nscope = msg['scope']\n\nupdatepath = '/home/pi/OpenScan/updates/'\nurl = 'https://raw.githubusercontent.com/OpenScanEu/OpenScan2/main/update/'\n\nif msg['payload'] != 'YES':\n    return\n\ncounter = 0\n\nfor i in msg[scope]:\n    if msg[scope][i]['update'] == False:\n        continue\n    \n    filepath = msg[scope][i]['dst']\n    temp = updatepath + os.path.basename(filepath)\n    \n    r = requests.get(url + msg[scope][i]['src'])\n    if r.status_code != 200:\n        msg['status'] = 'downloading ' + msg[scope][i]['src'] + ' failed'\n        return msg\n    with open(temp, 'wb+') as file:\n        file.write(r.content)\n    shutil.copy(temp, msg[scope][i]['dst'])\n    counter += 1\n\nmsg['status'] = 'Installed ' + str(counter) + ' of ' + str(msg['counter']) + ' - restarting ...'\n\nif counter == msg['counter']:\n    updatepath_temp = updatepath + 'update_temp.json'\n    updatepath_old = updatepath + 'update.json'\n    shutil.move(updatepath_temp, updatepath_old)\n\nreturn msg\n",
        "outputs": 1,
        "x": 800,
        "y": 260,
        "wires": [
            [
                "24d9fd12916d447b",
                "72bef1509f4f49d2"
            ]
        ]
    },
    {
        "id": "362b02292cf3151c",
        "type": "function",
        "z": "76ceeb3aa3cdb4d7",
        "name": "msg",
        "func": "if (msg.payload == 'YES'){\n    msg.status = 'Installing updates'\n    return msg}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 220,
        "wires": [
            [
                "24d9fd12916d447b"
            ]
        ]
    },
    {
        "id": "24d9fd12916d447b",
        "type": "link out",
        "z": "76ceeb3aa3cdb4d7",
        "name": "",
        "mode": "link",
        "links": [
            "e6bd35fb6b071dab"
        ],
        "x": 915,
        "y": 220,
        "wires": []
    },
    {
        "id": "2322cc5af05010c2",
        "type": "function",
        "z": "76ceeb3aa3cdb4d7",
        "name": "loadB",
        "func": "var file = 'update_auto'\nlet fs = global.get('fs');\nvar filepath = '/home/pi/OpenScan/settings/';\ndata = fs.readFileSync(filepath+file, 'utf8');\nif(data === '1' || data === 'True' || data === 'true'){\n    data = true;\n}\nelse{\n    data = false;\n}\n\nmsg.payload = data\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 220,
        "wires": [
            [
                "f0ad1def1331b26c"
            ]
        ]
    },
    {
        "id": "72bef1509f4f49d2",
        "type": "link out",
        "z": "76ceeb3aa3cdb4d7",
        "name": "",
        "mode": "link",
        "links": [
            "5fc526416e8b9043"
        ],
        "x": 915,
        "y": 260,
        "wires": []
    },
    {
        "id": "44ca2614e8579031",
        "type": "link in",
        "z": "76ceeb3aa3cdb4d7",
        "name": "",
        "links": [
            "d172fc8f3a0e34a1"
        ],
        "x": 75,
        "y": 380,
        "wires": [
            [
                "c665bc6132cd41b0"
            ]
        ]
    },
    {
        "id": "c665bc6132cd41b0",
        "type": "python3-function",
        "z": "76ceeb3aa3cdb4d7",
        "name": "msg",
        "func": "import subprocess\nmsg['raspbian'] = subprocess.getoutput(\"cat /etc/os-release | grep -i 'PRETTY_NAME'\")[13:-1]\nmsg['device'] = subprocess.getoutput(\"cat /proc/device-tree/model\")\nmsg['flask'] = subprocess.getoutput(\"systemctl status flask |grep -i 'Active:'\").split(' ')[6]\nreturn msg",
        "outputs": 1,
        "x": 170,
        "y": 380,
        "wires": [
            [
                "07a8b5fba523d4f5",
                "39f2811e58e3ed57",
                "5e77e82106b9c469"
            ]
        ]
    },
    {
        "id": "0fc46e11d82b20ac",
        "type": "inject",
        "z": "76ceeb3aa3cdb4d7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 320,
        "wires": [
            [
                "c665bc6132cd41b0"
            ]
        ]
    },
    {
        "id": "6d084167b176e176",
        "type": "ui_toast",
        "z": "76ceeb3aa3cdb4d7",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 430,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "d3a1e05c7eb54b6e",
        "type": "python3-function",
        "z": "76ceeb3aa3cdb4d7",
        "name": "msg",
        "func": "import subprocess\nmsg['payload'] = subprocess.getoutput(\"dmesg\").replace('\\n','<br>')\nreturn msg",
        "outputs": 1,
        "x": 270,
        "y": 500,
        "wires": [
            [
                "6d084167b176e176"
            ]
        ]
    },
    {
        "id": "d62fdee635b479d0",
        "type": "ui_button",
        "z": "76ceeb3aa3cdb4d7",
        "name": "",
        "group": "3ce32450.e0cffc",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "LOG - start",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 500,
        "wires": [
            [
                "d3a1e05c7eb54b6e"
            ]
        ]
    },
    {
        "id": "f7fa8fb09654be2f",
        "type": "ui_button",
        "z": "76ceeb3aa3cdb4d7",
        "name": "",
        "group": "3ce32450.e0cffc",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "LOG - sys",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 540,
        "wires": [
            [
                "fa6c0f978ae2f2a9"
            ]
        ]
    },
    {
        "id": "fa6c0f978ae2f2a9",
        "type": "python3-function",
        "z": "76ceeb3aa3cdb4d7",
        "name": "msg",
        "func": "import subprocess\nmsg['payload'] = subprocess.getoutput(\"tail -1000 /var/log/syslog\").replace('\\n','<br>')\nreturn msg",
        "outputs": 1,
        "x": 270,
        "y": 540,
        "wires": [
            [
                "6d084167b176e176"
            ]
        ]
    },
    {
        "id": "39f2811e58e3ed57",
        "type": "ui_text",
        "z": "76ceeb3aa3cdb4d7",
        "group": "3ce32450.e0cffc",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "OS:",
        "format": "{{msg.raspbian}}",
        "layout": "row-spread",
        "className": "",
        "x": 310,
        "y": 420,
        "wires": []
    },
    {
        "id": "5e77e82106b9c469",
        "type": "ui_text",
        "z": "76ceeb3aa3cdb4d7",
        "group": "3ce32450.e0cffc",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Flask:",
        "format": "{{msg.flask}}",
        "layout": "row-spread",
        "className": "",
        "x": 310,
        "y": 460,
        "wires": []
    },
    {
        "id": "07a8b5fba523d4f5",
        "type": "ui_text",
        "z": "76ceeb3aa3cdb4d7",
        "group": "3ce32450.e0cffc",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Device:",
        "format": "{{msg.device}}",
        "layout": "row-spread",
        "className": "",
        "x": 320,
        "y": 380,
        "wires": []
    },
    {
        "id": "03048ce3f23d57b3",
        "type": "python3-function",
        "z": "76ceeb3aa3cdb4d7",
        "name": "create beta new",
        "func": "import json\nimport requests\nimport shutil\n\n#scope = 'main'\nscope = 'beta'\n\nupdatepath = '/home/pi/OpenScan/tmp/'\nurl = 'https://raw.githubusercontent.com/OpenScanEu/OpenScan2/main/update/'\nupdatepath_temp = updatepath + 'update_temp.json'\nupdatepath_old = updatepath + 'update.json'\n\n\n## load update.json\nr = requests.get(url + 'update.json')\n\nif r.status_code != 200:\n    msg['status'] = 'download update.json failed'\n    return msg\n\nmsg = {}\nwith open(updatepath_temp, 'wb+') as file:\n    file.write(r.content)\nwith open(updatepath_temp, 'r') as file:\n    msg = json.load(file)\n\nmsg2 = msg.copy()\ndel msg[scope]\n\nmsg[scope]={}\nmsg[scope]['1'] = {}\nmsg[scope]['1']['src'] = scope + '/fla.py'\nmsg[scope]['1']['dst'] = '/home/pi/OpenScan/files/fla.py'\n\nmsg[scope]['2'] = {}\nmsg[scope]['2']['src'] = scope + '/Arducam.py'\nmsg[scope]['2']['dst'] = '/usr/lib/python3/dist-packages/Arducam.py'\n\nmsg[scope]['3'] = {}\nmsg[scope]['3']['src'] = scope + '/OpenScan.py'\nmsg[scope]['3']['dst'] = '/usr/lib/python3/dist-packages/OpenScan.py'\n\nmsg[scope]['4'] = {}\nmsg[scope]['4']['src'] = scope + '/config.txt'\nmsg[scope]['4']['dst'] = '/boot/config.txt'\n\nmsg[scope]['5'] = {}\nmsg[scope]['5']['src'] = scope + '/flows.json'\nmsg[scope]['5']['dst'] = '/home/pi/OpenScan/settings/.node-red/flows.json'\n\nmsg[scope]['6'] = {}\nmsg[scope]['6']['src'] = scope + '/settings.js'\nmsg[scope]['6']['dst'] = '/root/.node-red/settings.js'\n\nmsg[scope]['7'] = {}\nmsg[scope]['7']['src'] = 'files/logo.jpg'\nmsg[scope]['7']['dst'] = '/home/pi/OpenScan/files/logo.jpg'\n\nfor i in msg[scope]:\n    filepath = msg[scope][i]['dst']\n    filesize = os.path.getsize(filepath)\n    msg[scope][i]['filesize'] = filesize\n\nif os.path.isdir('/home/pi/OpenScan/tmp/update/'):\n    os.system('rm -r /home/pi/OpenScan/tmp/update')    \nos.makedirs('/home/pi/OpenScan/tmp/update/')\n\nwith open('/home/pi/OpenScan/tmp/update/update.json', 'w+') as f:\n    json.dump(msg, f, indent=4)\n\nfor i in msg[scope]:\n    if not os.path.isdir(os.path.dirname('/home/pi/OpenScan/tmp/update/' + msg[scope][i]['src'])):\n        os.makedirs(os.path.dirname('/home/pi/OpenScan/tmp/update/' + msg[scope][i]['src']))\n    shutil.copy(msg[scope][i]['dst'], '/home/pi/OpenScan/tmp/update/' + msg[scope][i]['src'])\n\nmsg['payload'] = 'created with scope: ' + scope\n\nreturn msg",
        "outputs": 1,
        "x": 1300,
        "y": 100,
        "wires": [
            [
                "dae9c0d7873b8b94"
            ]
        ]
    },
    {
        "id": "dae9c0d7873b8b94",
        "type": "debug",
        "z": "76ceeb3aa3cdb4d7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 100,
        "wires": []
    },
    {
        "id": "ca988a41c34c224d",
        "type": "inject",
        "z": "76ceeb3aa3cdb4d7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1040,
        "y": 380,
        "wires": [
            [
                "03048ce3f23d57b3"
            ]
        ]
    }
]